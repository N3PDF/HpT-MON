(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    539433,      10598]
NotebookOptionsPosition[    530524,      10435]
NotebookOutlinePosition[    531158,      10458]
CellTagsIndexPosition[    531070,      10453]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["CSS expansion in Mellin Space (Bozzi et. al)", \
"Title"]], "Chapter",
 CellChangeTimes->{{3.791273654873348*^9, 3.7912736574577208`*^9}, {
  3.791273706615746*^9, 3.791273731328961*^9}, {3.7912738585645037`*^9, 
  3.7912738636857653`*^9}, {3.826775321259921*^9, 3.826775344358584*^9}, {
  3.826775588426889*^9, 
  3.826775592203027*^9}},ExpressionUUID->"8a9ff98f-0bbf-418b-aa97-\
dac2163ebe2d"],

Cell[CellGroupData[{

Cell["Analytical expansion", "Chapter",
 CellChangeTimes->{{3.827985475320418*^9, 3.8279854830330467`*^9}, {
  3.827985514894835*^9, 
  3.827985518674445*^9}},ExpressionUUID->"722f086d-2af6-4144-a38c-\
74e54c86fa43"],

Cell["\<\
Before running this notebook, create a folder named datfiles in the same \
directory where this notebook is located.\
\>", "Text",
 CellChangeTimes->{{3.827166178894506*^9, 3.8271662147228637`*^9}, {
  3.827300621659182*^9, 
  3.827300622632512*^9}},ExpressionUUID->"9dcd3846-db54-4cba-96ed-\
6cb2d592fee8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.827039574508202*^9, 3.827039582222681*^9}, {
  3.827039809953933*^9, 3.8270398113668737`*^9}},
 CellTags->"SetDirectory_templates",
 CellLabel->"In[1]:=",ExpressionUUID->"9705a8fb-9b61-4663-9653-346d1ee7ea12"],

Cell[CellGroupData[{

Cell["Various Definitions", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9, {3.826782766029014*^9, 3.826782770573827*^9}, {
   3.826973387831129*^9, 3.826973390748942*^9}, 
   3.826975093290951*^9},ExpressionUUID->"167854bb-5de8-4f3a-8115-\
e1631bb625d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Subscript", "[", 
    RowBox[{"\[Gamma]0", ",", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"ToString", "/@", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]n", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Subscript", "[", 
    RowBox[{"\[Gamma]1", ",", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"ToString", "/@", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"C1", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Subscript", "[", 
    RowBox[{"C1", ",", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"ToString", "/@", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8269733942654257`*^9, 3.826973473852339*^9}, {
   3.8269940724700527`*^9, 3.8269941049506598`*^9}, {3.827983640023492*^9, 
   3.827983664375759*^9}, {3.827983707480394*^9, 3.827983709137785*^9}, 
   3.8279849645791683`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"0a8ebf0a-3577-4656-83dd-2eab2acc2206"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coefficient functions", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9, {3.826782766029014*^9, 3.826782770573827*^9}, {
   3.826973387831129*^9, 3.826973390748942*^9}, 3.826975093290951*^9, {
   3.827983699634728*^9, 
   3.827983713798818*^9}},ExpressionUUID->"3ef91cd9-199f-4d1f-a813-\
b1e0c3e6f33f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"C1gg", "=", "0"}], ";", 
  RowBox[{
   RowBox[{"C1gq", "[", "nn_", "]"}], ":=", 
   FractionBox["CF", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"nn", "+", "1"}], ")"}]}]]}], ";", 
  RowBox[{"hh1gg", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"11", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}]}]}], ";"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"e4754d1c-9cb5-4293-b9fe-bffa45deba57"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Anomalous Dimensions", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9, {3.826782766029014*^9, 3.826782770573827*^9}, {
   3.826787851444277*^9, 
   3.826787858708789*^9}},ExpressionUUID->"b48f08cb-ec50-48cc-b75d-\
28e46b285f7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"One", " ", "Loop", " ", "Anomalous", " ", "Dimension"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]Nqq", "[", "nn_", "]"}], ":=", 
     RowBox[{
      FractionBox["CF", "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["3", "2"], "-", 
        FractionBox["1", 
         RowBox[{"nn", "+", "1"}]], "-", 
        FractionBox["1", 
         RowBox[{"nn", "+", "2"}]], "-", 
        RowBox[{"PolyGamma", "[", 
         RowBox[{"nn", "+", "1"}], "]"}], "-", 
        RowBox[{"2", "EulerGamma"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]Nqg", "[", "nn_", "]"}], ":=", 
     RowBox[{
      FractionBox["nf", "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"nn", "+", "1"}]], "-", 
        FractionBox["2", 
         RowBox[{"nn", "+", "2"}]], "+", 
        FractionBox["2", 
         RowBox[{"nn", "+", "3"}]]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]Ngq", "[", "nn_", "]"}], ":=", 
     RowBox[{
      FractionBox["CF", "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["2", "nn"], "-", 
        FractionBox["2", 
         RowBox[{"nn", "+", "1"}]], "+", 
        FractionBox["1", 
         RowBox[{"nn", "+", "2"}]]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]Ngg", "[", "nn_", "]"}], ":=", 
     RowBox[{"CA", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "nn"], "-", 
        FractionBox["2", 
         RowBox[{"nn", "+", "1"}]], "+", 
        FractionBox["1", 
         RowBox[{"nn", "+", "2"}]], "-", 
        FractionBox["1", 
         RowBox[{"nn", "+", "3"}]], "-", 
        RowBox[{"PolyGamma", "[", 
         RowBox[{"nn", "+", "1"}], "]"}], "-", "EulerGamma", "+", 
        "\[Beta]0"}], ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8267878610941133`*^9, 3.8267878890576468`*^9}, {
   3.8267880878879128`*^9, 3.8267881208601007`*^9}, {3.826788233376998*^9, 
   3.826788277030122*^9}, {3.826993500484489*^9, 3.826993740009458*^9}, {
   3.826994154823534*^9, 3.826994173649962*^9}, 3.826995314595791*^9, {
   3.8277590847200203`*^9, 3.827759092803989*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0bd61deb-fa26-4a62-9ae6-7991b8e80256"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Two", " ", "Loops", " ", "Anomalous", " ", 
    RowBox[{"Dimension", " ", "[", 
     RowBox[{
     "Mellin", " ", "form", " ", "can", " ", "only", " ", "be", " ", 
      "computed", " ", "numerically"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]gg", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", "3"]}], "nf"}], "+", 
      RowBox[{
       FractionBox["27", "4"], 
       RowBox[{"Zeta", "[", "3", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sp1gg", "[", "x_", "]"}], ":=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"1", "-", "x"}]], 
      RowBox[{"(", 
       RowBox[{"16.75", "-", 
        FractionBox[
         RowBox[{"5", "nf"}], "6"], "-", 
        RowBox[{
         FractionBox["3", "4"], 
         SuperscriptBox["\[Pi]", "2"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sp2gg", "[", "x_", "]"}], ":=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"72", "x", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", "1"}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "nf", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "x"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "61"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "9"}], "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "9"}], "+", 
                    RowBox[{"109", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}], "+", 
           RowBox[{"9", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "x"}], ")"}]}], " ", 
               RowBox[{"(", 
                RowBox[{"25", "+", 
                 RowBox[{"109", " ", "x"}]}], ")"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Pi]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", "x", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "x", "+", 
                    SuperscriptBox["x", "2"]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "-", 
        RowBox[{"12", " ", "x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "nf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "x"}], ")"}], "2"]}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "x", "-", 
               SuperscriptBox["x", "2"]}], ")"}], "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"Log", "[", "x", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"108", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "x"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "x"}]}], ")"}], 
             "2"], " ", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "-", "x"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "x"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "x"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"225", "+", 
                 RowBox[{"99", " ", "x", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"4", " ", "x"}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", "nf", " ", 
                  RowBox[{"(", 
                   RowBox[{"9", "+", 
                    RowBox[{"13", " ", "x"}]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{"108", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "x", "+", 
                  SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
               RowBox[{"Log", "[", 
                RowBox[{"1", "+", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"648", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "x", "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", 
           RowBox[{"-", "x"}]}], "]"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]mgg", "[", 
      RowBox[{"n_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"n", "-", "1"}]], 
          RowBox[{"sp2gg", "[", "x", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{"n", "-", "1"}]], "-", "1"}], ")"}], 
          RowBox[{"sp1gg", "[", "x", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
      "\[Delta]gg"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.827113278671586*^9, 3.827113301348783*^9}, {
  3.827113764026958*^9, 3.827113808100054*^9}, {3.827113992661934*^9, 
  3.827113993764226*^9}, {3.827135369273376*^9, 3.82713541778579*^9}, {
  3.827135452088726*^9, 3.82713545387929*^9}, {3.827983514919176*^9, 
  3.827983572935831*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"280698ba-12ff-4cc3-92d4-607d9d974b23"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Large-N limits of the Anomalous Dimensions:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 3.826982720634457*^9}, {3.827235279040455*^9, 
  3.827235290678097*^9}, {3.827236002653586*^9, 
  3.8272360076225967`*^9}},ExpressionUUID->"48fdb9c5-4e42-4bd1-b040-\
748484b31ad7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]gqLargeN", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]qgLargeN", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]ggLargeN", "=", 
    RowBox[{
     RowBox[{"-", "CA"}], 
     RowBox[{"(", 
      RowBox[{"LN", "+", "EulerGamma"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"LN", "=", 
    RowBox[{"Log", "[", "n", "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.827236059675784*^9, 3.827236079031742*^9}, {
  3.827236153355014*^9, 3.827236209506297*^9}, {3.827236504098186*^9, 
  3.827236524633234*^9}, {3.827236648945203*^9, 3.827236649342257*^9}, {
  3.827236727396452*^9, 3.8272367908822803`*^9}, {3.827238093715683*^9, 
  3.82723810005193*^9}, {3.827240549837997*^9, 3.827240555841064*^9}, {
  3.827240684135336*^9, 3.827240702681201*^9}, {3.827759158899104*^9, 
  3.82775915933679*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"dad17c13-c5f8-47a2-82b9-38d4ab7ed2b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["H functions (contain the constant terms when pT\[Rule]0)", \
"Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9},ExpressionUUID->"7ae029ac-440f-4777-b817-\
4766231c4af0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H1", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"g", ",", "a"}], "]"}], 
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"g", ",", "b"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"h1g", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"B1", "+", 
          RowBox[{
           FractionBox["1", "2"], "B1", " ", "LQ"}]}], ")"}], "LQ"}], "-", 
       RowBox[{"pc", " ", "\[Beta]0", " ", "LR"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"g", ",", "a"}], "]"}], 
     RowBox[{"C1", "[", 
      RowBox[{"g", ",", "b"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"g", ",", "b"}], "]"}], 
     RowBox[{"C1", "[", 
      RowBox[{"g", ",", "a"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "a"}], "]"}], 
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"g", ",", "b"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "b"}], "]"}], 
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"g", ",", "a"}], "]"}]}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"LF", "-", "LQ"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H2", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.826775713705885*^9, 3.826775723083069*^9}, {
  3.826775794563634*^9, 3.826775821494261*^9}, {3.826775861786674*^9, 
  3.8267759253302593`*^9}, {3.826775977208521*^9, 3.8267760444729443`*^9}, {
  3.826776088493599*^9, 3.826776165030381*^9}, {3.8267800864794292`*^9, 
  3.82678009408857*^9}, {3.826786664021212*^9, 3.826786671964617*^9}, {
  3.8267898632178307`*^9, 3.8267898639271917`*^9}, {3.826992380741808*^9, 
  3.826992403764237*^9}, {3.827983478513797*^9, 3.827983479904554*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"77876523-1e45-4d79-9965-d0509079e7a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalSigma] functions (contain the singular terms when \
pT\[Rule]0)", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 
  3.826775662219036*^9}},ExpressionUUID->"9210d459-52b8-453f-92eb-\
bb4dfa480bc3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]12", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["A1", "2"]}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"g", ",", "a"}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"g", ",", "b"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]11", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "a"}], "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "b"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"B1", "+", 
         RowBox[{"A1", " ", "LQ"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "a"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"g", ",", "b"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "b"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"g", ",", "a"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]24", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", "A1", ")"}], "2"], "8"], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"g", ",", "a"}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"g", ",", "b"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]23", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "A1"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "3"], "\[Beta]0", " ", 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "a"}], "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "b"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"\[CapitalSigma]11", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]", "[", 
    RowBox[{"m_", ",", "n_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[CapitalSigma]11", "[", 
     RowBox[{"m", ",", "n"}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"m", ",", "a"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"n", ",", "b"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"n", ",", "b"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"m", ",", "a"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]22", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["A1", "2"]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H1", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "-", 
       RowBox[{"\[Beta]0", " ", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "a"}], "]"}], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "b"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"LR", "-", "LQ"}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A2", " ", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "a"}], "]"}], " ", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "b"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"B1", "+", 
          RowBox[{"A1", " ", "LQ"}], "-", "\[Beta]0"}], ")"}], 
        RowBox[{"\[CapitalSigma]11", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Xi]", "[", 
        RowBox[{"g", ",", "g", ",", "a", ",", "b"}], "]"}], "+", 
       RowBox[{"\[Xi]", "[", 
        RowBox[{"g", ",", "q", ",", "a", ",", "b"}], "]"}], "+", 
       RowBox[{"\[Xi]", "[", 
        RowBox[{"q", ",", "g", ",", "a", ",", "b"}], "]"}], "+", 
       RowBox[{"\[Xi]", "[", 
        RowBox[{"q", ",", "q", ",", "a", ",", "b"}], "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]", "[", 
    RowBox[{"m_", ",", "n_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"H1", "[", 
     RowBox[{"m", ",", "n"}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"m", ",", "a"}], "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"n", ",", "b"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"B1", "+", 
         RowBox[{"A1", " ", "LQ"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"m", ",", "a"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"n", ",", "b"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"n", ",", "b"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"m", ",", "a"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]21", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalSigma]11", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "\[Beta]0", 
     RowBox[{"(", 
      RowBox[{"LQ", "-", "LR"}], ")"}]}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Chi]", "[", 
       RowBox[{"g", ",", "g", ",", "a", ",", "b"}], "]"}], "+", 
      RowBox[{"\[Chi]", "[", 
       RowBox[{"g", ",", "q", ",", "a", ",", "b"}], "]"}], "+", 
      RowBox[{"\[Chi]", "[", 
       RowBox[{"q", ",", "g", ",", "a", ",", "b"}], "]"}], "+", 
      RowBox[{"\[Chi]", "[", 
       RowBox[{"q", ",", "q", ",", "a", ",", "b"}], "]"}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "a"}], "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "b"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"B2", "+", 
         RowBox[{"A2", " ", "LQ"}]}], ")"}]}], "-", 
      RowBox[{"\[Beta]0", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"g", ",", "a"}], "]"}], 
          RowBox[{"C1", "[", 
           RowBox[{"g", ",", "b"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"g", ",", "b"}], "]"}], 
          RowBox[{"C1", "[", 
           RowBox[{"g", ",", "a"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"g", ",", "a"}], "]"}], 
          RowBox[{"\[Gamma]n", "[", 
           RowBox[{"g", ",", "b"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"g", ",", "b"}], "]"}], 
          RowBox[{"\[Gamma]n", "[", 
           RowBox[{"g", ",", "a"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7912680146790123`*^9, 3.791268047201088*^9}, {
   3.79126808598851*^9, 3.791268090418388*^9}, {3.791268149729343*^9, 
   3.791268318887458*^9}, 3.7912683560328693`*^9, {3.791268387733553*^9, 
   3.791268396015605*^9}, {3.791268453173203*^9, 3.791268453426758*^9}, {
   3.7912687607645693`*^9, 3.791268799619454*^9}, {3.7912688310134563`*^9, 
   3.7912688361756*^9}, {3.791268901181983*^9, 3.791269057199025*^9}, {
   3.791269099926186*^9, 3.791269156864284*^9}, {3.79126931016634*^9, 
   3.7912693777797203`*^9}, {3.791269495163733*^9, 3.791269524992525*^9}, {
   3.791269602594758*^9, 3.7912698034442244`*^9}, {3.7912698493212557`*^9, 
   3.791270177445949*^9}, {3.791270230861576*^9, 3.791270285435473*^9}, {
   3.791270330735653*^9, 3.791270356720215*^9}, {3.7912705046361713`*^9, 
   3.791270593558174*^9}, {3.791271377428708*^9, 3.791271380063513*^9}, {
   3.8267817543377953`*^9, 3.826781829377541*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"07d68a33-dd34-4133-8462-29bd1696a6d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Fourier Inverse of Log(\[Chi]) where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Chi]", "=", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox["b", "2"], 
      RowBox[{
       SuperscriptBox["Q", "2"], "/", 
       SuperscriptBox["b0", "2"]}]}]}]}], TraditionalForm]],
  InitializationCell->True,ExpressionUUID->
  "1a34ade8-a5c2-4452-9dc9-c81c09a3e166"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 
  3.826780363133871*^9}},ExpressionUUID->"ac177e9d-edf9-4889-9b52-\
e05134c67649"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IC1", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["b0", "x"]}], 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"b0", " ", "x"}]}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       FractionBox["pt", "mH"]}], ",", 
      RowBox[{"b0", "\[Rule]", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "EulerGamma"}], "]"}]}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IC2", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "b0"}], "x"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"Log", "[", "x", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["BesselK", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"1", ",", 
         RowBox[{"b0", " ", "x"}]}], "]"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       FractionBox["pt", "mH"]}], ",", 
      RowBox[{"b0", "\[Rule]", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "EulerGamma"}], "]"}]}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IC3", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "b0"}], "x"]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"], "-", 
          RowBox[{"Zeta", "[", "2", "]"}]}], ")"}]}], "-", 
       RowBox[{"2", 
        RowBox[{
         SuperscriptBox["BesselK", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"1", ",", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"Log", "[", "x", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["BesselK", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"1", ",", 
         RowBox[{"b0", " ", "x"}]}], "]"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       FractionBox["pt", "mH"]}], ",", 
      RowBox[{"b0", "\[Rule]", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "EulerGamma"}], "]"}]}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IC4", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"4", "b0"}], "x"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "3"], "-", 
          RowBox[{"3", " ", 
           RowBox[{"Zeta", "[", "2", "]"}], 
           RowBox[{"Log", "[", "x", "]"}]}], "+", 
          RowBox[{"2", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"3", 
        RowBox[{
         SuperscriptBox["BesselK", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"1", ",", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"], "-", 
          RowBox[{"Zeta", "[", "2", "]"}]}], ")"}]}], "+", 
       RowBox[{"3", 
        RowBox[{
         SuperscriptBox["BesselK", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"1", ",", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"Log", "[", "x", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["BesselK", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"3", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"1", ",", 
         RowBox[{"b0", " ", "x"}]}], "]"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       FractionBox["pt", "mH"]}], ",", 
      RowBox[{"b0", "\[Rule]", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "EulerGamma"}], "]"}]}]}]}], "}"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.826780370011105*^9, 3.826780524513062*^9}, {
  3.8267806816274357`*^9, 3.8267806834590607`*^9}, {3.826780851384306*^9, 
  3.826780863032722*^9}, {3.826780901637658*^9, 3.826781167205944*^9}, {
  3.826788329334374*^9, 3.8267883413022213`*^9}, {3.826974607476489*^9, 
  3.826974607695559*^9}, {3.826974815425825*^9, 3.826974817081341*^9}, {
  3.826995375739154*^9, 3.826995416969507*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"eaa88ba6-9819-4d92-bf25-07f23a0b59f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Fourier Inverse of Log(\[Chi]) where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Chi]", "=", 
    RowBox[{
     SuperscriptBox["b", "2"], 
     RowBox[{
      SuperscriptBox["Q", "2"], "/", 
      SuperscriptBox["b0", "2"]}]}]}], TraditionalForm]],
  InitializationCell->True,ExpressionUUID->
  "2a287adb-4b05-4880-be66-de2172041c60"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}},ExpressionUUID->"ec8797df-a8ce-4e14-9aaf-\
55431b6a2344"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FC1", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      SuperscriptBox["x", "2"]]}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", " ", 
      FractionBox["pt", "mH"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FC2", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", 
       SuperscriptBox["x", "2"]]}], 
     RowBox[{"Log", "[", 
      FractionBox["1", 
       SuperscriptBox["x", "2"]], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", " ", 
      FractionBox["pt", "mH"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FC3", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", 
       SuperscriptBox["x", "2"]]}], 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       FractionBox["1", 
        SuperscriptBox["x", "2"]], "]"}], "2"]}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", " ", 
      FractionBox["pt", "mH"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FC4", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["4", 
       SuperscriptBox["x", "2"]]}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Log", "[", 
         FractionBox["1", 
          SuperscriptBox["x", "2"]], "]"}], "3"], "-", 
       RowBox[{"4", 
        RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", " ", 
      FractionBox["pt", "mH"]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.826780370011105*^9, 3.826780524513062*^9}, {
  3.8267806816274357`*^9, 3.8267806834590607`*^9}, {3.826780851384306*^9, 
  3.826780863032722*^9}, {3.826780901637658*^9, 3.826781167205944*^9}, {
  3.826781232966085*^9, 3.826781404791602*^9}, {3.8269745918080597`*^9, 
  3.8269745920270643`*^9}, {3.826995194960518*^9, 3.826995234821488*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"662389f0-a41e-4479-bc3f-04a3cf297210"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LO contribution (terms only proportional to \[Alpha]s)", "Subchapter",
 CellChangeTimes->{{3.791270415261487*^9, 3.791270427402686*^9}, {
  3.791273752667684*^9, 3.791273787663987*^9}, {3.8267767197341537`*^9, 
  3.826776727711043*^9}, {3.826974886705041*^9, 3.826974888561879*^9}, {
  3.827983769129311*^9, 3.827983782941884*^9}, {3.827984543899065*^9, 
  3.8279845454908524`*^9}},ExpressionUUID->"2746f9b0-64be-4894-aeda-\
b94cf3da3563"],

Cell["\<\
Here, we are only interested in the LO contribution at small-pt (pt\[Rule]0), \
therefore neglecting all the constant terms in the expansion.\
\>", "Text",
 CellChangeTimes->{{3.827983788840517*^9, 
  3.827983848466444*^9}},ExpressionUUID->"b2ae5d29-770c-4670-bfa5-\
be2225e9964e"],

Cell[CellGroupData[{

Cell["Analytical expression of the coefficients:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 
  3.826982720634457*^9}},ExpressionUUID->"9c6d0b0c-d259-46fb-b2cc-\
20505568dd2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalSigma]12", "[", 
     RowBox[{"g", ",", "g"}], "]"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalSigma]11", "[", 
      RowBox[{"g", ",", "g"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"B1", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"-", "2"}], "\[Beta]0"}]}], "}"}]}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"Coefficients", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{"LC2", ",", "LC1"}], "}"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8269827498666162`*^9, 3.826982780185812*^9}, {
   3.827982427118257*^9, 3.827982436506675*^9}, 3.827982471111291*^9, {
   3.82798422657983*^9, 3.82798422682026*^9}, {3.8279842574918547`*^9, 
   3.827984270043408*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"1ccd3872-b1b0-40fb-8c8b-c881f3b23908"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["A1", "2"]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
    RowBox[{"2", " ", "\[Beta]0"}], "-", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.826982781373499*^9, 3.827982441262499*^9, 
  3.827982472797635*^9, 3.827984900786828*^9, 3.82798497914771*^9, 
  3.827986130956717*^9, 3.827988026801734*^9, 3.8280242421516933`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"6e9c8ce7-ab0d-49f8-990b-057edc631ef3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LO terms:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 3.826982720634457*^9}, {3.827984644527821*^9, 
  3.8279846457435913`*^9}},ExpressionUUID->"db706cb9-d6ca-4c83-a914-\
ef5a224a8bce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Normalized", " ", "cross"}], "-", "section"}], ",", " ", 
    RowBox[{"ie", " ", "divided", " ", "by", " ", "\[Sigma]0"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d\[Sigma]LO", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalSigma]12", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC2"}], "+", 
      RowBox[{
       RowBox[{"\[CapitalSigma]11", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC1"}]}], 
     RowBox[{"(*", 
      RowBox[{"+", 
       RowBox[{"H1", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], "*)"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"c_", ",", "d_"}], "]"}], "\[RuleDelayed]", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"c", "===", "d"}], ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Alpha]sp", "=", 
    RowBox[{"\[Alpha]s", "/", "\[Pi]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.827983994279335*^9, 3.827984022496647*^9}, {
   3.827984139029344*^9, 3.8279841601784286`*^9}, 3.8279842368530416`*^9, {
   3.827984477079921*^9, 3.827984488040373*^9}, {3.827985105448168*^9, 
   3.827985107568186*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"e8c596fd-7a8c-461d-9df3-87595da6b28a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"d\[Sigma]LO", "[", 
    RowBox[{"g", ",", "g"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"LC2", ",", "LC1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.827984288987938*^9, 3.8279843211315527`*^9}, {
   3.827984493032954*^9, 3.827984493386877*^9}, {3.827984805394611*^9, 
   3.82798480557092*^9}, 3.827985135321423*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"74456c2f-a0d4-4723-b8ac-f1c29a3f1d71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"A1", " ", "LC2"}], "2"]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B1"}], "-", 
     RowBox[{"A1", " ", "LQ"}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.8279849869863863`*^9, {3.827985110641268*^9, 3.827985136092148*^9}, 
   3.8279861312230597`*^9, 3.827988026936483*^9, 3.8280242422957287`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"673274ef-f603-4803-9037-ec349ba7a657"]
}, Open  ]],

Cell["\<\
Since we are mainly interested in the pt-enhanced terms that are not \
multiplied by ln(N), as they are already contained in the threshold \
resummation, we can get rid of all the N-dependence which are contained in \
the Anomalous Dimensions.\
\>", "Text",
 CellChangeTimes->{{3.827984349039084*^9, 
  3.827984439336833*^9}},ExpressionUUID->"b944299d-38b2-42bd-9b51-\
e70b83bd7e06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d\[Sigma]LOptNoLogN", "=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"d\[Sigma]LO", "[", 
      RowBox[{"g", ",", "g"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"LC2", ",", "LC1"}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"q", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]1", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.827984455955809*^9, 3.8279844722892427`*^9}, {
   3.8279845052974463`*^9, 3.827984508302514*^9}, 3.8279851413512897`*^9, {
   3.8279859975315647`*^9, 3.827986016860207*^9}, {3.827986056060869*^9, 
   3.82798605868987*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"97a1d70c-2f3a-4940-81c3-01f74e76ae0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"A1", " ", "LC2"}], "2"]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B1"}], "-", 
     RowBox[{"A1", " ", "LQ"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.827984992475318*^9, {3.827985113799646*^9, 3.827985141833295*^9}, 
   3.82798613142544*^9, 3.827988027037271*^9, 3.828024242387192*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"d8eb2e5f-6aa0-43d9-bae0-044f80a7354a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "NLO contribution (terms only proportional to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Alpha]s", "2"], TraditionalForm]],ExpressionUUID->
  "af596781-5c11-431e-8174-d1df3a363968"],
 ")"
}], "Subchapter",
 CellChangeTimes->{{3.791270415261487*^9, 3.791270427402686*^9}, {
  3.791273752667684*^9, 3.791273787663987*^9}, {3.8267767197341537`*^9, 
  3.826776727711043*^9}, {3.826974886705041*^9, 3.826974888561879*^9}, {
  3.827983769129311*^9, 3.827983782941884*^9}, {3.82798453614303*^9, 
  3.827984558329095*^9}},ExpressionUUID->"97202fa2-8cf3-4e35-96ca-\
a8229abead53"],

Cell["\<\
Similarly, here, we are only interested in the LO contribution at small-pt \
(pt\[Rule]0), therefore neglecting all the constant terms in the expansion.\
\>", "Text",
 CellChangeTimes->{{3.827983788840517*^9, 3.827983848466444*^9}, {
  3.8279845740619802`*^9, 
  3.82798458230422*^9}},ExpressionUUID->"d1b9555e-521a-4864-a888-\
6b109a5be4f5"],

Cell[CellGroupData[{

Cell["Analytical expression of the coefficients:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 
  3.826982720634457*^9}},ExpressionUUID->"1f4dfc05-3fa3-4aa6-a561-\
1de1b7034331"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalSigma]24", "[", 
     RowBox[{"g", ",", "g"}], "]"}], ",", 
    RowBox[{"\[CapitalSigma]23", "[", 
     RowBox[{"g", ",", "g"}], "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"c_", ",", "d_"}], "]"}], "\[RuleDelayed]", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "===", "d"}], ",", "1", ",", "0"}], "]"}]}], ",", 
    RowBox[{"B1", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Beta]0"}]}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"Coefficients", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{"LC4", ",", "LC3"}], "}"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8279846745795*^9, 3.82798469208045*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"fa63a39d-ce82-4e48-ac3a-683662a1d1f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["A1", "2"], "8"], ",", 
   RowBox[{
    RowBox[{"-", "A1"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["\[Beta]0", "3"], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
         RowBox[{"2", " ", "\[Beta]0"}], "-", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.827985003097816*^9, 3.827986131881753*^9, 
  3.827988027155488*^9, 3.828024242397357*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"7c4fb7d6-53de-425b-98b8-5a086453c30a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalSigma]22", "[", 
     RowBox[{"g", ",", "g"}], "]"}], ",", 
    RowBox[{"\[CapitalSigma]21", "[", 
     RowBox[{"g", ",", "g"}], "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"c_", ",", "d_"}], "]"}], "\[RuleDelayed]", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "===", "d"}], ",", "1", ",", "0"}], "]"}]}], ",", 
    RowBox[{"B1", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Beta]0"}]}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"Coefficients", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{"LC2", ",", "LC1"}], "}"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.827984666277828*^9, 3.827984684705163*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"a19841ae-50b7-4894-8c7e-b5aaa1a0a6af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "A2"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A1", " ", "LQ"}], "-", 
          RowBox[{"3", " ", "\[Beta]0"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
          RowBox[{"2", " ", "\[Beta]0"}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], 
    "-", 
    RowBox[{
     FractionBox["1", "2"], " ", "A1", " ", 
     RowBox[{"(", 
      RowBox[{"h1g", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "LQ"}], "+", "LR"}], ")"}], " ", "\[Beta]0"}], "-", 
       RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "-", 
       RowBox[{"LQ", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Beta]0"}], "-", 
          RowBox[{"LQ", " ", "\[Beta]0"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"LF", "-", "LQ"}], ")"}], " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
          RowBox[{"2", " ", "\[Beta]0"}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}], " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Gamma]0", "\<\"gq\"\>"], " ", 
        SubscriptBox["\[Gamma]0", "\<\"qg\"\>"]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "B2"}], "-", 
    RowBox[{"A2", " ", "LQ"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LQ", "-", "LR"}], ")"}], " ", "\[Beta]0", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
       RowBox[{"2", " ", "\[Beta]0"}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A1", " ", "LQ"}], "-", 
       RowBox[{"2", " ", "\[Beta]0"}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"h1g", "-", 
       RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "-", 
       RowBox[{"LQ", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Beta]0"}], "-", 
          RowBox[{"LQ", " ", "\[Beta]0"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"LF", "-", "LQ"}], ")"}], " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["C1", "\<\"gq\"\>"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"LF", "-", "LQ"}], ")"}], " ", 
        SubscriptBox["\[Gamma]0", "\<\"gq\"\>"]}]}], ")"}], " ", 
     SubscriptBox["\[Gamma]0", "\<\"qg\"\>"]}], "+", 
    RowBox[{"\[Beta]0", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Gamma]1", "\<\"gg\"\>"]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.827985006319038*^9, 3.827986132131612*^9, 
  3.827988027320739*^9, 3.828024242481488*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"6374cef8-ded2-4606-817f-ac5110032a6b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["NLO terms:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 3.826982720634457*^9}, {3.827984712607354*^9, 
  3.827984714331491*^9}},ExpressionUUID->"7045abb6-3a88-4c10-a946-\
3a6b3c5a7aba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Normalized", " ", "cross"}], "-", "section"}], ",", " ", 
    RowBox[{"ie", " ", "divided", " ", "by", " ", "\[Sigma]0"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d\[Sigma]NLO", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalSigma]24", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC4"}], "+", 
      RowBox[{
       RowBox[{"\[CapitalSigma]23", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC3"}], "+", 
      RowBox[{
       RowBox[{"\[CapitalSigma]22", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC2"}], "+", 
      RowBox[{
       RowBox[{"\[CapitalSigma]21", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "LC1"}]}], 
     RowBox[{"(*", 
      RowBox[{"+", 
       RowBox[{"H2", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], "*)"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"c_", ",", "d_"}], "]"}], "\[RuleDelayed]", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"c", "===", "d"}], ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Alpha]sp", "=", 
    RowBox[{"\[Alpha]s", "/", "\[Pi]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8279847395681553`*^9, 3.827984776315295*^9}, {
  3.827984840490486*^9, 3.827984840707142*^9}, {3.827985023354673*^9, 
  3.8279850269771214`*^9}, {3.82798512210822*^9, 3.827985123739889*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"7291e729-0948-4f54-8d7d-b3026f2431d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"d\[Sigma]NLO", "[", 
    RowBox[{"g", ",", "g"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"LC4", ",", "LC3", ",", "LC2", ",", "LC1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827984798787673*^9, 3.827984819205208*^9}, 
   3.8279851544798117`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"e296e103-b8c9-441d-b6fc-2cb2d74ed6ac"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["A1", "2"], " ", "LC4"}], "8"], "-", 
  RowBox[{"A1", " ", "LC3", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["\[Beta]0", "3"], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "B1"}], "-", 
        RowBox[{"A1", " ", "LQ"}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"LC2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"B1", "+", 
           RowBox[{"A1", " ", "LQ"}], "-", "\[Beta]0"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "B1"}], "-", 
           RowBox[{"A1", " ", "LQ"}], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], 
     "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "A1", " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "-", 
        RowBox[{"LQ", " ", 
         RowBox[{"(", 
          RowBox[{"B1", "+", 
           FractionBox[
            RowBox[{"B1", " ", "LQ"}], "2"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "LQ"}], "+", "LR"}], ")"}], " ", "\[Beta]0"}], "-", 
        RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"LF", "-", "LQ"}], ")"}], " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "B1"}], "-", 
           RowBox[{"A1", " ", "LQ"}], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}], " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gq\"\>"], " ", 
         SubscriptBox["\[Gamma]0", "\<\"qg\"\>"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B2"}], "-", 
     RowBox[{"A2", " ", "LQ"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"LQ", "-", "LR"}], ")"}], " ", "\[Beta]0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "B1"}], "-", 
        RowBox[{"A1", " ", "LQ"}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B1", "+", 
        RowBox[{"A1", " ", "LQ"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "-", 
        RowBox[{"LQ", " ", 
         RowBox[{"(", 
          RowBox[{"B1", "+", 
           FractionBox[
            RowBox[{"B1", " ", "LQ"}], "2"]}], ")"}]}], "-", 
        RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"LF", "-", "LQ"}], ")"}], " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["C1", "\<\"gq\"\>"], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"LF", "-", "LQ"}], ")"}], " ", 
         SubscriptBox["\[Gamma]0", "\<\"gq\"\>"]}]}], ")"}], " ", 
      SubscriptBox["\[Gamma]0", "\<\"qg\"\>"]}], "+", 
     RowBox[{"\[Beta]0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]1", "\<\"gg\"\>"]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.827985029264091*^9, {3.82798512789573*^9, 3.827985155317519*^9}, 
   3.827986132524961*^9, 3.827988027433313*^9, 3.828024242605648*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"91ac89e7-a7b1-48c1-8b34-d78ae0ed37ff"]
}, Open  ]],

Cell["\<\
As before, since we are mainly interested in the pt-enhanced terms that are \
not multiplied by ln(N), as they are already contained in the threshold \
resummation, we can get rid of all the N-dependence which are contained in \
the Anomalous Dimensions.\
\>", "Text",
 CellChangeTimes->{{3.827984349039084*^9, 3.827984439336833*^9}, {
  3.827985302104463*^9, 3.827985304998661*^9}, {3.827985357721251*^9, 
  3.827985361544278*^9}},ExpressionUUID->"6864e869-8f44-46f8-b989-\
da28ba091bd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d\[Sigma]NLOptNoLogN", "=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"d\[Sigma]NLO", "[", 
      RowBox[{"g", ",", "g"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"LC4", ",", "LC3", ",", "LC2", ",", "LC1"}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"q", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]1", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{
  3.827984832733811*^9, 3.827985162346025*^9, {3.827986030722188*^9, 
   3.827986066887644*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"68f25eaf-b310-4542-9cb6-d3589b66e901"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["A1", "2"], " ", "LC4"}], "8"], "-", 
  RowBox[{"A1", " ", "LC3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "B1"}], "-", 
        RowBox[{"A1", " ", "LQ"}]}], ")"}]}], "+", 
     FractionBox["\[Beta]0", "3"]}], ")"}]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B2"}], "-", 
     RowBox[{"A2", " ", "LQ"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "B1"}], "-", 
        RowBox[{"A1", " ", "LQ"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"LQ", "-", "LR"}], ")"}], " ", "\[Beta]0"}], "+", 
     RowBox[{"2", " ", "\[Beta]0", " ", 
      SubscriptBox["C1", "\<\"gg\"\>"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B1", "+", 
        RowBox[{"A1", " ", "LQ"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "-", 
        RowBox[{"LQ", " ", 
         RowBox[{"(", 
          RowBox[{"B1", "+", 
           FractionBox[
            RowBox[{"B1", " ", "LQ"}], "2"]}], ")"}]}], "-", 
        RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"LC2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "B1"}], "-", 
           RowBox[{"A1", " ", "LQ"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"B1", "+", 
           RowBox[{"A1", " ", "LQ"}], "-", "\[Beta]0"}], ")"}]}]}], ")"}]}], 
     "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "A1", " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "-", 
        RowBox[{"LQ", " ", 
         RowBox[{"(", 
          RowBox[{"B1", "+", 
           FractionBox[
            RowBox[{"B1", " ", "LQ"}], "2"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "LQ"}], "+", "LR"}], ")"}], " ", "\[Beta]0"}], "-", 
        RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}]}]], "Output",\

 CellChangeTimes->{3.82798503206243*^9, 3.827985163138191*^9, 
  3.827986132863443*^9, 3.8279880275522623`*^9, 3.828024242691469*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"4549835e-ab5d-492e-9544-f1928f7c8990"]
}, Open  ]],

Cell["\<\
The term above is what should be supplemented to the threshold resummation at \
NLO.\
\>", "Text",
 CellChangeTimes->{{3.827985233647296*^9, 3.827985255922577*^9}, {
  3.827985616081546*^9, 
  3.827985617650538*^9}},ExpressionUUID->"db458672-38b8-45a3-836b-\
f14d8c4a4f98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"In", " ", "case", " ", "LR"}], "=", 
    RowBox[{"LF", "=", 
     RowBox[{"LQ", "=", "mH"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"d\[Sigma]NLO", "[", 
       RowBox[{"g", ",", "g"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"LC4", ",", "LC3", ",", "LC2", ",", "LC1"}], "}"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Gamma]0", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"ToString", "/@", 
           RowBox[{"{", 
            RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
       "0"}], ",", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Gamma]0", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"ToString", "/@", 
           RowBox[{"{", 
            RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
       "0"}], ",", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Gamma]0", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"ToString", "/@", 
           RowBox[{"{", 
            RowBox[{"q", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
       "0"}], ",", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Gamma]1", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"ToString", "/@", 
           RowBox[{"{", 
            RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
       "0"}]}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LR", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"LF", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"LQ", "\[Rule]", " ", "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8279854075724688`*^9, 3.827985444365005*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"cf0f77e0-6352-480f-95df-0766e6d49583"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["A1", "2"], " ", "LC4"}], "8"], "-", 
  RowBox[{"A1", " ", "LC3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["B1", "2"]}], "+", 
     FractionBox["\[Beta]0", "3"]}], ")"}]}], "+", 
  RowBox[{"LC2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A2"}], "+", 
        RowBox[{"B1", " ", 
         RowBox[{"(", 
          RowBox[{"B1", "-", "\[Beta]0"}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "A1", " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B2"}], "+", 
     RowBox[{"2", " ", "\[Beta]0", " ", 
      SubscriptBox["C1", "\<\"gg\"\>"]}], "-", 
     RowBox[{"B1", " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}]}]], "Output",\

 CellChangeTimes->{3.82798544569143*^9, 3.827986133063682*^9, 
  3.827988027655478*^9, 3.828024242788568*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"3a4c9631-e86c-4a45-a25e-2bbfa1e0aad0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Checks", "Chapter",
 CellChangeTimes->{{3.827985475320418*^9, 
  3.8279854830330467`*^9}},ExpressionUUID->"9dd1118e-b5d6-495c-8f80-\
f810cd3bac8c"],

Cell["\<\
Here, as a proof of concept, we check that in the small-pt limit, the results \
of the expansion agree with the C++ implementation.\
\>", "Text",
 CellChangeTimes->{{3.827985547885682*^9, 
  3.827985587865448*^9}},ExpressionUUID->"6ff47465-d2ac-435f-9026-\
f7a1b4d2ddb1"],

Cell[CellGroupData[{

Cell["Physical constants", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9, {3.826782766029014*^9, 
   3.826782770573827*^9}},ExpressionUUID->"2ea164ed-14e4-45ca-8c8a-\
5ba75f19bbc5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GF", "=", 
    RowBox[{"1.166378", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]]}]}], ";", 
   RowBox[{"GevtoPb", "=", 
    RowBox[{"3.8937966", " ", 
     SuperscriptBox["10", "8"]}]}], ";"}], " ", 
  RowBox[{"(*", "constants", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "active", " ", "flavours"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CA", "=", 
    RowBox[{"nc", "=", "3"}]}], ";", 
   RowBox[{"CF", "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["nc", "2"], "-", "1"}], 
     RowBox[{"2", "nc"}]]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Casimir", " ", "Operators"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]0", "=", 
    RowBox[{
     FractionBox["1", "12"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"11", " ", "CA"}], "-", 
       RowBox[{"2", "nf"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Beta", " ", 
    RowBox[{"functions", " ", "[", 
     RowBox[{"According", " ", "to", " ", 
      RowBox[{"Bozzi", "'"}], "s", " ", "definition"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]0", "[", "\[Alpha]_", "]"}], ":=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SqrtBox["2"], "GF"}], 
     RowBox[{"576", "\[Pi]"}]]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Born", " ", "level", " ", "cross"}], "-", 
    RowBox[{"section", " ", "\[Sigma]0"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Coeff", ".", " ", "Cusp"}], " ", "Anomalous", " ", 
    "Dimensions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1g", "=", "CA"}], ";", 
  RowBox[{"B1g", "=", 
   RowBox[{
    RowBox[{"-", "2"}], "\[Beta]0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2g", "=", 
   RowBox[{
    FractionBox["CA", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"CA", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["67", "18"], "-", 
         RowBox[{"Zeta", "[", "2", "]"}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["5", "9"], "nf"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B2g", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Pi]", "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["64", "3"]}], "-", 
          RowBox[{"24", " ", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
        SuperscriptBox["CA", "2"]}], "+", 
       RowBox[{
        FractionBox["16", "3"], "nf", " ", "CA"}], "+", 
       RowBox[{"4", " ", "nf", " ", "CF"}]}], ")"}]}], "+", 
    RowBox[{"\[Beta]0", 
     FractionBox["CA", "\[Pi]"], " ", 
     RowBox[{"Zeta", "[", "2", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]s", "=", "0.11264"}], ";", 
  RowBox[{"mH", "=", "125"}], ";", 
  RowBox[{"\[Mu]F", "=", "125"}], ";", 
  RowBox[{"\[Mu]R", "=", "125"}], ";", 
  RowBox[{"Q", "=", "125"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LRR", "=", 
   RowBox[{"Log", "[", 
    FractionBox[
     SuperscriptBox["mH", "2"], 
     SuperscriptBox["\[Mu]R", "2"]], "]"}]}], ";", 
  RowBox[{"LFF", "=", 
   RowBox[{"Log", "[", 
    FractionBox[
     SuperscriptBox["mH", "2"], 
     SuperscriptBox["\[Mu]F", "2"]], "]"}]}], ";", 
  RowBox[{"LQ2", "=", 
   RowBox[{"Log", "[", 
    FractionBox[
     SuperscriptBox["mH", "2"], 
     SuperscriptBox["Q", "2"]], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "3"}], 
  RowBox[{"(*", 
   RowBox[{"Mellin", " ", "Moment"}], "*)"}], ";", " ", 
  RowBox[{"PT", "=", "10"}], 
  RowBox[{"(*", 
   RowBox[{"pt", " ", "value", " ", "in", " ", "GeV"}], "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "above", " ", "definitions", " ", "should", " ", "always", " ",
     "be", " ", "the", " ", "same", " ", "as", " ", "in", " ", "the", " ", 
    "input", " ", "card", " ", "for", " ", 
    RowBox[{"C", "++"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.82678279271395*^9, 3.8267828033218937`*^9}, {
   3.826783014418295*^9, 3.8267831377126017`*^9}, {3.826791850216086*^9, 
   3.826791850469602*^9}, {3.826975077094997*^9, 3.826975167580564*^9}, {
   3.826975346967696*^9, 3.826975364149468*^9}, {3.82697545618328*^9, 
   3.8269754960679007`*^9}, {3.82699305813076*^9, 3.826993075165612*^9}, {
   3.826993955978298*^9, 3.826993993674025*^9}, {3.827135324989147*^9, 
   3.827135328052752*^9}, {3.8271377279019003`*^9, 3.8271378482300453`*^9}, {
   3.827137899225215*^9, 3.827137961353134*^9}, 3.82775754725148*^9, {
   3.8279347313397837`*^9, 3.827934743810484*^9}, {3.82793624564609*^9, 
   3.827936331435087*^9}, {3.8279363627536573`*^9, 3.8279363691228237`*^9}, {
   3.827936476968811*^9, 3.827936484850709*^9}, {3.827986270198565*^9, 
   3.827986683085897*^9}, {3.827986721389894*^9, 3.827986785024728*^9}, 
   3.8279869814505863`*^9, {3.8279871456077223`*^9, 3.827987146534411*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"190374a7-13e5-419a-b279-0c97639975f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LO contribution (terms only proportional to \[Alpha]s)", "Subchapter",
 CellChangeTimes->{{3.791270415261487*^9, 3.791270427402686*^9}, {
  3.791273752667684*^9, 3.791273787663987*^9}, {3.8267767197341537`*^9, 
  3.826776727711043*^9}, {3.826974886705041*^9, 3.826974888561879*^9}, {
  3.827983769129311*^9, 3.827983782941884*^9}, {3.827984543899065*^9, 
  3.8279845454908524`*^9}},ExpressionUUID->"896b0713-7cac-4a11-a18e-\
1df33c979f46"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Num\[CapitalSigma]LO", "[", 
    RowBox[{"n_", ",", "pt_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox["\[Alpha]s", "\[Pi]"], ")"}], 
        FractionBox[
         RowBox[{"2", " ", "pt"}], 
         SuperscriptBox["mH", "2"]], " ", 
        RowBox[{"(", "GevtoPb", ")"}], 
        RowBox[{"\[Sigma]0", "[", "\[Alpha]s", "]"}], 
        RowBox[{"d\[Sigma]LO", "[", 
         RowBox[{"g", ",", "g"}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LC1", "\[Rule]", " ", 
          RowBox[{"FC1", "[", 
           RowBox[{"pt", ",", "mH"}], "]"}]}], ",", 
         RowBox[{"LC2", "\[Rule]", " ", 
          RowBox[{"FC2", "[", 
           RowBox[{"pt", ",", "mH"}], "]"}]}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Subscript", "[", 
         RowBox[{"\[Gamma]0", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"ToString", "/@", 
            RowBox[{"{", 
             RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
        RowBox[{"\[Gamma]Ngg", "[", "n", "]"}]}], "}"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A1", "\[Rule]", " ", "A1g"}], ",", 
       RowBox[{"B1", "\[Rule]", " ", "B1g"}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LR", "\[Rule]", " ", "LRR"}], ",", 
      RowBox[{"LF", "\[Rule]", "LFF"}], ",", 
      RowBox[{"LQ", "\[Rule]", " ", "LQ2"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827986941411737*^9, 3.8279869910575857`*^9}, {
   3.827987031854732*^9, 3.827987037528483*^9}, {3.827987115578104*^9, 
   3.827987157845529*^9}, {3.8279872005200768`*^9, 3.827987207895186*^9}, {
   3.827987270015131*^9, 3.827987315395073*^9}, {3.8279874888587933`*^9, 
   3.827987490232238*^9}, {3.827988050815442*^9, 3.827988057466384*^9}, {
   3.827988487482643*^9, 3.827988488406187*^9}, {3.827988540023767*^9, 
   3.8279885475549583`*^9}, 3.8279916830712233`*^9, {3.8279921326029654`*^9, 
   3.8279921412673283`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"3abb2ffd-6603-4747-bea0-1f94b16085dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssLOaspt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pt", ",", 
       RowBox[{"Num\[CapitalSigma]LO", "[", 
        RowBox[{"NN", ",", "pt"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"pt", ",", "1", ",", "20", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<./datfiles/cssLOaspt.dat\>\"", ",", "cssLOaspt", ",", 
    "\"\<Table\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.827988136169176*^9, 3.8279881449674063`*^9}, {
  3.827988177644477*^9, 3.8279881991445704`*^9}, {3.8279888930248137`*^9, 
  3.827988941809746*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"b81b597a-3a65-4f3b-8b1b-5c763206306f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./datfiles/cssLOaspt.dat\>\"", ",", "\"\<Table\>\""}], 
      "]"}], ",", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<./datfiles/morepoints_smallpt_LO_gg_channel.dat\>\"", ",", 
       "\"\<Table\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<CSS-LO\>\"", ",", "\"\<LO-C++\>\""}], "}"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "10"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<N=3\>\""}], ",", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.7"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<d\[Sigma]/dpT\>\"", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<pT\>\"", ",", " ", "\"\<LO Contribution\>\""}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827988229265129*^9, 3.827988269453752*^9}, {
  3.827988301556212*^9, 3.8279883842522383`*^9}, {3.82798842859875*^9, 
  3.827988451181532*^9}, {3.827988884609825*^9, 3.8279888850591297`*^9}, {
  3.827992699642165*^9, 3.8279926997902727`*^9}, {3.827993669892993*^9, 
  3.827993684518363*^9}, {3.827993718240993*^9, 3.827993737060458*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"4d27eb41-affe-437e-85ba-0f044ad9a6f0"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large], 
        LineBox[CompressedData["
1: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
8+AhQTams7xua+XBQ4KOJdsyZMTy4CFBBscslZOGc+EhQTPXJQqP9ebCQ4Im
x364VNmRCw8JUvg+iXttUy48JEjlxu2degdy4SFBVyuvuciX58JDguKH/4hp
peXCQ4LUXn3YuDgkFx4SZClZk5jrkAsPCWJc2Hune2EuPCTI9tbIIrupufCQ
oPR09VO9qrnw4Jyf0JQPhcK58JAgrx/GDbZ/c+AhQYat4Y8MenPgIUHvDxqz
1B7kwEOCpARnFxs258BDgsZkOq+tbsiBhwRt23ShrqQiBx4SNLROZOhjdg48
JOjibI8d9tE58OA83n7O+Y1HDjwk6IhKlniqbQ48JOlf1q58c4sceEiShfui
aj5mDjwk6c4jptY3+Rx4SNL9CI8vn/ly4CFJESPud8Z/ZcNDkjRIsJrZkw0P
SZLp3zkjtCMbHpJUlXI58EZzNjwkqeBvsqT5kWx4SFLUz1m8TTuz4SFJ14Iu
KjoUZMNDkiovGDCFE7PhIUkrUvnFHvpnw0OS9mwxrT5mlw0PSaob7T65e1E2
PCSpZ+CofsP0bHhIkkdnVuct7Wx4SNJp1sHto1LZ8JCklrPnrK14suEhSTvd
9jfX/MyChyRdt7vwQqI7Cx6StFt7S9y2jix4SJJsg1KY6eUseEjSgmWVVa+P
ZcGD8/7fa7tra7LgIUWbmXLy8cVZ8JCi8+7Gyp6pWfCQIudHge1u4VnwkKJp
z3bxRbhnwUOKbvzqrS9fmQUPKboicKTkDmXBQ4pENzZUy5tmwUOKjsd3H4/V
yIKHFK0br9z/QSILHlIUPivQPWhSFjykSLbW8CL3QCY8pMjGgm/HwZ5MeEjR
n1cer3weZcJDihiOfV7TrmXCQ4oEO/aLSZ3OhIcUiX9rvTx5fyY8pKhRv8VJ
YHsmPKTIXsmjWSUvEx5SVHXuwF2rxEx4SJFkw+ug5KBMeEjR5+15CTecM+Eh
Rdqxoc81V2TCQ4rOviyLKGJnwkOKhFwtNUVMM+EhRb4vhu/t0MyEhzTteb3R
dY50Jjyk6erwveNfeDOxv0vTETXdIw2DGfCQpi88Q+YpnzLgIU3WacPT3F9k
YL+Uptgh2ZzVdzLgIU0VF6Jl1zVnwEOazgVF3fA7ngEPaRIJPrQxf3cGPKRJ
YfE37abyDHhIU43G/F3jORnYX6XJU+393VWJGfCQpvpXq2oagzPgIU0+b0z+
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
8FCjxxsKH4pYxsBDjRQD66wumsfAQ4122B8siTSKgYcatY9PP8HSioGHGp15
8HbXH/kYeKjR1y/rll8VjYGHGtUPLTxVMTkGHmokaBBxP3Y4Gh5q5CNXV+7U
Fw0PNRo9eWTU+n00PNQoZ0782JyX0fBQIzPZL0XmD6LhoUZl9/4dmn0zGh5q
1PHv1JKFl6LhoUbDZqoediej4aFGYZ9tP4cfjIaHGhUFh74qqYmGhxo53d4/
9fzWaHioUdwNs+5Pm6LhoUYKLfbv1DOi4aFGi2s9TN0SouGhTioP9l/eE4bx
8KrTTK3Nhf0+0fBRJ/emtMKFzhifmDppiw+fq1kdjc8b1elhS7wwzxKMV0Gd
HCryEoPZ0fBTp6S41vGX0zF+LXUamnOldK1hNDzVie/8dJOHmpgPY3U6t+9O
m71CND6fVKdjuYvdesUwPzPVqWd/SG88XzS81clnTGS91FjUxOd9lupUoDX5
4MmBKPir04eFZs+dP0dNzN9ydTossem18NsorAd16ts7qfFyZ9TEfNqp09TM
7TYpd6OwPtTpV6pd/fxrUROfD3qo08aTqy8KX4zC52vqtD9oX/rLE1ET8x2k
Tnfk4381HojC55/q9Mnqj9CWmqiJ+Y9Rp8up9s2x26KwntSJsf61kOfmqAmP
VHUKm/Xo/ZqsKKwvdepNzFu+fEPUhEe+OsXMdJy+LCoK602dPG0PVq4MjJrw
KFMnrRXvY5w9orD+1GmJb0ZLqH3UhEeVOtW4jkfl2EZhPaqTRdabvH2LoiY8
6tXpSe2pkdsWUVif6iTxUebKoFnUhEejOv37VPNM3zAK61Wdjuf/m+mpFTXh
0aROnX1dz2sU4dGqTqUJw2d7JeBxQ53YhyTusATh0a5OsXrfxNO54NGhTjq7
XVKeDUZifavTzntzxMx/RE54vFSnV3b+TZXvI/F5Lcfv7u30yV2REx7vOetv
z3qH6MeRWP/qlCnHPedze+SERx/nfJi3NXyvRqIHzvqtvMj/8ULkhMcw5/zb
3r0Pa4xEHxok1uJ4buxgJPrQoF8SFgkldZHoQ4MEXx9XZ1ZGog8NGml5f6Ct
JBJ9aFBfi7hYeF4k+tCgm8uClyqlRaIPDSrStVjfHh+JPjRo0POuYUZ4JPrQ
IO61kTfZ/pHoQ4Pi09O1JrlHog8N6q51m9lmF4k+NMgsK4J7u20k+tCgi1KM
hCDrSPShQax5fyqs2JHoQ4P2Dji5aplHog8Napd92cJvEok+NEgqivtivy48
7DRI/ITL0req8HDWoAsr83yfyMLDQ4O4yrWEO0Th4atBlPFgagcfPII06MlD
y6dP/kWgDw3q/8j48/ZPBPrQIPWrc3J+fo9AHxq0cHRetsCHCPShQWmNf79p
vY5AHxrEXzjjnFVnBPrQoKW727sD70WgD45fSrnP1hsR6EODygUi595ojkAf
GvQwZ4nn2JkI9KFBT4sFH8w8FoE+NEhjfG92Qn0E+tAgkS/ySc01EehDgxJq
PA8KVUSgDw2aWp4n5lQSgT40qNmtcu+xvAj0oUFjh/f7CadHoA8NEprbtjIo
MQJ9aNDPNnXn+5ER6EOD7sjdz5wdFIE+NKjwwaTrB7wi0IcGqZR/UlR1jkAf
GpTz/HzKtrUR6IOzfv6c+CpjE4E+NMhSSNq9YmEE+uCsDy7dRxrz4NGnQaOp
M6yOzoDHb47/x+2H5pvAY5gzn7SP9xkDHlyalGTeZBOjDg9eTeJWsNwoqwAP
Ic7jK1XlFyUiJn6/EtOk9dWWm/yEIrDfaxLfjjpXOR54KGiSpuosgfaRcPSh
Sbt4sjOzfoWjD02yKBG9t+BbOPrQpO1hLj1878PRhyYp1U1qutsVjvsDTWJs
LLXb0RmOPjTJsP7gkeD74ehDk75yf2yyvBU+sd9aalJjQ1+qSms4+tCkfaOh
A6Pnw9GHJqlFSkq8bQxHH5z3O1H0+FZDOPrQpCMpNXPP7A1HH5qUeZTH8kBV
+MT+7KFJCQbJb6u3haMPTTJ++Vh2R3E4+tCkC8devKrMC8f9hyb5bPKYWp0e
jj40ycWKLV6fFI4+NKl026qoU9Hh6EOTyhmJdjdCwtGHJsVFVJ995RuOPjTp
+vWGLX/dwvH7riYVL9ryVs4hfMKjTJP8nljVzlkdjj40KUvp0h2vZfCo0qSP
UaOexVbw2K1JBT8muVy2gEe9JlUueXbmzwx4HNGkq28LwlgseDRyjneKmRqq
D4+zmlTicLf3mCY8mjSJNVC4c1AJHq2a1GyaV2MpA48bmqS/uOdbiSg82jUp
8f2V1F5+eHRoUuA0u3UW3PDo5Hht2nFv6u8w9KFJY/PO+Q98CMP9Eufx4sTQ
i8/D0IcmnTd2fFZ4Jwx9aNI8rVe1fi1hEx59mvRtpKhlSWMY+tAkYW0BY7N9
YeiDc77FPd26FWHoQ4u6T97s1NgUhj60SCHGl1dnYxj60KJ2pWhvVmQY+tAi
B5vj3xb4hKEPLQoa7a1wsw9DH1ok6drtkbEsDH1okU1Xyryj88LQhxYlS+/U
6zENQx9a9OKMpoKaThj60CJGGY+gl3wY+tCitSnm/UeEw9CHFk1f0tw2aTwU
fWhR+vndm11/hqIPLcrc+Ht6a28o+tAiC80754yehaIPLVr3b6lUbXso+tCi
FTO2zVFuCUUfWrSv/i2zujEUfWiRcq/HK/39oehDiyQ07ZZcrAzF/bgWtZkK
BKzfHIo+tEgx/sr0v2mh6EOLzr3uqq+NCUUfWjR678yF1QGh6EOL/DUb/YRd
QtGHFm2St9h3e2Uo+tCiw6tuhZdahaIPLTrS8qDFc2Yo+tCiKXUvimYZhqIP
LWqNCOmUUw9FH1oU+la+ZEwqFH1okcvdmNOf+UPRhxZdNtea/3okBH1o0S+z
GwYvfoSgDy1q+iIa0tUTgj4455N9hPtTZwj60KItTI/u4dsh6EOLfvd/FJBu
CUEfnNc/Ew0zOxmCPrTI9XKdqHN9CPrQIkuXpLf5O0PQhxY9Mop921Icgj60
aHtsnMC/zBD0oUUjZoErLRNC0IcWGctRY2FIyITHey3Si+o3eOMRgj60qMoi
+fis9SHoQ4vkuD9R5dIQ9KFFYo/pITc7BH1okeG6bZ7h00LQhza5bOf91MsI
QR/atEzvkLuncgj60Kbyv4ev9IqHoA9tWuw6e0o4bwj60CZL/gwz7uFg9KFN
rf0tMyq+B6MPber3miYysycYfWhTYo/aiVedwehDm2YaPVDLbw9GH9r0wXDn
SovLwehDm77/ejxv8FQw+tAms9Ov3p05GIw+OMc/I2exsToYfWhThe33+TZl
wehDm/487fimkReMPrSp5/DMOWPJwehDm/aqVmu/jgxGH9r0MSBnzw2/YPSh
Te9PJpw67RyMPrSphmfy6oZVwehDmxim56PrFwWjD2369GG6/KE5wehDm/oq
ZM1PsoLRhzalJnC3X9EJRh/aZBNR2/FMMRh9aJOayn7LP2LB6EOblrTeVFDg
DUYf2rRgcesqy+Eg9KFNK0zX9Ub8CEIf2qReuvje/ndB6EObisQChN49C0If
2uR3J7dE914Q+uCcf8RGt7CrQehDm17LGIRdOheEPrRJflHQBamjQehDmy78
MmCH7QlCH9qkGLv+9/2KIPShTU/j3zydWRSEPrRJZ7zl3b7MIPShTVV2v6WU
EoPQhzbVy6Z6lIcFoQ9tyhQLuCnjE4Q+tCnPpmnBTscg9KFNoSJFd/VWBqEP
bdp8+rfXhYVB6EOb7B6JjK+ZE4Q+OOtBbKjyJysIfWjTX0bX1G26QehDm9Z/
+3h5vnIQ+tCmDbOWLvgpEYQ+dCjmk/mJev4g9KFDczq/CvqMBaIPHVr3sH4h
YyAQfehQYtUx9x8fA9GHDi3ssVnf1BWIPnSoz+SeRsmjQPShQ2J9OZcC2wLR
hw5F+d5nLG0JRB869G0fr4PJ6UD0oUOWxXk2ig2B6EOHRq61cgnXBaIPHYo8
qBzKvT0QfejQaXv+krHCQPShQ2eqBr3HMwLRhw5pDPr28iUGog8dqs54KCId
Hog+dOgRX8szXd9A9KFDp7oardjOgehDhwr/zV7qsjoQfeiQ9afe3tTFgehD
h84fWiJ1cF4g+tCh/ifjd56aBaIPHQpL3CchwgxEHzpUo/rm2SKNQPShQzOa
12hmywWiDx0qudbwvk0kEH3o0HyeHZoyk+GRz/FqeNDhPRyAPnQob/WUvnN9
AehDh8q7JidIfwhAH5z5K0j2j34VgD50SK5nzvlnDwPQhw61NQoGWrUFoA8d
YoufijrZEoA+OPNlLf5Q/0wA+tChs2/6M/YcDkAfOvSyzCxde08A+tChA0vP
3DpQGYA+dOiuuMt6s5IA9KFDw/Ii2ldzAtAHZ75PnDB2SAlAHzpku8giciA6
AH1wzs+25vOWoAD0oUO/HB6WmnsGoA8dMhvqCHhrH4A+dOjy9R3+xbYB6EOH
Sp3MNlktCkAfnPlZtvv+2NwA9MF5f/VfphenBaAPHfq7bkbDRoMA9KFLt1cn
z1msEYA+dEnN980LGfkA9KFL9ZcT8z6KwkNMl1RigqiFFx7SupQd8Hh056g/
+tClVOfX51MG/NGHLu150Rjr89kffejSY3aa4aq3/uiD83x9wtP5T/3Rhy61
Dj6INb/njz50Kbz9Os/U6/7oQ5d+pGxJMm3yRx+6NKYU93z6SX/0oUve7ueU
2Yf80YcupZ+snWdT548+dOkKY8Nc9wp/9KFLHsHbJeOL/dGHLr1+sKSpLMcf
fehS08IPM0+n+KMPXdJdeDvtZYw/+uCMv3tNGX+IP/rQpeiL3cHm3v7oQ5f0
hl/yBzv5ow9dyrA+5LF3tT/60KUj98/F9izxRx+69MUifoHufH/0oUsbjjpc
DZnpjz4483Hu0e9zJv7oQ5cK3bweCTH80YcuaUtkOLurwqOC47X3ZP55GXhU
6dLldRucFETgsVuXHl30uL1hMjzqdSnh3o8n70b80IcuLX5+MnHVgB/60KWV
yZaNrZ/90IcuadYbJc/s9kMfutRdLvr4xDM/9KFLQbdSz5h2+KEPXfIT1NI4
ddMPfehShPM2UYsWP/ShS1a8GRtunfFDH7r0IWWzn+NRP/ShSy/ifdp/7PND
Hxy/h6f351X5oQ9dOr/D7A9jqx/60CVHgbKTbYV+6EOX5sUUvo7I8kMfujTL
/WWUSrIf+tClJT7s0DvRfuiDQT2z42+nBfuhDwYFHVmWO9vbD30wKKkmrXbQ
yQ99MGg9d6/UuTV+6INB/ncWvExZ5oc+GFQgGDa4eIEf+mDQsebZnnJz/NAH
g2aMJCt8nuqHPhgUe01S8bIBPIwZtFbziftOTXhMY9DJKfWfkxThMZNBKlFB
J90k4WHBoHlmfBesheBhyaBSJY+RaZPgYc2gn6/8IrWHfdEHg2bKCqoo/PRF
Hwzqnz/jr8RnX/TBoJGmHi6xbl/0waC5VwTMxJ/7og8GLfWq3izzwBd9cJ7P
2iOi1uaLPhi0plvuiGGrL/pg0JlJo8HzzvuiDwatmr3eeu0JX/TBoMy9xrND
D/qiDwZN1i223FTniz4YdMgt1+VIpS/6YNCCU4zcR1t80QeDYhamNf/L90Uf
DCr7cJDLKMMXfTBou17TYrckX/TBoN/WD8vKo3zRB4PyzYS77wX5og8GbcvL
MhL19kUfDDpa4BO90tkXfXAe63Q0bl3riz4YdK237+Ob5b7og0GOwz/ETRb6
og8GzTIZ1Uuz8EUfHO/PC407p8OjnXO++lyqpsbw6OCcT4r778268Ohk0JMp
1cf7VOHxkkG12X9s18vB4y2DHujvudMsBo/3DJra9IFhJACPLwwqLuRxruKC
Rx+D+gLn+kkN+aAPBh3Y+2zRpn4f9ME5vrDOX4HPPuhDjxJ6A+Pzun3Qhx61
DQxdFXnhgz70yDNY60X5Qx/0oUeJg7PParT7oA89Gm/Y6nD8qg/60KOHEkUX
rZp80Iceacls7Hpxygd96FGdyNWLsUd80IcefT7dtFZmvw/60KMrxnd3n6n2
QR96lPPTYb/Ldh/0oUfxL28485f4oA89UtFIu3wyzwd96NG+5f0PfNJ90Ice
2VP2ZsUkH/ShR19NjvU/iPJBH3rEVf12aHOwD/rQo1zXoj0rfHzQhx4tzmf9
kHD1QR96NDt7XufT9T7oQ4+kR80cd9v6oA89an9aEhOx2Ad96JHg0se6C+bD
I0aPDl9IC5KfDY9EPfJ5rDS/fyo8UvWIEW+w9w4THll6dP3CjPLD2vDI16P0
r7dFS1TgUaRHFblxYvGy8CjTow8Wt8o8xeBRoUexH1bvXCkAjyo9Uiuo17Lk
hsduPTKzc9czH/ZGH3okWSNZbzLgjT706MkrhxrmV2/0wfE+8ECU2euNPvRI
vUmp36jLG31w5u/rYyuzTm/0oUe8env45933Rh+c5+OY5stueaMPPXr9V7LD
qdUbfehR9iueh2EXvNGHHi3yPzA756Q3+uDM95djvHWHvdGHHp2/esu0ZZ83
+tCjS657L76t9kYfnPdnDu7mq/BGH3p0qza613iLN/rQI2v24xTHAm/0wfFJ
exCSl+mNPvTpyXvGsQvJ3uhDn6Z/3rKgP9YbfejT3kkPdQzCvdGHPtnWHFjr
G+CNPvQpw+D5nb2e3uhDn+rG9Is+OnmjD33iDnDfarzOG33o09WGRW/jVsBD
T596B/eHXLWGh7E+SfiumiU9Hx7T9GnLmISl32x4zNSnJYfPZzVNg4eFPh1e
qjpJzggelvp0sUjiVJQuPKz16bN80M6HavBYrk8sL57TMxTgsUqfuNpOju+U
hIedPq3PcorjmwIPZ306tP+xYhQvPDz0iU+Z52P3Py/0wRnfnmsv1/31Qh/6
9PYx1+Dtfi/0oU+7FCvNFn7xQh/69O5QfOnld17oQ58st2RJzO/yQh+c+d99
qOFKpxf60KfZGzs9l3R4oQ996isaNH3Q5oU+9GkG36ic61Uv9KFPVk+fSH5r
8kIf+tTZnKS+8YwX+tCnZTPfzJM+7oU+9OnWhpGghoNe6EOfArKv77Xe44U+
OI+F5n7u3eWFPvRpdby9ec42L/ShT1p/FQqYJV7oQ5/y/FN7HuR7oQ99UnUp
nJec6YU+9ClX2arSIMULfehTW9WBX8/jvNCHPoUWXF22OcILfejTNfNdu6yC
vNCHPpnstfg45u2FPvTJfuNx/fOu8HivTzGKfO4J9vD4ok9bI5bmzVkNjz59
eqFdtJtrOTx+cx7HvW+4uRAew/r00NZ7dykbHlwGNHmqapbHLHjwGhC/JXPl
1GnwEDIgCdozic/IC/8+aECrc3ZXvtSFh7QBLZ2yUPa0OjwUDEjFaV/UFkV4
qBrQQPn7YxHS8NAyIIco3fY1ovDQM6DCublXZgrAw5jz+tsm5eqT4DHNgCIL
LNnCo57ow4AeRn5o/vvbE30YkCGftcynH57ow4Cs1hZYvPzkiT4MiPv36xkP
ejzRhwF18UeOt73yRB8GtHBqePn1Tk/0wRlvldDg1Q5P9GFA/YORmtdve6IP
A/oe8lKm7Zon+jCgu4eT7t1v9kQfBlTVk23z/Jwn+jAgxbPTN79v9EQfBmRu
e7no92FP9GFA5Yu8V/LXe6IPA+I96XhXqc4TfRjQFO1u/mk7PdGHAbltnzWy
fKsn/n3QgPyza/cFFHuiDwN69thJIC/fE30YkNLrQ6qHMj3RhwH9Cnjy4V6K
J/owoPFDGp6D8Z7ow4DI+nGBRpQn+jCg84tne60I8UQfBvRBd8f7ZD94nDWg
hJYF0sc84NHEeb1j2ud3TvBoNSDLmjo/5fXwuGFABdWDeetXwqPdgJJuddiW
LoVHhwEp9GWceWAFj04DElro2SzNhsdLznqzb/VxmAWPtwZ0RXakvmYaPN5z
fG5653w2gscXAwqTcBifoQePPgO69mWqWLYmPH4b0I+DK051KsNj2IDE/gr2
MeXgwcUkqY4rTekS8OBlUlDOS+WXwvAQYlL9pVPCM/ngIcYks6ATuVu54CHN
pMkdM7YMDnugDyZNT6/XdfrtgT6Y1OMSanX5hwf6YNLpzX2f9D97oA8mXcjb
LlP+zgN9MIlbpOPapNce6INJnqp8Q5HPPNAHk8yF9h7ufeiBPpik6qnc7XjX
A30w6cDIi7IHNz3QB5PUfqy9uvyKB/pg0rKtQ6G3mjzQB5OmFViULj7rgT6Y
9HRfuUnbCQ/0wSQhrnjLFYc90AeT5D87tT3a74E+mHRo4Nw1lzoP9MGkkl7h
aZ92eqAPJsVdbheP2+aBPpjU3BLvwr/FA30wafGaQrnKTR7og0k2qnkWJjke
6INJyiNf7lxP80AfTOL6M+OG+wYP9MEkPpuvjLFYD/TBpEehRd93RMCjgkmp
Q3sULILhUcUk/3Mn9r/xhcduJgnXs7dle8CjnkkvPj98b+wMjyNM0n7wt+zZ
eng0Mqmrc2ZN9ip4nGVSWZUa/4zl8GhikmXfrJsfFsGjlUkGTTLdO+bD4waT
riparlk9Fx7tTNpmaasobA6PDs77ldydft0UHp1MupW5ek+GITxeMmnPxVDv
BQx4vGVS9uCZaF5NeLxnUpvk1Ye3lOHxhUl2ggapxXLw6GNSws+0eAdJePxm
UieXzwVtEXgMM8kxLcT6Jz88uAxJ//kMpdZJ8OA1pM15LtPLxtzRhyF91d5Y
5v/XHX0Y0mm72ebsAXf0YUhO3cbK8t/d0YchWVWMzR/46I4+DOmm1+L993vc
0Ychac05sfRYlzv6MKQA/dcGW565ow/O+y+OXhT7yB19GJLzZbmdzvfc0Ych
ebaFGyxsc0cfhiSwn9Fncs0dfRhS6r7eL8ot7ujDkG5rrlOecsEdfRjSqY0a
qWOn3NGHIXXpD8r0H3NHH4Z0rjzj5ftD7ujDkErmxTzo2ueOPjiP9yb9eVrr
jj4M6cZKa+vHO93RhyFNa8u78nCbO/owpGtVvwMebXFHH4YU5jJvVmehO/ow
JNOt8qyXue7ow5A0n82y6clwRx+GlHjKvuhrCjzyDWnPWcPfgwnwKDKklSGh
ybwx8CjjjN+xU1cmHB4VhrRrkmafbhA8qgxpY7fg09m+8NhtSKXhy16t9IBH
PWc+lPb883eGxxFDkl/2YHaGHTwaDemWU3lx9Wp4nDUkx9rD/5ps4NHEGY/3
y4yuxfBo5cz/mx5Vbit43DCke4ty7uqw4dHOef3Z/JLls+HRYUhrFzf6xkyH
R6chqY1cX17DgsdLzvlc3WR5hwmPt4a0Kat90aguPN4b0gkxW3sjTXh8MaRW
ta4YdxV49BmSuptVVbk8PH4bUpKnzf12KXgMG9Jg/TUhPjF4cBnR4h2Jy+cL
wYPXiN7lzy5L4f3/PoxI7/ijN01c/98H53nnqZ7/Bt3QhxFdkTzBn/XdDX0Y
0Xun9qNivW7ow4hsnunaV71wQx9GFDfg/4/1wA19GFHd0zk1N266oQ8jYiUt
nePZ7IY+jIi3eP4drtNu6MOInmy6t2Z3gxv6MKID+/a0L9nthj6MSP1+5PRf
FW7ow4h6znwrqCt2Qx9GxHOj7c7aHDf0YUR+apf/CqW4oQ8jmleZJ3Qt2g19
GJHD9S6ujCA39GFEte83PLPydEMfRpTQp7FFyMENfRjRivxCvUe2bujDiH4I
plXWLnJDH0Y0HtncG2nhhj6MKDFGRGCxmRv6MCJGsOm4OtMNfRiRiNPAzTEN
N/RhRAPflL265N3QhxHdiU243SoGjzLO+X59PH6QDx4VnON/5Pq3dcwVfRhx
9se2K9m/XNEH53x5eG0Tv7iiD45PfMauiG5X9MGZD1Wlw8HPXNGHES2rr0sK
uu+KPjjz4f2TL/SGK/owIsPZ75ZHX3JFH0Zkvn/NspRTrujDiORaVLg2Nbii
DyOqNtII2LXbFX1w1hNzXuaJSlf0YUSauettb5e4og8jOlxjc/NDriv6MCIZ
T4Fv/Kmu6MOI0haFXGDGuaIPIzJe6226JtQVfRjRF6XO5Sk+rujDiNrOHBM+
7OyKPoyo8daroNdrXNGHMYklLg+SWeaKPozJNfYrv62lK/owplc/jrA3zXJF
H8akWJktfoflij6M6cwBv3gJPVf0YUz9D6xjHNTgoWpMXotVeffKwkPLmDad
69H5JQIPPWOqWbXl8SJeeBgbk9JpHcldoy7ow5hieXc8+zPggj6M6e7jPv21
X1zQB+f/n8bgPtXtgj6MKb6G7aLw3AV9GFORhMXctA4X9GFMR75r7fx60wV9
GNMe8eFEpxYX9GFMRi3Xn9w544I+jGn3yS2HFxx1QR+c10v6j13c54I+jOlF
4Oqrs6pc0IcxnT3rynW+3AV9GNNCjx1HLQpd0AfneKby969muqAPY1J2fe9m
u8EFfRjT8VR5l1dRLujDmL5ua70WGuSCPoypjnd4G4+XC/rgvF/h444dji7o
w5h+rg2JMF/tgj6Mqfr18+gnS1zQhzHtEJ/1PH6+C/owpjuMPdWqs1zQhzHN
ujzryg2WC/owpoqH8gui9eDRaEwORz1UtNXhcZbz+rHpKzvl4NFkTHObzj4r
FINHqzElLRQ9a80PjxvG9IGcP00ed0YfxiR75FbQtT/O6MOYFnelWOR9d0Yf
xsQbvdd55Xtn9GHM6cH/hmKXM/owJsfPA0kfHzujD2Oq3BkTf+6OM/owJt91
yhcKrzmjD2P6Plfe0qfJGX0Y0/i1SmE65Yw+jKm24YmM6mFn9GFCC3+Pu47v
cUYfJuT9ZVlvz05n9GFCJer9+26XOaMPE6IgRt3pTc7ow4Su9DIe78l0Rh8m
JPrNcN7WDc7ow4Szv0W+yI92Rh8mxOdidig92Bl9mFDoleOHkr2d0YcJPT+q
/yLJ2Rl9mFDxxZfmyWud0YcJvW+e0pK23Bl9mFDg7dGIPCtn9MF5P4P+ZWVz
ndGHCUV6miyvM4PHchOSMfkX3mgIj1UmJJm59+wNbXjYmVBDfqjGa2V4OJvQ
v5rdB4ak4eFhQo/ti23lRODha0LnYtMkZvLCI8iEhvqufnMac0IfJhTy/UB3
+m8n9GFCVddSvzd8c0IfJnRqpFLsea8T+jChiAXLrIS6nNCHCTE29OZbPHFC
HyZ09tilt1F3ndCHCR2WNbI+fN0JfZiQuEjuuU+XnNCHCeUr6Znrn3FCHyZk
0+97KeioE/owobne1TbH9zuhDxNqCTPqGap2Qh8m9HNaaPLC7U7ow4SyfzUr
lhU7oQ8TGpBLP9eb64Q+TMhOV8Z+dpoT+jChnTef/ypJcEIfJhR1Y/rmrxFO
6MOE3ITyNZcGOqEPE7q2de6xg55O6MOEhjc3Thd1ckIfJrTedP3x6DVO6MOE
WJ2bNLqWOaEPExodaMlcauWEPkzIV9rl2bm58OjjrPdX7SqG0+Hx24TuCiWv
rDWCxzBnvYW9CFPQhQcXi0oG1ieWqTpNfB95EovCSt1CJeXgw8siZzffpaVi
GB8/i2wTX02RE4CXEIvEFGae3MWF8U5h0cK0z/MYQ47oiUVHBQIPNfY7Toxf
gkVq0kZ/LT874vvxLDoge0jrcbfjxHzIsehIsbNh4AtH9MYiSbEL4pMeOU7M
jzKL1hnMv7ez3RH9sSg9K9B39jXHie87a3COd6fx0fMmR/TIokNnK+VTTjtO
fL9Tl0XbJ1extI86ok8WlcZaKN3Z7zgxn0wWrX0+9CS+xhG9sug11zpPRoXj
xPejWSz63dxx4WmJI75/zyKN/oG3m/IdJ+Z7Oos+hdPDBRmO6JlFPSoWm8eS
HCfmfzaL3nSGS5yPdkTfLJq60cspIcRxwoNYdHpgV+AcX0d8X58zfumDFlxu
jhMeC1l066Lkwxt2juifRYU3vPS3rHSc8FjKIkchA7bbEkdcD1i0ef2ApIkl
PGxZNCd+xW7uOfBYxaIl029/fzINHmtZtH/58MARQ3jYsSg4JuR4ng48HFhk
4npGx08VHs4s0mkIsrWWg4cri6yGVY0MxOHhwaItT32bxATh4cWipbef/Rvk
hocvi0yXivV1DztMePizKKe5uuj+gAOuNyzam6P9suWrw4RHKIs6fpg/aux1
wN8PsOj89JjYA10OEx5RLCrLjr9c2+mA6xGLvP51Ne687zDhEc8ivf2Lllfe
csD1iUXK8SvyKlsdJjySWSS8bmvArgsOuF6xyFek+UvdSYcJj3TO+TgFih46
7IDrF4tC382+f2qfw4RHDsd7+iOTK9UOuJ6x6Nf158yH2x0mPDaxyO/PQGtv
iQOubyyyE7o+MJzvMOFRwvEz+XtRMtMBf6/AogdxU1WMkh0mPLaxSOKFitTS
WAdc/1j00Mx7V0CYw4THThatsTp2vsDfAddDTk+HDgcc83CY8KhlkeYPgQOd
jg64PrJoVXRYHPdahwmPfSzamlb00MgGHvUsmmEhf9F5ETwOsehewzmTzWx4
HOH0d1LbqHUmPI6xaLmscONfU3g0smhBhFqLKRMep1gkPl9mTYg2PM6ySOhV
TeAhFXicZ1F2XBzvV1l4NLFotYqtpok4PFpY9OxkV3O0IDxaWZQ19urlxUnw
uMYiwSLeeP5Re1yPWdT6VLR47W/7CY82FvWrn9Ta890e12cWqWQeM/3zwX7C
4x6Lwn81n1361h7Xa47nzOoztc/tJzwesej2V2GjkYf2uH6zaCTlqpzdHfsJ
j2csYpvmxp66bo/rOWc9ysktlm2xn/DoYtEuuakFCefs8fcZnON/qJz3+oT9
hEcPi2aLSXtYN9jj++gsUnzn3n98r/2Ex0cWdRcs/K5abY/rP4vch7PXb95u
P+HxnUWT+j/rcW2xx99zcK7H/8y9owvsJzwGWDS6YTr/l0x77A8s6iw9JO6d
Yj/h8ZdF1WZeG1/H2WO/4FxflHRXu0TYT3iMcebz7qWcV4H22D9MqXrXX1V3
b/uJ/XCSKcnUVMv2uthj/zAlhdOpIcF28OA3pX/ZAZp/VsJDyJRaU/XM0pfC
Y4op1XRuqhW3sse/J5qSVZZvQK0FPCRMib04O9/M3B73Z6YUsbuJp40FDzlT
8nnV9dDDAB4KptQyfnFoRAseyqa06QkzersKPFRNqf3H+HxzOfuJ/VbDlBoq
RT2fisNDy5TkPhg9TBKCh64pie41K9OYDA89Uxr0Gt59a8wO+4cpmUXacUcP
2mH/MCW/l9qH1PvtJvZnlin9DZ5bc++zHe7/TMnlUPzr1Hd22D847//ipJ9Z
lx32D1P6NNZu/rnTDvuHKaXc2bWirsMO+4cpNbZMPuR82w77hylxCbxZpnDN
DveLplRSKMp6eskO+4cp7fkVtr7irB32D1MSr3jX5HzCDvuHKZVvtvHRbLDD
/mFK/jWbln3eazfhYcs53srMsJPVdtg/OOffKXc/tcJuwmOtKX3UZAbbltph
/zAlzyd1luqFdtg/TOnAEu/VA9l22D9M6UjuusqbqXbYP0zpzWoXhZpEO9yP
cp5X9LqbEG2H/YMz35Ntz64LtcP+YUqxHwWfTPO3w/7BWS82ybrSnvAIMiWb
4NL6P07wCDWlJmNzpxfr4BFuSvFGay3+r+W6j8vp/uM4Xm7KpJWs1tSPcpPk
rvP9Gg3NR4olq3XOuU5aiZQyRZFS0aKWUChFN0NGczNDkiUzWdMNmjRNoppE
IpKSJTf7ncfD++/rus7jnO/z+/m+zlXiBo8wgfbk3fzymDM8wgXqOnEsafds
eEQKFPDnxe54e3hEC7TOp19S2FR4xAh0y3fpvKUCPDYIdCz+BvMcB484gcaZ
z5ztNhoeCQJ9NCkreu5weCQKNCHoRu2sT+CxVaDjY+96fj4EHskCXVuR/98M
fXjsEGjqffsKe114pAr03b2IfNKGR7pApQHib06vFfRDXT+TsofzuxX0Q6CN
VGGrPFPQD4F+rXXL8H2koB8C+a+Vh4Y0K+89fhBo7OJrZ79tUNAPgawif1mV
UqugHwJ5ztNxzK1W0A+BpumcnXjuqoJ+CMRjy2z/KlXQD3W+xk9wflKsvPfI
EyjfqjViwDkF7+MCzRn34qxVgYJ+CDQk0/XDuScU9EOg28Hd4d8cUdAPgXzm
PWzfdkBBPwR6vGpkZMEeBf0Q6J9LRw0bdit4f1ef51J0oW6qgn4IVL0jI2hy
koJ+CLSpRXu8X4KCfqj3O/r8v2mxCvoh0AdzLv9ZFqW896hS769p/PHXYQr6
IVCeTVs6W6m896hR569rwHdBy+BRq67/kaSoQ0vgUSeQvXvUmmZveNQLdCjl
VtgID3g0CqSdmxfh5w6PJnUel3yw/pALPJoFMrVvi2tzgkeLQMvtF21lBI9W
gfrohKSumwaPNoHCq0dllE2GR7tAZquTsodMgkeHeh64n8heMhYeXQLNDs3a
fXokPLoF6vb33KYzDB496vp7v47xMoVHrzpvptsC843g8VYg1+fmznr68NBi
1FFdZBmgC48+jE5NC+so0YZHf0YLZnoWWL7RoB+MXm9aHxz3UoN+MNrq0v7x
gw4N+sFohefFM85tGvSDkZ5Bf6e8Bxr0g9HX3lWXTO9q0A9GsSVscvxtDfrB
yFuavfNZjQb9YGR8yrhxYZUG/WD0q36xybXLGvSDUbWNZjpd0qAfjB4saJ9X
cEGDfjAavfYHR5sizfv/b1aMujoTxhw4rUE/GG0sP91pdkKDfqjPGzP7x4wj
GvSDUV8b18+ND2rQD0aZIU/Pp+/VoB+MpPXTLUwyNegHozEDpcCsnRr0g9ES
H7fUYds06AcjR+f5e39M1KAfjBJGB2ydGKdBPxgZ3CryKFqvQT8YhVb595uz
VoN+MMrqm7CjZhU85jLy6bbr8Q+GxzxGQ0/k2P8bAI/5jNyKb/kk+cLDjZGt
Qz8vS294uKsetQ5CkQIPmZHzoTN3RXd4eDAyX/jtsnYXeHgy0rctLk+aAw9v
RjZ12W9tZsHDh9GjjMkfVE6Hhy+jItu8RyunwMOPUeETYd8QAR4BjCZlNY4+
Nw4eyxj5Jd6JXWIFjyBGb5Jcjw2yhMdK1fvdwsNnzeARqn7/nG1YgAk8whjt
NWvXNxkMj3BGC7UvRJTrwSNS3Q+VFT9H68AjmtHxhVNPTtKGRwyjJFMe0/Ja
Rj8Y3f/ngXHOSxn9YHTPJDrS87mMfjBK2T801/iJjH4wmvNPZ8aNFhn9YBRZ
MFFKa5LRD0afb+itketl9EOdJ4t4c9NaGf1gNKCr27qhWkY/VJ/rG14drJTR
D9XDUNwWXC6jH6rvpszmKSUy+sFoR3z86z6/yegHo+01DjXXC2X0g1H97zor
9ufL6Ic6rwZapauOy+89DjHyfLPojuMRGf1glOiw4OQnB2X0g9EEEzPq2Cuj
H4xyR99JrsiU0Q9GzzOvph9Ik9EPRhsGW3h8u11GPxhdPDrohtcWGf1gVPqi
VHf6dzL6oZ4X7za8MIuV0Q9GWs5hme+i4HGRUcX1vzrvrYFHCaPLujf7XA6B
R6m63rWny/OWw6Oc0e2cg5S9FB5XGC2a2hCcsBgelep58zjTZbUXPKoY3Yg2
qF+swKOakYlF9P/c3eFRwyh6k5HB7PnwqGXUc80ob8pceNQxqt1+5r9xDvCo
ZxRQ9enbEfbwaGT0vX7VYTM7eDQxuvrZb++MOTya1fOkcIa20UR4tDCy8956
wmAsPFoZdYY29zcYBY82Ri9PJugYDodHu7p/nU6eNBoKjw5GrlX7tD42hkcX
I0PvtB5zQ3h0M5KDKneP0oNHD6ORT7fcnqADj161B7MG/WGnDY+3jN7apbs5
vZHQD06HjfxipX8l9IPTsphz7n6dEvrBqU9GfemapxL6wSm/Te9OYquEfnAa
GZGUsqdZQj84Nezb9yC/UUI/OFnP2FJ3pU5CPzidTN0RdL9GQj84jfjqZfZ/
VRL6wUlnV59A86sS+sHJ8fGra9PKJPSDk9acEX99/buEfnCaMrAkZP15Cf3g
FNXP4nBOoYR+cNq+In7tpXwJ/eD0xSN+9/FxCf3gNGpT1F2joxL6wanj/J61
M3Il9INTbmhLbmCOhH5w6nyaE5ieLaEfnP7XZlRcsktCPzhtTtzyU2eKhH5w
ynZxHTsqWUI/ODlb/zzNI1FCPzi1RrQ3JMXBgzjd7llsVBIDDwdO9rVuta8i
4eHEqeiA7ni+Bh5zOZlKfxusDIHHPPV+5urE/bQcHvM5mTi2bmxdCg83ThXh
lz+09oWHO6cXK3rGfOMND5mT5ahLlcc84OHBKah73ZtnIjw8OQ3ODfnlU1d4
eHPy9Hj2ar0zPHw4jf/epazUER6+nO4u+nuoIcHDj1P9q4aXXtPhEcAp2LLQ
8+gUeCzjtKYz36FHgEcQJ7MnI099MQEeKznt6vDOzbaGR6h6PcdTZu0j4RHG
aWnKGpPZw+ERru7H+t60rKHwiFR9d2WmPTeGRzSnR5sPfOQyGB4xnHbeX2Fy
aBA8NnC6afdVZp8B8IjjtDEiJ2txX3gkcNJ7duqTi+9E9IPTdLnxY8teEf3g
pHt2XVp8t4h+cBqX3JT0sENEPzgNPBCo9eUTEf3g5GIT0HH6oYh+cDpd8KmX
ebOIfnC6MWkSbWoU0Q9OF1qP7XteJ6IfnNq29o/w+VtEP1Tv4btLK6+L6Aen
jA/PJs+oFNEPTsPMy64cLxfRD06hy81iLf4Q0Q9OP0UOOZp+QUQ/OP0wYuAX
A8+J6Aenyv1eXhvPiOgHpz8T/e+9yhPRD3X/VGysD/tZRD84GZ80dH52WEQ/
OD1oXjkm+KCIfqjnxfLeiMf7RPSDk8P+wVOXZ4voByefmUMC23aJ6AcnOy8f
nZWpIvrBqclX/KgzGR7lnFabuaWs3QyPK+rnRwui3sXDo1Jd383NVZti4VHF
6XryjJ2G6+BRzYndt7j4fQQ8ajgVGncusF4Nj1p1frWMvH9ZAY86TjkN9yqc
voFHPacn08v33fSHR6O6Xn1HNCxbDI8mTo/XKPFvvODRzMnPqiIl1QMeLZzS
de70s5bg0ar+/uuuxmJXeLRxsioOH+Y5Dx7tnJysyku6nODRwWlA3fyrO2bB
o4tTRETw1An28OjmpHQl6VTawaOH0/DswXbBk+HRyylroP9VfVt4vFX322eP
i/PGwUNrMq1epWesGSPO/D8yddOu
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[Large], 
        LineBox[CompressedData["
1:eJwtznlczPsex/FyKkmR9oVppqamaTSri6jm48gS0960TaWZTEXWkqhkFKXF
Eo4kSztKj1KuJZTtWA5CHh05HNfhiLi37FLkcrw/j8c85o/f5/v8vFiqpYHq
YVpaWq3fft//f8wrqdFm/6nmd+qlu0u+z2vpxLV/3bwZViuV/DNvpeNSxog7
sg9Ib1z/Pu+kkRVP9ebzqqVx/8wH6bUVNoIhcaX0h9cvrbbpNbDJKYf3SfpM
K/rNOvMyeIPSxp49A6V1e+F9ljK7FnMyMkrhDUm5c2MXam8tgadF+fWPNyju
F2Nfi948rWV0ynfC16bul2N6W/t34P0wym28dcajdTvu/UTKcrd5teXb4OmQ
YXKll/3+Ing6lFCYvkvVvBWeLr39ecyZwONb4OnRQIRt0AzeZnjDqX3J0obm
1kJ4+hS84qc8iyUF8PRJczR7StrEfHgjqIXxaZraPA+eAe0btGMU6W+EN5Lu
pbxdozcqF54hRehaSczZOfAMKanbb9hk7w3wjCi646G2TcZ6eKPIfeMNVf6p
bHij6dSHw1PT9bLhGRNnItd7QJGFfWPavaz+mvDUOvjG1J4x6pPcYR3ej6FN
Ff5mZ7ZrcG8MdWcpzl4dqYFnQuNub395x3wtPBNSu3sMurEy4ZlQoUm7/93J
a+CZ0tz6Bcs7FRnwTOmQe1f8srx0eGbkY2MU8e5sGjwzuljX+d9T2mnwzKjP
adJI17mr4ZnTgXMWxy7uWQXPnGLm+xsNvU+FZ0ENKgO32JBUeBbE3F5yKffM
SngWxJEPRerwVsKzpHnJ2XWafSnwLCmVO5XRYJkCz4qqUv/dwdm5Ap4VZe1X
fm2wXgHPinpmHd70pTwZnjUZPnerv81PhmdN5yqd+/vakuDZkFP6leMMeRI8
GzroxRDyepfDs6HJv4w+8SR/OTxbknmw/2PNWw7PlrJXeTZVtC+DN5Ye3fS2
k6csgzeWtkwqLBpptwzeWGpxuFo8vXgpvHE0VDLJ4H/vl8AbR5bXZ67vCF8C
j0Ha1+s/nji/GB6DBnLlugnCxfAYdJ17Nae2YhE8O7pkMXGzr/UieHY0VVQQ
xN6RCI9JsuSCD9qmidhnkk6c+I+mXxbCZ1Lwri6e+diFeM+kmkdJLdo1C3CP
Sc6N+pZyyQJ4LDJYVd7x8kICPBbN9AqlmtAEeCwy0xx1V/fGw2ORUM4+brAx
Hh6LbEfGTk1jx8Ozp6gnDWWlF+Lg2dOso21/pajj4NnTufJHHw+NiINnT44Z
c7jTG9Xw7CnPo6yOH66G50D9T7UXyHXU8BxI74hofeWR+fAcKMdNdUhXOR+e
A93qqileYDIfngOdrnnLbP01Fh6b4mzqy96kxcJjk7PBwcEPolh4bCqr45ad
eqGCx6aFE1I/C6tV8L7thxZXeStV8BzptKP2sX6GCp4jGTTxfEUPlfAcKcNb
eKFnnxKeI1Vzbk8apVTCc6TUzqtTdrGV8JxI7pD0Ob0nBp4TJX5N8m5oiIHn
RPv6ddSc1Bh4TlTs+Ur/njQGnhPlnozxaR0RA49D/IahLyWH5sHjUHd+3cDH
afPgcWg047Rqw4NoeBzSkeraildHw+NQZZa7bZ9lNDxn8m6bOPvwiSh4znRX
L7EtUhEFz5l8wu9ptLSi4DnTVUl2TmJNJDxn8jN1+bDfNxIely7n6Jlu71fA
45Jp2ZaBSVUKeFwqEYz7MytAAY9LbbrDX8ZrKeBxadGRDfEPGiPgudAITdPB
31UR8FxIo3Xp9VyLCHgu5Ka5t0t8LRyeC5XJ9N5p1oXDcyFGszrc1S0cHo8c
Mju8hG/C4PHIalBtqDkcBo9HfU33PS0SwuDxyGhlgeEzdhg8Hj0o2nzt+eNQ
eOMpSu9pum1FKLzx9L6y2ydZFQpvPFk2CZ68cAiFN54a3VuqVneHwBtPEwrs
J9jUhsBzJZOE6Ua/LgmB50rukV2tyRNC4LnSgcXRX1iDcniudCGu0evKeTk8
V1p3K88hpkAOj0+KpbOV3cFyeHyi6wcKg+3k8PhUzfeaVf0iGB6f1tjds+s4
FgyPT56xF/+8mx0MT0DR0yrsjwQEwxNQR1tfRTgzGJ6Aiv7mmt7oC4InoMLJ
hsN0zwbBE1CbZ6f3161B8IS015NVeEyFfWshOU1+dcXlX0HwhdSS2WXgq4/3
MiE9+82j0fFBIO4JaU/1/Vl1jYE/PI2QOswEOX9sCMR9IWWVrpxxRBH4w2sW
UoVUMIUnDkSPkHjDf7fyGgGvW0jFkvz2gUcB6BNRlOHzz94nA9AnolQzfqZg
WwD6vn03brE+mBiAPhFtvNizs3FGAPpE9K558OZMJjyNiEqV/P0Jg/7oE9Eb
M0aN8V1/9Imo/8Zvf3s2+6NPRE4B2+xfbfFHn4iSq16bMhf7o09MOs8T97bP
gWctpluszOSPzvAkYnosbu0sGQ5PJiabtUa+6ht+6BOTeofpPE2hH/rE9LXe
436mzA99YlJu7cmLMvJDn5h6zuZusrrpiz4xhVxu8a8t8kWfmJgJj3aPlvui
T0LvEpaGeln7ok9CCXNWWM1+6IM+CUl2j/piXOWDPgnJwzx19y/0QZ+EVs9J
G9sr8kGfhGJTnO4MfJKhT0KFe8tenTsvQ5+ETl6W6VKhDH3f9k9s7FoeIkOf
hEqPtl4IYsmk/we53Lqy
         "]]}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}, {}, {}, {}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}, {}, {}, {}}}, {{}, {}}}, InsetBox[
     TemplateBox[{"\"CSS-LO\"", "\"LO-C++\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox["\"N=3\"", {
                  GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, 
                 StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "10"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"N=3\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "5"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.7, 0.7}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"d\[Sigma]/dpT\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox["\"pT\"", TraditionalForm], 
      FormBox["\"LO Contribution\"", TraditionalForm]}},
   FrameStyle->Directive[
     GrayLevel[0], 12],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 0.08020556894046232}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
8+AhQTams7xua+XBQ4KOJdsyZMTy4CFBBscslZOGc+EhQTPXJQqP9ebCQ4Im
x364VNmRCw8JUvg+iXttUy48JEjlxu2degdy4SFBVyuvuciX58JDguKH/4hp
peXCQ4LUXn3YuDgkFx4SZClZk5jrkAsPCWJc2Hune2EuPCTI9tbIIrupufCQ
oPR09VO9qrnw4Jyf0JQPhcK58JAgrx/GDbZ/c+AhQYat4Y8MenPgIUHvDxqz
1B7kwEOCpARnFxs258BDgsZkOq+tbsiBhwRt23ShrqQiBx4SNLROZOhjdg48
JOjibI8d9tE58OA83n7O+Y1HDjwk6IhKlniqbQ48JOlf1q58c4sceEiShfui
aj5mDjwk6c4jptY3+Rx4SNL9CI8vn/ly4CFJESPud8Z/ZcNDkjRIsJrZkw0P
SZLp3zkjtCMbHpJUlXI58EZzNjwkqeBvsqT5kWx4SFLUz1m8TTuz4SFJ14Iu
KjoUZMNDkiovGDCFE7PhIUkrUvnFHvpnw0OS9mwxrT5mlw0PSaob7T65e1E2
PCSpZ+CofsP0bHhIkkdnVuct7Wx4SNJp1sHto1LZ8JCklrPnrK14suEhSTvd
9jfX/MyChyRdt7vwQqI7Cx6StFt7S9y2jix4SJJsg1KY6eUseEjSgmWVVa+P
ZcGD8/7fa7tra7LgIUWbmXLy8cVZ8JCi8+7Gyp6pWfCQIudHge1u4VnwkKJp
z3bxRbhnwUOKbvzqrS9fmQUPKboicKTkDmXBQ4pENzZUy5tmwUOKjsd3H4/V
yIKHFK0br9z/QSILHlIUPivQPWhSFjykSLbW8CL3QCY8pMjGgm/HwZ5MeEjR
n1cer3weZcJDihiOfV7TrmXCQ4oEO/aLSZ3OhIcUiX9rvTx5fyY8pKhRv8VJ
YHsmPKTIXsmjWSUvEx5SVHXuwF2rxEx4SJFkw+ug5KBMeEjR5+15CTecM+Eh
Rdqxoc81V2TCQ4rOviyLKGJnwkOKhFwtNUVMM+EhRb4vhu/t0MyEhzTteb3R
dY50Jjyk6erwveNfeDOxv0vTETXdIw2DGfCQpi88Q+YpnzLgIU3WacPT3F9k
YL+Uptgh2ZzVdzLgIU0VF6Jl1zVnwEOazgVF3fA7ngEPaRIJPrQxf3cGPKRJ
YfE37abyDHhIU43G/F3jORnYX6XJU+393VWJGfCQpvpXq2oagzPgIU0+b0z+
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
8FCjxxsKH4pYxsBDjRQD66wumsfAQ4122B8siTSKgYcatY9PP8HSioGHGp15
8HbXH/kYeKjR1y/rll8VjYGHGtUPLTxVMTkGHmokaBBxP3Y4Gh5q5CNXV+7U
Fw0PNRo9eWTU+n00PNQoZ0782JyX0fBQIzPZL0XmD6LhoUZl9/4dmn0zGh5q
1PHv1JKFl6LhoUbDZqoediej4aFGYZ9tP4cfjIaHGhUFh74qqYmGhxo53d4/
9fzWaHioUdwNs+5Pm6LhoUYKLfbv1DOi4aFGi2s9TN0SouGhTioP9l/eE4bx
8KrTTK3Nhf0+0fBRJ/emtMKFzhifmDppiw+fq1kdjc8b1elhS7wwzxKMV0Gd
HCryEoPZ0fBTp6S41vGX0zF+LXUamnOldK1hNDzVie/8dJOHmpgPY3U6t+9O
m71CND6fVKdjuYvdesUwPzPVqWd/SG88XzS81clnTGS91FjUxOd9lupUoDX5
4MmBKPir04eFZs+dP0dNzN9ydTossem18NsorAd16ts7qfFyZ9TEfNqp09TM
7TYpd6OwPtTpV6pd/fxrUROfD3qo08aTqy8KX4zC52vqtD9oX/rLE1ET8x2k
Tnfk4381HojC55/q9Mnqj9CWmqiJ+Y9Rp8up9s2x26KwntSJsf61kOfmqAmP
VHUKm/Xo/ZqsKKwvdepNzFu+fEPUhEe+OsXMdJy+LCoK602dPG0PVq4MjJrw
KFMnrRXvY5w9orD+1GmJb0ZLqH3UhEeVOtW4jkfl2EZhPaqTRdabvH2LoiY8
6tXpSe2pkdsWUVif6iTxUebKoFnUhEejOv37VPNM3zAK61Wdjuf/m+mpFTXh
0aROnX1dz2sU4dGqTqUJw2d7JeBxQ53YhyTusATh0a5OsXrfxNO54NGhTjq7
XVKeDUZifavTzntzxMx/RE54vFSnV3b+TZXvI/F5Lcfv7u30yV2REx7vOetv
z3qH6MeRWP/qlCnHPedze+SERx/nfJi3NXyvRqIHzvqtvMj/8ULkhMcw5/zb
3r0Pa4xEHxok1uJ4buxgJPrQoF8SFgkldZHoQ4MEXx9XZ1ZGog8NGml5f6Ct
JBJ9aFBfi7hYeF4k+tCgm8uClyqlRaIPDSrStVjfHh+JPjRo0POuYUZ4JPrQ
IO61kTfZ/pHoQ4Pi09O1JrlHog8N6q51m9lmF4k+NMgsK4J7u20k+tCgi1KM
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
i/PGwUNrMq1epWesGSPO/D8yddOu
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1: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
hEqPtl4IYsmk/we53Lqy
          "]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"d\[Sigma]/dpT", ""}, {"pT", "LO Contribution"}}, 
      FrameStyle -> Directive[
        GrayLevel[0], 12], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 10}, {0, 0.08020556894046232}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]]}, {"CSS-LO", "LO-C++"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {
         GrayLevel[0], 10}, LegendFunction -> "Frame", LegendLabel -> "N=3", 
       LegendLayout -> {"Column", {Automatic, 5}}]], {0.7, 0.7}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.827988385552696*^9, {3.827988445268791*^9, 3.827988451798533*^9}, 
   3.827988492642845*^9, 3.827988551880669*^9, {3.827988887178474*^9, 
   3.8279889839364157`*^9}, 3.827992700236231*^9, {3.827993673213669*^9, 
   3.8279936855349503`*^9}, {3.827993723546523*^9, 3.82799374235427*^9}, 
   3.828024243643078*^9, 3.8280295056830883`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"c9d8cf9f-ca45-4adc-be6e-d1e011b8fcfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Benchmarks against C++", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9, {3.826782766029014*^9, 3.826782770573827*^9}, {
   3.8280242676456833`*^9, 
   3.8280242775897827`*^9}},ExpressionUUID->"85034ede-8eff-4bea-9a82-\
32bff5db22f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d\[CapitalSigma]LO", "[", 
    RowBox[{"n_", ",", "pt_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"d\[Sigma]LO", "[", 
        RowBox[{"g", ",", "g"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LC1", "\[Rule]", " ", 
          RowBox[{"FC1", "[", 
           RowBox[{"pt", ",", "mH"}], "]"}]}], ",", 
         RowBox[{"LC2", "\[Rule]", " ", 
          RowBox[{"FC2", "[", 
           RowBox[{"pt", ",", "mH"}], "]"}]}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Subscript", "[", 
         RowBox[{"\[Gamma]0", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"ToString", "/@", 
            RowBox[{"{", 
             RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
        RowBox[{"\[Gamma]Ngg", "[", "n", "]"}]}], "}"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A1", "\[Rule]", " ", "A1g"}], ",", 
       RowBox[{"B1", "\[Rule]", " ", "B1g"}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{"LQ", "\[Rule]", " ", "LQ2"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8280243073756533`*^9, 3.828024340013834*^9}, {
   3.828024548354472*^9, 3.828024552553845*^9}, 3.828025179640214*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"a6ec9205-8629-4d7f-9ec2-a8909309102b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"d\[CapitalSigma]LO", "[", 
      RowBox[{"#", ",", "5"}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}], "]"}], "//", "N", 
  RowBox[{"(*", 
   RowBox[{"refs", ":", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2.63602", "e"}], "+", "06"}], ",", "8633.28", ",", "6008.28", 
      ",", "3785.07"}], "}"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8280243448103647`*^9, 3.828024380271352*^9}, {
   3.828024411603818*^9, 3.828024434319178*^9}, {3.828026344429152*^9, 
   3.8280263862570333`*^9}, {3.828026436330844*^9, 3.8280265009333973`*^9}, 
   3.828026550810322*^9, 3.828027190639142*^9, {3.828027265984702*^9, 
   3.828027273496791*^9}, {3.8280273476064367`*^9, 3.82802734805521*^9}, {
   3.828027621979632*^9, 3.828027670265719*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"354ecbcb-ec90-412d-ae28-2bb92da038c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13424.951009922419`", ",", "10799.951009922419`", ",", 
   "9487.451009922419`", ",", "7866.915295636705`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8280244353885508`*^9, 3.828024554210474*^9, 3.8280263476470222`*^9, 
   3.828026629748687*^9, {3.8280272663295927`*^9, 3.8280272742592688`*^9}, 
   3.82802767111514*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"5a751889-409c-4f90-99ba-b3fcb09c76bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]Ngg", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}]}], "]"}], "//", "N", 
  RowBox[{"(*", 
   RowBox[{"refs", ":", 
    RowBox[{"{", 
     RowBox[{"2101.08", ",", 
      RowBox[{"-", "0.833333"}], ",", 
      RowBox[{"-", "2.93333"}], ",", 
      RowBox[{"-", "4.7119"}]}], "}"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8280251860293007`*^9, 3.8280251915040293`*^9}, {
  3.828025241506713*^9, 3.828025242743546*^9}, {3.82802602516763*^9, 
  3.828026025564527*^9}, {3.8280261173054934`*^9, 3.8280261980231447`*^9}, {
  3.8280262492037163`*^9, 3.828026270386156*^9}, {3.8280263146875143`*^9, 
  3.8280263319671926`*^9}, {3.8280272922355223`*^9, 3.828027298487831*^9}, {
  3.82802774025919*^9, 3.828027784611662*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"9a588fd2-2af1-454c-bc13-46f22b4bfbbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.`", ",", "0.9`", ",", 
   RowBox[{"-", "0.15`"}], ",", 
   RowBox[{"-", "1.4464285714285714`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.828025192290618*^9, 3.8280252430511847`*^9, 3.8280260263510942`*^9, {
   3.828026320581757*^9, 3.828026333223709*^9}, 3.8280266311842003`*^9, {
   3.828027293046652*^9, 3.828027299224339*^9}, 3.82802778678552*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"a2a4deca-c69a-4394-b4ed-7ce87c2f8776"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./datfiles/cssLOaspt.dat\>\"", ",", "\"\<Table\>\""}], 
      "]"}], ",", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<./datfiles/morepoints_smallpt_LO_gg_channel.dat\>\"", ",", 
       "\"\<Table\>\""}], "]"}], ",", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<./datfiles/css_cpp_LO_as_pt.dat\>\"", ",", "\"\<Table\>\""}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<CSS-LO\>\"", ",", "\"\<LO-C++\>\"", ",", "\"\<CSS-C++\>\""}], 
         "}"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "10"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<N=3\>\""}], ",", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.7"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<d\[Sigma]/dpT\>\"", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<pT\>\"", ",", " ", "\"\<LO Contribution\>\""}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8280290115418053`*^9, 3.82802903012705*^9}, {
  3.8280290695024652`*^9, 3.828029088173441*^9}, {3.828029516706262*^9, 
  3.828029538934371*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"7c9ca3a3-d00e-47a5-9926-36b8b50a530f"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0, 0, 1], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
        LineBox[CompressedData["
1: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
8+AhQTams7xua+XBQ4KOJdsyZMTy4CFBBscslZOGc+EhQTPXJQqP9ebCQ4Im
x364VNmRCw8JUvg+iXttUy48JEjlxu2degdy4SFBVyuvuciX58JDguKH/4hp
peXCQ4LUXn3YuDgkFx4SZClZk5jrkAsPCWJc2Hune2EuPCTI9tbIIrupufCQ
oPR09VO9qrnw4Jyf0JQPhcK58JAgrx/GDbZ/c+AhQYat4Y8MenPgIUHvDxqz
1B7kwEOCpARnFxs258BDgsZkOq+tbsiBhwRt23ShrqQiBx4SNLROZOhjdg48
JOjibI8d9tE58OA83n7O+Y1HDjwk6IhKlniqbQ48JOlf1q58c4sceEiShfui
aj5mDjwk6c4jptY3+Rx4SNL9CI8vn/ly4CFJESPud8Z/ZcNDkjRIsJrZkw0P
SZLp3zkjtCMbHpJUlXI58EZzNjwkqeBvsqT5kWx4SFLUz1m8TTuz4SFJ14Iu
KjoUZMNDkiovGDCFE7PhIUkrUvnFHvpnw0OS9mwxrT5mlw0PSaob7T65e1E2
PCSpZ+CofsP0bHhIkkdnVuct7Wx4SNJp1sHto1LZ8JCklrPnrK14suEhSTvd
9jfX/MyChyRdt7vwQqI7Cx6StFt7S9y2jix4SJJsg1KY6eUseEjSgmWVVa+P
ZcGD8/7fa7tra7LgIUWbmXLy8cVZ8JCi8+7Gyp6pWfCQIudHge1u4VnwkKJp
z3bxRbhnwUOKbvzqrS9fmQUPKboicKTkDmXBQ4pENzZUy5tmwUOKjsd3H4/V
yIKHFK0br9z/QSILHlIUPivQPWhSFjykSLbW8CL3QCY8pMjGgm/HwZ5MeEjR
n1cer3weZcJDihiOfV7TrmXCQ4oEO/aLSZ3OhIcUiX9rvTx5fyY8pKhRv8VJ
YHsmPKTIXsmjWSUvEx5SVHXuwF2rxEx4SJFkw+ug5KBMeEjR5+15CTecM+Eh
Rdqxoc81V2TCQ4rOviyLKGJnwkOKhFwtNUVMM+EhRb4vhu/t0MyEhzTteb3R
dY50Jjyk6erwveNfeDOxv0vTETXdIw2DGfCQpi88Q+YpnzLgIU3WacPT3F9k
YL+Uptgh2ZzVdzLgIU0VF6Jl1zVnwEOazgVF3fA7ngEPaRIJPrQxf3cGPKRJ
YfE37abyDHhIU43G/F3jORnYX6XJU+393VWJGfCQpvpXq2oagzPgIU0+b0z+
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
8FCjxxsKH4pYxsBDjRQD66wumsfAQ4122B8siTSKgYcatY9PP8HSioGHGp15
8HbXH/kYeKjR1y/rll8VjYGHGtUPLTxVMTkGHmokaBBxP3Y4Gh5q5CNXV+7U
Fw0PNRo9eWTU+n00PNQoZ0782JyX0fBQIzPZL0XmD6LhoUZl9/4dmn0zGh5q
1PHv1JKFl6LhoUbDZqoediej4aFGYZ9tP4cfjIaHGhUFh74qqYmGhxo53d4/
9fzWaHioUdwNs+5Pm6LhoUYKLfbv1DOi4aFGi2s9TN0SouGhTioP9l/eE4bx
8KrTTK3Nhf0+0fBRJ/emtMKFzhifmDppiw+fq1kdjc8b1elhS7wwzxKMV0Gd
HCryEoPZ0fBTp6S41vGX0zF+LXUamnOldK1hNDzVie/8dJOHmpgPY3U6t+9O
m71CND6fVKdjuYvdesUwPzPVqWd/SG88XzS81clnTGS91FjUxOd9lupUoDX5
4MmBKPir04eFZs+dP0dNzN9ydTossem18NsorAd16ts7qfFyZ9TEfNqp09TM
7TYpd6OwPtTpV6pd/fxrUROfD3qo08aTqy8KX4zC52vqtD9oX/rLE1ET8x2k
Tnfk4381HojC55/q9Mnqj9CWmqiJ+Y9Rp8up9s2x26KwntSJsf61kOfmqAmP
VHUKm/Xo/ZqsKKwvdepNzFu+fEPUhEe+OsXMdJy+LCoK602dPG0PVq4MjJrw
KFMnrRXvY5w9orD+1GmJb0ZLqH3UhEeVOtW4jkfl2EZhPaqTRdabvH2LoiY8
6tXpSe2pkdsWUVif6iTxUebKoFnUhEejOv37VPNM3zAK61Wdjuf/m+mpFTXh
0aROnX1dz2sU4dGqTqUJw2d7JeBxQ53YhyTusATh0a5OsXrfxNO54NGhTjq7
XVKeDUZifavTzntzxMx/RE54vFSnV3b+TZXvI/F5Lcfv7u30yV2REx7vOetv
z3qH6MeRWP/qlCnHPedze+SERx/nfJi3NXyvRqIHzvqtvMj/8ULkhMcw5/zb
3r0Pa4xEHxok1uJ4buxgJPrQoF8SFgkldZHoQ4MEXx9XZ1ZGog8NGml5f6Ct
JBJ9aFBfi7hYeF4k+tCgm8uClyqlRaIPDSrStVjfHh+JPjRo0POuYUZ4JPrQ
IO61kTfZ/pHoQ4Pi09O1JrlHog8N6q51m9lmF4k+NMgsK4J7u20k+tCgi1KM
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
i/PGwUNrMq1epWesGSPO/D8yddOu
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
        LineBox[CompressedData["
1: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
hEqPtl4IYsmk/we53Lqy
         "]]}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
        LineBox[CompressedData["
1:eJws2nVUVFsfxnEEkRTpbhg6ZlRUcn50d3eXSAtIioBKiEoqAooFKDZ2t1iI
3YWKigkWYr3zXp75xzXrzJw5e3/3Z2/vuqrFpPvEc3NxcQ3wcXH9/8+J12f2
ykheueJHO9m6YStOf9P5zOZ/+9p/f9ZOts9B5cXvvD+z50d+KiChnexCyR2O
zws+s6f2BEoJdu5gb8qwFLy78TP7zbkzIVy2O9hXr/z/9ZkdvYSfKTG4nf1d
5/83/Mw+42rUzyrfzlbh3O2g8gh7RPtzupvWdrbT8wLOHUfYzzfe/uV7eRs7
8/+3yxhht56YPtksaxt7Tcv/XyPsnfutMz/Lb2Of+fb/G46wHfM+Gcw918N+
7/3/Bxxh8+61udyS2cP+7/EkR9nbpz6cna3Sw/7vdpaj7KK3mfzD/VvZCf+9
RtlOkdm3RhduZf9/tGErRtk//8g8LZu+lf3fcA+Ost/L7pFaMbSF/d/jPR9l
C7ELjgi3bWH/dzvBL+yoD9Ypoz5b2DP+e31hp8Z/TZ4ltIX93/SFfWHvfVP0
u/9sN/u/4S7+wn7QGXmid2E3+7/H2/GF/VYxzf2heTf7v9vd/cJuGRn7aPmz
iz3R4yubV27t8I0DXejxlf19V8HMhrwu9PjKFnsrnpw7pws9vrI75efeyBnv
RI+v7HnvBw5WHetEj6/s80Yy4tsWdaLHV/bomeyi2w6d6PGN7Vu0/8M/4U70
+MY+876Pl3FrM3p8Y296VXDYqm0zenxjP88qC3SM34we39gJHU06psab0eMb
W7Fgbr7I+Cb0+M7mLi+3Pn1uE3p8Z1dzF6t71m9Cj+9s8wMnkndFbkKP7+yl
b14ffGa4CT2+s6dc0RN49Hsjenxn73sp6NN+ZSN6/GDLjXx+ptK+ET1+sH1i
xiZHpW1Ejx/s1OkZ0cG0ET1+sPNDu1r4JDaixw92s8eh3wlDG9DjB3uw6NT9
7MMb0GOMnfZM5Jbuig3oMcYeaUu3WBK3AT3G2IXbpu+vMNuAHmNsix9sC3Wx
Degxxvb7uEcp9M169Bhjl+wL7jE4uR49xtjRP02qG1avR4+f7M4E58hlmevR
4yebTy2mUNJ1PXr8ZO8XTbqvw1iPHj/Zg0q288//60CPn+xrXV2jww860OMn
e2dzsWfD/g70GGebiTQ8PFrfgR7j7L2pbZbx6R3oMc6OkvRQrHbrQI9x9g9G
bp+OXgd6jLPtLXdasfk70GOc/a3i9JfGq+vQ4xf73fIhu/qadejxi30laU1C
hss69PjF9pu1bYuB4Dr0+MX+bnVw56lLa9HjF9v54JdM/WVr0eMXm++8gXWi
x1r0+M3euPPf8XSxtejxm31BLW2l9e129PjNlr+YH3K/pR09frNnPAyUnhHZ
jh6/2VcL70i6MdrR4zc7NTlio8r7NvT4zX5iVX28p7cNPf6wNx8+3fuusA09
/rBX5G1Y+NiuDT3+sG3V9S8Ui7Shxx92cmKE8cV7rejxh31srqDAsY2t6PGH
PXSP+dM/vRU9/rLX3l7nVWfeih5/2esqGFHz+FvR4y97o8DKBS9vr0GPv+yc
f/nNPzauQY+/7O2tsr3rs9agx1+2dP6Uy8+s16DHP3bh9CcP9oitQY9/7OZ3
qTOkBlvQ4x9bra+cwdvbgh7/2G9iDm8vrWhBj3/sTU+fKi4OaEGPf+wZXqEK
Yrot6MFFHvfGf6r9Xo3xcNHO1mUC+66tRh8uUjfpcejbuBrj46Jmw2re0AWr
0YuLOg5HsJPdV2O8XMSKD3MaVV+Nflwk3qek9HVsFcbPRaIllofnXVuFnlz0
cmtVRnDnKswHFxXfNWk8VLwKfbmoa+0jtRr/VZgfLjJolZW+YrgKvbno3RMv
ucIpqzBfk6it1reo6Wkz+k8iI6Zfg/yhZszfJCq5d2iKQEMz1sMkctzqox2R
2oz5nES5Rj7Ock7NWB+T6O4/n+Q5Gs2YX87nmUeND/9twnqZRJuuf7Vrf9CE
+Z5EF7/Fej/b34T1M4kad2T8WdTQhPmfRAPN++xLM5qwnibRvNkJJQ/cm9CD
m2bqK21art+EHtyknfVgf5tAE3pw0z/jeXzcbxrRg5t6PvAOHzvfiB7cxHdM
hO/a5kb04KaRnR+mzFzciB7cFOR5x/J9XCN6cJPMdmO/73aN6MFNwg+jRr0Y
jejBTVLvBk6O8zaiBzcpJ/RKfBlqQA/O70WkN8zpa0APbjoaOqfx0pYG9OAh
hcyc4101DejBQ5N21R7uT21ADx5Kk11UyfZqQA8eMrIf1hyb3oAenPcnfr/4
IdWAHjzktlolzfJnPXrw0NIBnzN9j+rRg4eO5/+pWX2yHj146Imir+K2TfXo
wUN7/D5mTKqqR4//36/VpCW1Hj14KL/sW0KmTz16TKZZEr8nV8+uR4/J5P3K
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
dNi3abgKfgh6v/Pdd8G9Vd3/DzpG8FI=
         "]]}}, {
       {RGBColor[0, 0, 1], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}}, {
       {RGBColor[0, 0, 1], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[
        Large]}, {}, {}, {}, {}, {}, {}, {}}, {
       {RGBColor[0, 0, 1], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[
        Large]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, InsetBox[
     TemplateBox[{"\"CSS-LO\"", "\"LO-C++\"", "\"CSS-C++\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox["\"N=3\"", {
                  GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, 
                 StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "10"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"N=3\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "5"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.7, 0.7}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"d\[Sigma]/dpT\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox["\"pT\"", TraditionalForm], 
      FormBox["\"LO Contribution\"", TraditionalForm]}},
   FrameStyle->Directive[
     GrayLevel[0], 12],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 0.08020556894046232}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
8+AhQTams7xua+XBQ4KOJdsyZMTy4CFBBscslZOGc+EhQTPXJQqP9ebCQ4Im
x364VNmRCw8JUvg+iXttUy48JEjlxu2degdy4SFBVyuvuciX58JDguKH/4hp
peXCQ4LUXn3YuDgkFx4SZClZk5jrkAsPCWJc2Hune2EuPCTI9tbIIrupufCQ
oPR09VO9qrnw4Jyf0JQPhcK58JAgrx/GDbZ/c+AhQYat4Y8MenPgIUHvDxqz
1B7kwEOCpARnFxs258BDgsZkOq+tbsiBhwRt23ShrqQiBx4SNLROZOhjdg48
JOjibI8d9tE58OA83n7O+Y1HDjwk6IhKlniqbQ48JOlf1q58c4sceEiShfui
aj5mDjwk6c4jptY3+Rx4SNL9CI8vn/ly4CFJESPud8Z/ZcNDkjRIsJrZkw0P
SZLp3zkjtCMbHpJUlXI58EZzNjwkqeBvsqT5kWx4SFLUz1m8TTuz4SFJ14Iu
KjoUZMNDkiovGDCFE7PhIUkrUvnFHvpnw0OS9mwxrT5mlw0PSaob7T65e1E2
PCSpZ+CofsP0bHhIkkdnVuct7Wx4SNJp1sHto1LZ8JCklrPnrK14suEhSTvd
9jfX/MyChyRdt7vwQqI7Cx6StFt7S9y2jix4SJJsg1KY6eUseEjSgmWVVa+P
ZcGD8/7fa7tra7LgIUWbmXLy8cVZ8JCi8+7Gyp6pWfCQIudHge1u4VnwkKJp
z3bxRbhnwUOKbvzqrS9fmQUPKboicKTkDmXBQ4pENzZUy5tmwUOKjsd3H4/V
yIKHFK0br9z/QSILHlIUPivQPWhSFjykSLbW8CL3QCY8pMjGgm/HwZ5MeEjR
n1cer3weZcJDihiOfV7TrmXCQ4oEO/aLSZ3OhIcUiX9rvTx5fyY8pKhRv8VJ
YHsmPKTIXsmjWSUvEx5SVHXuwF2rxEx4SJFkw+ug5KBMeEjR5+15CTecM+Eh
Rdqxoc81V2TCQ4rOviyLKGJnwkOKhFwtNUVMM+EhRb4vhu/t0MyEhzTteb3R
dY50Jjyk6erwveNfeDOxv0vTETXdIw2DGfCQpi88Q+YpnzLgIU3WacPT3F9k
YL+Uptgh2ZzVdzLgIU0VF6Jl1zVnwEOazgVF3fA7ngEPaRIJPrQxf3cGPKRJ
YfE37abyDHhIU43G/F3jORnYX6XJU+393VWJGfCQpvpXq2oagzPgIU0+b0z+
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
8FCjxxsKH4pYxsBDjRQD66wumsfAQ4122B8siTSKgYcatY9PP8HSioGHGp15
8HbXH/kYeKjR1y/rll8VjYGHGtUPLTxVMTkGHmokaBBxP3Y4Gh5q5CNXV+7U
Fw0PNRo9eWTU+n00PNQoZ0782JyX0fBQIzPZL0XmD6LhoUZl9/4dmn0zGh5q
1PHv1JKFl6LhoUbDZqoediej4aFGYZ9tP4cfjIaHGhUFh74qqYmGhxo53d4/
9fzWaHioUdwNs+5Pm6LhoUYKLfbv1DOi4aFGi2s9TN0SouGhTioP9l/eE4bx
8KrTTK3Nhf0+0fBRJ/emtMKFzhifmDppiw+fq1kdjc8b1elhS7wwzxKMV0Gd
HCryEoPZ0fBTp6S41vGX0zF+LXUamnOldK1hNDzVie/8dJOHmpgPY3U6t+9O
m71CND6fVKdjuYvdesUwPzPVqWd/SG88XzS81clnTGS91FjUxOd9lupUoDX5
4MmBKPir04eFZs+dP0dNzN9ydTossem18NsorAd16ts7qfFyZ9TEfNqp09TM
7TYpd6OwPtTpV6pd/fxrUROfD3qo08aTqy8KX4zC52vqtD9oX/rLE1ET8x2k
Tnfk4381HojC55/q9Mnqj9CWmqiJ+Y9Rp8up9s2x26KwntSJsf61kOfmqAmP
VHUKm/Xo/ZqsKKwvdepNzFu+fEPUhEe+OsXMdJy+LCoK602dPG0PVq4MjJrw
KFMnrRXvY5w9orD+1GmJb0ZLqH3UhEeVOtW4jkfl2EZhPaqTRdabvH2LoiY8
6tXpSe2pkdsWUVif6iTxUebKoFnUhEejOv37VPNM3zAK61Wdjuf/m+mpFTXh
0aROnX1dz2sU4dGqTqUJw2d7JeBxQ53YhyTusATh0a5OsXrfxNO54NGhTjq7
XVKeDUZifavTzntzxMx/RE54vFSnV3b+TZXvI/F5Lcfv7u30yV2REx7vOetv
z3qH6MeRWP/qlCnHPedze+SERx/nfJi3NXyvRqIHzvqtvMj/8ULkhMcw5/zb
3r0Pa4xEHxok1uJ4buxgJPrQoF8SFgkldZHoQ4MEXx9XZ1ZGog8NGml5f6Ct
JBJ9aFBfi7hYeF4k+tCgm8uClyqlRaIPDSrStVjfHh+JPjRo0POuYUZ4JPrQ
IO61kTfZ/pHoQ4Pi09O1JrlHog8N6q51m9lmF4k+NMgsK4J7u20k+tCgi1KM
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
i/PGwUNrMq1epWesGSPO/D8yddOu
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1: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
hEqPtl4IYsmk/we53Lqy
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          GrayLevel[0]], 
         Line[CompressedData["
1:eJws2nVUVFsfxnEEkRTpbhg6ZlRUcn50d3eXSAtIioBKiEoqAooFKDZ2t1iI
3YWKigkWYr3zXp75xzXrzJw5e3/3Z2/vuqrFpPvEc3NxcQ3wcXH9/8+J12f2
ykheueJHO9m6YStOf9P5zOZ/+9p/f9ZOts9B5cXvvD+z50d+KiChnexCyR2O
zws+s6f2BEoJdu5gb8qwFLy78TP7zbkzIVy2O9hXr/z/9ZkdvYSfKTG4nf1d
5/83/Mw+42rUzyrfzlbh3O2g8gh7RPtzupvWdrbT8wLOHUfYzzfe/uV7eRs7
8/+3yxhht56YPtksaxt7Tcv/XyPsnfutMz/Lb2Of+fb/G46wHfM+Gcw918N+
7/3/Bxxh8+61udyS2cP+7/EkR9nbpz6cna3Sw/7vdpaj7KK3mfzD/VvZCf+9
RtlOkdm3RhduZf9/tGErRtk//8g8LZu+lf3fcA+Ost/L7pFaMbSF/d/jPR9l
C7ELjgi3bWH/dzvBL+yoD9Ypoz5b2DP+e31hp8Z/TZ4ltIX93/SFfWHvfVP0
u/9sN/u/4S7+wn7QGXmid2E3+7/H2/GF/VYxzf2heTf7v9vd/cJuGRn7aPmz
iz3R4yubV27t8I0DXejxlf19V8HMhrwu9PjKFnsrnpw7pws9vrI75efeyBnv
RI+v7HnvBw5WHetEj6/s80Yy4tsWdaLHV/bomeyi2w6d6PGN7Vu0/8M/4U70
+MY+876Pl3FrM3p8Y296VXDYqm0zenxjP88qC3SM34we39gJHU06psab0eMb
W7Fgbr7I+Cb0+M7mLi+3Pn1uE3p8Z1dzF6t71m9Cj+9s8wMnkndFbkKP7+yl
b14ffGa4CT2+s6dc0RN49Hsjenxn73sp6NN+ZSN6/GDLjXx+ptK+ET1+sH1i
xiZHpW1Ejx/s1OkZ0cG0ET1+sPNDu1r4JDaixw92s8eh3wlDG9DjB3uw6NT9
7MMb0GOMnfZM5Jbuig3oMcYeaUu3WBK3AT3G2IXbpu+vMNuAHmNsix9sC3Wx
Degxxvb7uEcp9M169Bhjl+wL7jE4uR49xtjRP02qG1avR4+f7M4E58hlmevR
4yebTy2mUNJ1PXr8ZO8XTbqvw1iPHj/Zg0q288//60CPn+xrXV2jww860OMn
e2dzsWfD/g70GGebiTQ8PFrfgR7j7L2pbZbx6R3oMc6OkvRQrHbrQI9x9g9G
bp+OXgd6jLPtLXdasfk70GOc/a3i9JfGq+vQ4xf73fIhu/qadejxi30laU1C
hss69PjF9pu1bYuB4Dr0+MX+bnVw56lLa9HjF9v54JdM/WVr0eMXm++8gXWi
x1r0+M3euPPf8XSxtejxm31BLW2l9e129PjNlr+YH3K/pR09frNnPAyUnhHZ
jh6/2VcL70i6MdrR4zc7NTlio8r7NvT4zX5iVX28p7cNPf6wNx8+3fuusA09
/rBX5G1Y+NiuDT3+sG3V9S8Ui7Shxx92cmKE8cV7rejxh31srqDAsY2t6PGH
PXSP+dM/vRU9/rLX3l7nVWfeih5/2esqGFHz+FvR4y97o8DKBS9vr0GPv+yc
f/nNPzauQY+/7O2tsr3rs9agx1+2dP6Uy8+s16DHP3bh9CcP9oitQY9/7OZ3
qTOkBlvQ4x9bra+cwdvbgh7/2G9iDm8vrWhBj3/sTU+fKi4OaEGPf+wZXqEK
Yrot6MFFHvfGf6r9Xo3xcNHO1mUC+66tRh8uUjfpcejbuBrj46Jmw2re0AWr
0YuLOg5HsJPdV2O8XMSKD3MaVV+Nflwk3qek9HVsFcbPRaIllofnXVuFnlz0
cmtVRnDnKswHFxXfNWk8VLwKfbmoa+0jtRr/VZgfLjJolZW+YrgKvbno3RMv
ucIpqzBfk6it1reo6Wkz+k8iI6Zfg/yhZszfJCq5d2iKQEMz1sMkctzqox2R
2oz5nES5Rj7Ock7NWB+T6O4/n+Q5Gs2YX87nmUeND/9twnqZRJuuf7Vrf9CE
+Z5EF7/Fej/b34T1M4kad2T8WdTQhPmfRAPN++xLM5qwnibRvNkJJQ/cm9CD
m2bqK21art+EHtyknfVgf5tAE3pw0z/jeXzcbxrRg5t6PvAOHzvfiB7cxHdM
hO/a5kb04KaRnR+mzFzciB7cFOR5x/J9XCN6cJPMdmO/73aN6MFNwg+jRr0Y
jejBTVLvBk6O8zaiBzcpJ/RKfBlqQA/O70WkN8zpa0APbjoaOqfx0pYG9OAh
hcyc4101DejBQ5N21R7uT21ADx5Kk11UyfZqQA8eMrIf1hyb3oAenPcnfr/4
IdWAHjzktlolzfJnPXrw0NIBnzN9j+rRg4eO5/+pWX2yHj146Imir+K2TfXo
wUN7/D5mTKqqR4//36/VpCW1Hj14KL/sW0KmTz16TKZZEr8nV8+uR4/J5P3K
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
dNi3abgKfgh6v/Pdd8G9Vd3/DzpG8FI=
          "]]}}, {{
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          GrayLevel[0]]}}, {{
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          GrayLevel[0]]}, {}, {}, {}, {}, {}, {}, {}}, {{
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          GrayLevel[0]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"d\[Sigma]/dpT", ""}, {"pT", "LO Contribution"}}, 
      FrameStyle -> Directive[
        GrayLevel[0], 12], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 10}, {0, 0.08020556894046232}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[
          Rational[1, 180]], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[
          Rational[1, 180]], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        Directive[
         PointSize[
          Rational[1, 180]], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         GrayLevel[0]]}, {"CSS-LO", "LO-C++", "CSS-C++"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}, Joined -> {True, True, True}, LabelStyle -> {
         GrayLevel[0], 10}, LegendFunction -> "Frame", LegendLabel -> "N=3", 
       LegendLayout -> {"Column", {Automatic, 5}}]], {0.7, 0.7}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.828029089657001*^9, 3.828029140849588*^9, 3.8280294616466837`*^9, {
   3.8280295181606216`*^9, 3.828029582732418*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"3b5da2d1-6e35-46e6-827d-a3acd357c678"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./datfiles/cssNLOaspt.dat\>\"", ",", "\"\<Table\>\""}], 
      "]"}], ",", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<./datfiles/morepoints_smallpt_NLO_without_LO.dat\>\"", ",", 
       "\"\<Table\>\""}], "]"}], ",", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<./datfiles/css_cpp_NLO_as_pt.dat\>\"", ",", "\"\<Table\>\""}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<CSS-NLO\>\"", ",", "\"\<NLO-C++\>\"", ",", "\"\<NLO-C++\>\""}], 
         "}"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "10"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<N=3\>\""}], ",", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.7"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<d\[Sigma]/dpT\>\"", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<pT\>\"", ",", " ", "\"\<NLO Contribution\>\""}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.828030595585511*^9, 3.828030642054853*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"6ccbe862-0fdc-40d7-8f7f-c264c10106ae"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0, 0, 1], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
        LineBox[CompressedData["
1:eJw03Hc8le8fx3F7Rfbejn04zolK87yjtEil7L2a0qI0NaVBJNKgImkqGpoa
SntHWxLaSfbI7/y+Plf/9LgfOM59Pe/XfR/3fd23aXjs1CgJMTGxGFkxsf//
3/evUXir9HFtZEt5mU1g6o0W60ZhyLw1pUmbysumlhpt+D6lUagTFP6wwKi8
bLnGybE1yxqFd5olSgvO3yzLnz9CoSqvUah/5INbjNfNsocP/v+vUaipfWJ+
zZ8bZa3W/3/BRqHz20ujv6ffKDMWvVqp0R9h3NyR7xYNulE2rmaZ6BX/CJPu
rXWPene9bMH/X27+H+Fti67so+uvl+3O/v+/P8I3NUrHHRyul91s+f8L/hGG
L84ZVfP2WtmPKf9/g3+E8Ydd6o9vvlb239vTaBIeuqDzJXHYtbKR/3+5EU3C
7vAZe3e9KyuL/u9fk9C8n3Vuz5iysv+vbWBqk/BBg9tO1ZKrZf+tbmmTsMDQ
Z9k5ztWy/95eTZNQd/SqhMdZV8r+ezmFv8KpbkbVUL5S5vjfv7/Chgfj+jUm
Xy77b/gC/wrtMn9H3pS9XPbf6m74K5wmddvj4KZLZf+9vZN/hXJdd7TiFC+V
/fdyVX+F1Z/DW8x3XCzr82gWGs4169hjcJE8moUpGl3itwovkEez0Gu17Pkt
gy+QR7Pw79FbK9/dKSWPZqGfzO0F+YGl5NEs3HjoduDTpvPk0Swc6+1UNGXL
efJoEb681C9Bw/I8ebQIN7dpRMjfPEceLcI/ZYsLTcLPkUeL8LNOispEyXNl
/w3fjRahPY//NaHgLHm0CMV0FcVzJ54lj1ah2L55B483nSGPVuFhi6EpO/ec
IY9WYVOyYZu725my7f+9YKtwhafUyttNJeTRKjQNuGLdur+EPFqFu2xfzngy
uYQ82oTXq/fLTZAoIY82YU/KkkG+Z4vJo02oMFM7vnFWMXm0CR/EOR2UMykm
jzbhw6e8L5lVp8mjTbhj3K/ytO2nyaNdGJNcI9444TR5tAvfaRkXF8qcJo92
oce4AoeSm6fIo124pPyqjuzaU+TRLpz1d7HH3lGnyKNdGNQt+Dlb4hR5tAv/
/XpbWLmpiDw6hMkGrU52ykXk0SHMP/nE6E7WybL/Xm5+h7BzZ+uivWYnyaND
+C9h5bE9RSfIo0Poc9L9YOnIE+TRIbwyfEtW/ePj5NEp5Ds42uhGHCePTqFj
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
mt5vTbT/cDbFszDFMx1/2P5Q9HqHB2dKipb7+jDF4d+Di+Qa2f7RFIZPBXLy
v2n/4m6KpxuHHJX6xfaXplil7JXT9YP2/z6mWOqx8OfP72z/aYpbFsv3v/1G
HmGmWJY76lr5V/KINsUoic3Tj7DjwxxTjGmRm5XcQB7zTeGwL0Iyqp484kwR
eNHBfngd29+aIuP231/9P5NHoinOq1lNef+J7X9Fv79WEHi4hjw2m2Ls9hid
mI9sf2yK8r3mKbxq8sgwxa5X6be+v2f7Z1PoLKu7nf+OPHJMUTB02G6/t2x/
bYqKhfljFd6QR6Ep5gzkVJ17xfbfpkibc2xySBV5lJgi9LfZZclKtj83RVtB
mGn+C/K4YorRuYJNeE4eN0yxxdKz/dVT8qgwxYr6mQkxT9j+XjQe/4zV/7HP
E09FPgZyDzc/ZMdjU+zNPnxS/QF5vDPFg5QlZbvusT5E219TrYzeXdaHKepO
TNyaVcH6MMWTC2I+qrdZH6ZY4zhuXlI568MU3+P9X3fcYH2YImVQRO7M66wP
M7jvWFPxvIz1YYYpTnd8h11lfZghM3iEf+7lqL6/r5TN4KX49lnvRXa8N4O1
VOrdwAusDzMoNQ4dc+4868MMwsVn3BXPsT7M8GLMrfrgM6wPMziP4uqdLGZ9
iF4/cdfPjlPs84EZrswvmeFSxPoww7GvWqlJJ1gfZlg6aursu8foeOtihoiI
r72yR1kfZnj6eZq3ayHrwww79SQWLy9gfZjhs71XyKl81ocZzAS5Rp8Osj7M
8MxpQKnKAfq8FGaG5wEeA4bnsj5Ey78td0TuY32YISfu28fkPezzh+j1r5Wa
Hs9mfZghTK4w4H4W60P0fjtuZjTsZH2Ywee+0nOxDNaHGUZ7rTDQTmd9mOGH
Vne87XbySDWDRGjsl6Ep5JFhhi+TTsaP28r6MMOZnxutvDazPsyw3eWKWMAm
1ocZIsP7yYVuZH2YQWedqWv4etaHGU4rFZwPW0seJaLxPjVwTnAi68MM9fMj
InxXsT7MRPvr0kOeK9jnHzMMWnV28OhlrA8zpFk/MRq0lPVhhgmP4kIt4lkf
ZvjooCChtpj1YYaAhw1y3QtYH2ZwagtZVhvLPr+awaL6YsCdGNaHGT4UDi4+
Oof1YYYVyxTXbZ5FHo1m+LM1+vmMGawP0fgOn13oEsX6EI2XtqOsfgTrg4OP
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
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
        LineBox[CompressedData["
1:eJwtzglUzesax/HspAHNc2me9263hwyR/s+hJNdYIo4x027SPM9FZRclDWbh
JIVT2E4aDrIPyZRM23VLbuciCZVITm6H4/es9V//9a71vp/na+4f6r2JJScn
d+nb9/3/Y/qYdu/f31jMkDH7932ffqZ19arBtfyHjPCf+cDcl82Uvrjaxty5
/X0GmcLHd1/a5rYym/+ZT0yTzsd3zm63mR/eZ+b1kJ+vOK4F3jAjidyv8HRS
M7y/mCOjUtZY/WvwRpjcQ9PLflsuhfd/Znmyctije03w5GjnkFuNW/wV3Jcj
l8r4J76Fl+CPocPGi3QOxTTiPYva45r6r++pxz55elMp8dradRHeWAqO5T3b
vKoW3lg6lFub1PTlAjwFal/wL8U5dRJ446hmyrxs4+Lz8BRp7MzFKb/nnIOn
RMLdb5QvF56Fp0SBLZN0Mmtq4ClTtVu6VdXlangqVF++xE/b9Vd442ljXkSH
9+PT8CbQgTLf1Fe5p+BNoFT/7jFNy6rgTaSW2wrc/MmV8FQpd+szSZ/tSXhq
tHGzlokrpwKeOgVw3urG0wncV6c6s89Bg/7l8NUpav1Pb4cLf8F7DSp5XZpT
e/c49mkQ+yizOkL3ODxNSpyQanRwyzF4mtQhazC5d/UoPE3yY8KiDGyPwtOi
2fevDBTtKYOnRR2mjy+KFcvgaVPFKlawnsIReNqk4GtqulbpMDxt+u+auMox
+ofg6ZBZVugfis4H4enQ4qlO9yUrDsDTJZ86qYKVeD88XTpfsWhau3QfPF0y
asjSqBy3D54eFWkkVI3x3gtPj9pUbrqOLy+Fp0+Bg2rNa0dL4OnTrNAZKXXr
SuDp0zg/Xc0lN4rhGVAaXxafNaUYngGJ1t9i+VUVwTMkmV99wD3LIniG9KQo
2uvlsT3wDMl94NLlRJs98IwopczGXaW6EJ4RJUoN641cC+EZky6rwGPdnd3w
jMmi32iw0383PGPy/rktU3WkAN4kapju4/DvvQXwJtHEWYvLdFwK4JlQ5x+h
uzbU5cMzIa9cFUUlxXx4JqSjdVxOsnIXPFNq44zpVJHshGdK5b5zslo0d8Iz
I0ni+IX9MXm4b0bTieeZ35kL34we/SWTH1qQi/dmJNodfuHPK2LsM6OHszhq
BVPF8MxpXVW99Ou5HfDM6aywuWemYAc8c5pfGfzQ8EIOPHMyfdXr4+6aA8+c
hudP6y2/ng3PghycvV9NW5oNz4KaO1yGbr3IgmdBmoUNl67FZ8GzIO6qs4Yn
NLLgWVCXrCMm7dR2eJb04aq5e/Pc7fAs6Yx9rGtd9zZ4lnS4vVw6LN4Gz5IW
Dq/586vTNniWxHUXnX8gy4RnRZv/Y1FyMT0TnhVlBt0w73DMhGdF+bGMr0V7
BjwrOhN4f1ppXgY8K1L9TX2vJpMBz5oaFzw3lXxIh2dNi7fHhnypTIdnTZKo
iNja9enwrKkqj7fikFE6PGt6q/Q/kacsDZ4NhcQ9WnOkKA2eDe08G96a6ZMG
z4ZE1krnhrXS4NmQuGOOsc7pVHg2tNmDlSwWpMKzpXfprPXTG1Pg2VJ3YcXk
vV4p8GyprXSga7YsGZ4tLb7HapKJkuHZ0hy+qujGSBI8Oxq/vTrVdU8SPDtK
Wndw1IqTBM+OPp0KE7KbE+HZkXdfxaOYjYnw7Ijd63/nqXwiPHu6nvigZUV5
Ajx78s/2uPN4bgI8e1JRdrVc9i4enj31vAudeLU4Hp499TYbtKox8fAc6GbL
XdNPr+PgOVDAu7N5l0ri4DnQluTWHk2POHgOtE5v+cDUj7HwHOhp1oYPQydi
4bGJJVHf7bcyFh6b6pmFctpqsfDYdMZneRv3Wgw8NiUrFlwcTYqBx6Y+sXrd
T1Ni4HHo8+uumud90fA4JJ7yq/GZ09HwOKR/wnNqd0A0PA55Db1vW2AXDY9D
pzat2P/oVRQ8R+ovLWhIOBkF79s5O2dDZWAUPEdyMJl58JpjFDxHmqC495zL
QCQ8RxrhdSnk1EbC4xKvI2Hc9JRIeFyylsvJyvGIhMclZ+nGagPVSHhcEpsN
ik/LIuBxSXNpt17a0Qh4TuS8JLbqTXAEPCdyORMTre4SAc+Jbo6M9/EcFwHP
iV7crV65/GE4PCfalLMo/uPxcHg82t7FvXY7MvzHfQMerTp6gDnsHg6fRxNv
FXoo6+L9fB5dnfHJdV53GPbxKCqDe0PYEPbDS+ORyRF2RNuuMOznkUbn9UbP
DWE/vPM8OmUSwQ6aFoYeHrGlDuEcVXgveSSXfTOotCUUfXyqd8zz1o4LRR+f
NrkkftGzDUUfn3axckv0n2xFH5/m8W4c8xNvRR+fBuQHFhi7bUUfn45M6X3v
MxCCPj4Nm/Xke54MQR+fng/4JMStDUEfn1ZPttY8pxeCPj655Vcta7oXjD4B
ZTj1Cp/lBqNPQLXSB6/negajT0A1wp2MRD4YfQJ6MTtmxLgpCH0Ciu7Sky9I
DUKfgKKUdXZ8cQtCn4CUeQMPnEcD0SegK6n7HZKvBKJPQI+fNva1ZQSiT0Ct
RYved3oEok9IGTz+rB7lQPR9O8cdtPzlbgD6hBSy7cX90KIA9Alpy9JgVaWf
A9AnpEkTOl3TLQLQJyT+20bl4h4R+oREaisl5edF6BPSCZm8S2CyCH1CalX5
HPXJU4Q+IX1VrOifpyVi/gZwzODw
         "]]}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large], 
        LineBox[CompressedData["
1:eJw03HVck33bx3G6ke4ao3uze18Vke7ubpDuTrsQFcVuTEwsEAMD7ELFxORS
sRBQlGfPvWP8c7+4GNt5/t7n53dsu4f6kfM9Y4QEBARuiwsI/P//8r6+cjxk
S3N8ntS3mQUvvzBg+pVzR9626+mV1W2eLbrV/3l85RSvatvR0VrXVqh8cN6r
gq+cxXJnJE60cv9j2gypR9u/cs6fiwpzu7Ky7UbX/3995ShOdlaa2r2i7Zfp
/9/hV45nmfgi+9fL2/S499ai+42zUTrmcYHBsjb7VwXce/zGGWr9nZabuaQt
/f/vLu0bx2ee4oGmO4va1jf8/9c3zuvDPv+WzFjYdnHg/+/wG0fhzZaqhhO1
bZ88/v8Av3Gcnf9d8p5e0/a/w1P+zvnjnWc752ZV2//ubsZ3zuqXD1oHkirb
Yv/39Z3TbR4w+ke5ou3/zzZ4+XfOkk/FZz9fLWv73+m2fOesiyqS6xpT2va/
w3v1ndPY33FPcktR2//uTuoHZ7Zu0tKntgVt4/739YMTcuzEixUjuW3/W77g
HxwZl/3xZR3Zbf873eofHIa5U5H4tsy2/x3ewR8cjfHLDRctS2/73909+sFZ
5OXZ9U51fhvP4ydHUDTIPo6VRB4/Oe/XS3pVxMeRx0/OB+G4qzatUeTxk1OF
eyfTWeHk8ZPTJG5+fHdRAHn85Ci/yXJ5fMOTPH5yAlQE5eN22pPHAGf4WkGK
lvFk8hjg2JhqmF3acHMmz2OAE6Q4/l3K20kcnscAZ6i055ld8jwOz2OAc/JW
b4jGPA8Oz2OAczAma/LWA74cnscvTkd5V7fyf0EcnscvTs7+PQVhZeEcnscv
zuShsKn9g5Ecnscvjt2XmvP3gmM4PI9fnIOv7h3eciiOw/P4xTm2qO/T268J
HJ7HIMet81SQpX4yh+cxyGnq02EOI5XD8xjkDGi2LIk1TePwPAY5476tb1hp
ms7heQxy6g1fdU/Rz+DwPAY5rT7Xc9cpZnJ4HkOcxeJzxd+OZHJ4HkOcEzd3
nfd5mcXheQxxjkcpWeuey+bwPIY4+edvdKTV5XB4HkMct7Gb1xZH5XJ4HkMc
Afu09ZlWeRyexxDn52zGh9JveRyexzBHdteBmpuH8jk8j2FO5y7ZDQvjCzg8
j2HO4iWN3x9rFZLHMMfw5YN5768Vkscwx316499HGUXkMcwR0C1/clu1mDx+
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
a5kzU6H7L1akHyw=
         "]]}}, {
       {RGBColor[0, 0, 1], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}}, {
       {RGBColor[0, 0, 1], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[
        Large]}, {}, {}, {}, {}, {}, {}, {}}, {
       {RGBColor[0, 0, 1], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[Large]}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[1, 180], 0.005555555555555556]], Thickness[
        Large]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, InsetBox[
     TemplateBox[{"\"CSS-NLO\"", "\"NLO-C++\"", "\"NLO-C++\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox["\"N=3\"", {
                  GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, 
                 StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "10"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"N=3\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "5"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.7, 0.7}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"d\[Sigma]/dpT\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox["\"pT\"", TraditionalForm], 
      FormBox["\"NLO Contribution\"", TraditionalForm]}},
   FrameStyle->Directive[
     GrayLevel[0], 12],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {-0.16373883365253597`, 0.3629844}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJw03Hc8le8fx3F7Rfbejn04zolK87yjtEil7L2a0qI0NaVBJNKgImkqGpoa
SntHWxLaSfbI7/y+Plf/9LgfOM59Pe/XfR/3fd23aXjs1CgJMTGxGFkxsf//
3/evUXir9HFtZEt5mU1g6o0W60ZhyLw1pUmbysumlhpt+D6lUagTFP6wwKi8
bLnGybE1yxqFd5olSgvO3yzLnz9CoSqvUah/5INbjNfNsocP/v+vUaipfWJ+
zZ8bZa3W/3/BRqHz20ujv6ffKDMWvVqp0R9h3NyR7xYNulE2rmaZ6BX/CJPu
rXWPene9bMH/X27+H+Fti67so+uvl+3O/v+/P8I3NUrHHRyul91s+f8L/hGG
L84ZVfP2WtmPKf9/g3+E8Ydd6o9vvlb239vTaBIeuqDzJXHYtbKR/3+5EU3C
7vAZe3e9KyuL/u9fk9C8n3Vuz5iysv+vbWBqk/BBg9tO1ZKrZf+tbmmTsMDQ
Z9k5ztWy/95eTZNQd/SqhMdZV8r+ezmFv8KpbkbVUL5S5vjfv7/Chgfj+jUm
Xy77b/gC/wrtMn9H3pS9XPbf6m74K5wmddvj4KZLZf+9vZN/hXJdd7TiFC+V
/fdyVX+F1Z/DW8x3XCzr82gWGs4169hjcJE8moUpGl3itwovkEez0Gu17Pkt
gy+QR7Pw79FbK9/dKSWPZqGfzO0F+YGl5NEs3HjoduDTpvPk0Swc6+1UNGXL
efJoEb681C9Bw/I8ebQIN7dpRMjfPEceLcI/ZYsLTcLPkUeL8LNOispEyXNl
/w3fjRahPY//NaHgLHm0CMV0FcVzJ54lj1ah2L55B483nSGPVuFhi6EpO/ec
IY9WYVOyYZu725my7f+9YKtwhafUyttNJeTRKjQNuGLdur+EPFqFu2xfzngy
uYQ82oTXq/fLTZAoIY82YU/KkkG+Z4vJo02oMFM7vnFWMXm0CR/EOR2UMykm
jzbhw6e8L5lVp8mjTbhj3K/ytO2nyaNdGJNcI9444TR5tAvfaRkXF8qcJo92
oce4AoeSm6fIo124pPyqjuzaU+TRLpz1d7HH3lGnyKNdGNQt+Dlb4hR5tAv/
/XpbWLmpiDw6hMkGrU52ykXk0SHMP/nE6E7WybL/Xm5+h7BzZ+uivWYnyaND
+C9h5bE9RSfIo0Poc9L9YOnIE+TRIbwyfEtW/ePj5NEp5Ds42uhGHCePTqFj
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
mt5vTbT/cDbFszDFMx1/2P5Q9HqHB2dKipb7+jDF4d+Di+Qa2f7RFIZPBXLy
v2n/4m6KpxuHHJX6xfaXplil7JXT9YP2/z6mWOqx8OfP72z/aYpbFsv3v/1G
HmGmWJY76lr5V/KINsUoic3Tj7DjwxxTjGmRm5XcQB7zTeGwL0Iyqp484kwR
eNHBfngd29+aIuP231/9P5NHoinOq1lNef+J7X9Fv79WEHi4hjw2m2Ls9hid
mI9sf2yK8r3mKbxq8sgwxa5X6be+v2f7Z1PoLKu7nf+OPHJMUTB02G6/t2x/
bYqKhfljFd6QR6Ep5gzkVJ17xfbfpkibc2xySBV5lJgi9LfZZclKtj83RVtB
mGn+C/K4YorRuYJNeE4eN0yxxdKz/dVT8qgwxYr6mQkxT9j+XjQe/4zV/7HP
E09FPgZyDzc/ZMdjU+zNPnxS/QF5vDPFg5QlZbvusT5E219TrYzeXdaHKepO
TNyaVcH6MMWTC2I+qrdZH6ZY4zhuXlI568MU3+P9X3fcYH2YImVQRO7M66wP
M7jvWFPxvIz1YYYpTnd8h11lfZghM3iEf+7lqL6/r5TN4KX49lnvRXa8N4O1
VOrdwAusDzMoNQ4dc+4868MMwsVn3BXPsT7M8GLMrfrgM6wPMziP4uqdLGZ9
iF4/cdfPjlPs84EZrswvmeFSxPoww7GvWqlJJ1gfZlg6aursu8foeOtihoiI
r72yR1kfZnj6eZq3ayHrwww79SQWLy9gfZjhs71XyKl81ocZzAS5Rp8Osj7M
8MxpQKnKAfq8FGaG5wEeA4bnsj5Ey78td0TuY32YISfu28fkPezzh+j1r5Wa
Hs9mfZghTK4w4H4W60P0fjtuZjTsZH2Ywee+0nOxDNaHGUZ7rTDQTmd9mOGH
Vne87XbySDWDRGjsl6Ep5JFhhi+TTsaP28r6MMOZnxutvDazPsyw3eWKWMAm
1ocZIsP7yYVuZH2YQWedqWv4etaHGU4rFZwPW0seJaLxPjVwTnAi68MM9fMj
InxXsT7MRPvr0kOeK9jnHzMMWnV28OhlrA8zpFk/MRq0lPVhhgmP4kIt4lkf
ZvjooCChtpj1YYaAhw1y3QtYH2ZwagtZVhvLPr+awaL6YsCdGNaHGT4UDi4+
Oof1YYYVyxTXbZ5FHo1m+LM1+vmMGawP0fgOn13oEsX6EI2XtqOsfgTrg4OP
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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJwtzglUzesax/HspAHNc2me9263hwyR/s+hJNdYIo4x027SPM9FZRclDWbh
JIVT2E4aDrIPyZRM23VLbuciCZVITm6H4/es9V//9a71vp/na+4f6r2JJScn
d+nb9/3/Y/qYdu/f31jMkDH7932ffqZ19arBtfyHjPCf+cDcl82Uvrjaxty5
/X0GmcLHd1/a5rYym/+ZT0yTzsd3zm63mR/eZ+b1kJ+vOK4F3jAjidyv8HRS
M7y/mCOjUtZY/WvwRpjcQ9PLflsuhfd/Znmyctije03w5GjnkFuNW/wV3Jcj
l8r4J76Fl+CPocPGi3QOxTTiPYva45r6r++pxz55elMp8dradRHeWAqO5T3b
vKoW3lg6lFub1PTlAjwFal/wL8U5dRJ446hmyrxs4+Lz8BRp7MzFKb/nnIOn
RMLdb5QvF56Fp0SBLZN0Mmtq4ClTtVu6VdXlangqVF++xE/b9Vd442ljXkSH
9+PT8CbQgTLf1Fe5p+BNoFT/7jFNy6rgTaSW2wrc/MmV8FQpd+szSZ/tSXhq
tHGzlokrpwKeOgVw3urG0wncV6c6s89Bg/7l8NUpav1Pb4cLf8F7DSp5XZpT
e/c49mkQ+yizOkL3ODxNSpyQanRwyzF4mtQhazC5d/UoPE3yY8KiDGyPwtOi
2fevDBTtKYOnRR2mjy+KFcvgaVPFKlawnsIReNqk4GtqulbpMDxt+u+auMox
+ofg6ZBZVugfis4H4enQ4qlO9yUrDsDTJZ86qYKVeD88XTpfsWhau3QfPF0y
asjSqBy3D54eFWkkVI3x3gtPj9pUbrqOLy+Fp0+Bg2rNa0dL4OnTrNAZKXXr
SuDp0zg/Xc0lN4rhGVAaXxafNaUYngGJ1t9i+VUVwTMkmV99wD3LIniG9KQo
2uvlsT3wDMl94NLlRJs98IwopczGXaW6EJ4RJUoN641cC+EZky6rwGPdnd3w
jMmi32iw0383PGPy/rktU3WkAN4kapju4/DvvQXwJtHEWYvLdFwK4JlQ5x+h
uzbU5cMzIa9cFUUlxXx4JqSjdVxOsnIXPFNq44zpVJHshGdK5b5zslo0d8Iz
I0ni+IX9MXm4b0bTieeZ35kL34we/SWTH1qQi/dmJNodfuHPK2LsM6OHszhq
BVPF8MxpXVW99Ou5HfDM6aywuWemYAc8c5pfGfzQ8EIOPHMyfdXr4+6aA8+c
hudP6y2/ng3PghycvV9NW5oNz4KaO1yGbr3IgmdBmoUNl67FZ8GzIO6qs4Yn
NLLgWVCXrCMm7dR2eJb04aq5e/Pc7fAs6Yx9rGtd9zZ4lnS4vVw6LN4Gz5IW
Dq/586vTNniWxHUXnX8gy4RnRZv/Y1FyMT0TnhVlBt0w73DMhGdF+bGMr0V7
BjwrOhN4f1ppXgY8K1L9TX2vJpMBz5oaFzw3lXxIh2dNi7fHhnypTIdnTZKo
iNja9enwrKkqj7fikFE6PGt6q/Q/kacsDZ4NhcQ9WnOkKA2eDe08G96a6ZMG
z4ZE1krnhrXS4NmQuGOOsc7pVHg2tNmDlSwWpMKzpXfprPXTG1Pg2VJ3YcXk
vV4p8GyprXSga7YsGZ4tLb7HapKJkuHZ0hy+qujGSBI8Oxq/vTrVdU8SPDtK
Wndw1IqTBM+OPp0KE7KbE+HZkXdfxaOYjYnw7Ijd63/nqXwiPHu6nvigZUV5
Ajx78s/2uPN4bgI8e1JRdrVc9i4enj31vAudeLU4Hp499TYbtKox8fAc6GbL
XdNPr+PgOVDAu7N5l0ri4DnQluTWHk2POHgOtE5v+cDUj7HwHOhp1oYPQydi
4bGJJVHf7bcyFh6b6pmFctpqsfDYdMZneRv3Wgw8NiUrFlwcTYqBx6Y+sXrd
T1Ni4HHo8+uumud90fA4JJ7yq/GZ09HwOKR/wnNqd0A0PA55Db1vW2AXDY9D
pzat2P/oVRQ8R+ovLWhIOBkF79s5O2dDZWAUPEdyMJl58JpjFDxHmqC495zL
QCQ8RxrhdSnk1EbC4xKvI2Hc9JRIeFyylsvJyvGIhMclZ+nGagPVSHhcEpsN
ik/LIuBxSXNpt17a0Qh4TuS8JLbqTXAEPCdyORMTre4SAc+Jbo6M9/EcFwHP
iV7crV65/GE4PCfalLMo/uPxcHg82t7FvXY7MvzHfQMerTp6gDnsHg6fRxNv
FXoo6+L9fB5dnfHJdV53GPbxKCqDe0PYEPbDS+ORyRF2RNuuMOznkUbn9UbP
DWE/vPM8OmUSwQ6aFoYeHrGlDuEcVXgveSSXfTOotCUUfXyqd8zz1o4LRR+f
NrkkftGzDUUfn3axckv0n2xFH5/m8W4c8xNvRR+fBuQHFhi7bUUfn45M6X3v
MxCCPj4Nm/Xke54MQR+fng/4JMStDUEfn1ZPttY8pxeCPj655Vcta7oXjD4B
ZTj1Cp/lBqNPQLXSB6/negajT0A1wp2MRD4YfQJ6MTtmxLgpCH0Ciu7Sky9I
DUKfgKKUdXZ8cQtCn4CUeQMPnEcD0SegK6n7HZKvBKJPQI+fNva1ZQSiT0Ct
RYved3oEok9IGTz+rB7lQPR9O8cdtPzlbgD6hBSy7cX90KIA9Alpy9JgVaWf
A9AnpEkTOl3TLQLQJyT+20bl4h4R+oREaisl5edF6BPSCZm8S2CyCH1CalX5
HPXJU4Q+IX1VrOifpyVi/gZwzODw
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          GrayLevel[0]], 
         Line[CompressedData["
1:eJw03HVck33bx3G6ke4ao3uze18Vke7ubpDuTrsQFcVuTEwsEAMD7ELFxORS
sRBQlGfPvWP8c7+4GNt5/t7n53dsu4f6kfM9Y4QEBARuiwsI/P//8r6+cjxk
S3N8ntS3mQUvvzBg+pVzR9626+mV1W2eLbrV/3l85RSvatvR0VrXVqh8cN6r
gq+cxXJnJE60cv9j2gypR9u/cs6fiwpzu7Ky7UbX/3995ShOdlaa2r2i7Zfp
/9/hV45nmfgi+9fL2/S499ai+42zUTrmcYHBsjb7VwXce/zGGWr9nZabuaQt
/f/vLu0bx2ee4oGmO4va1jf8/9c3zuvDPv+WzFjYdnHg/+/wG0fhzZaqhhO1
bZ88/v8Av3Gcnf9d8p5e0/a/w1P+zvnjnWc752ZV2//ubsZ3zuqXD1oHkirb
Yv/39Z3TbR4w+ke5ou3/zzZ4+XfOkk/FZz9fLWv73+m2fOesiyqS6xpT2va/
w3v1ndPY33FPcktR2//uTuoHZ7Zu0tKntgVt4/739YMTcuzEixUjuW3/W77g
HxwZl/3xZR3Zbf873eofHIa5U5H4tsy2/x3ewR8cjfHLDRctS2/73909+sFZ
5OXZ9U51fhvP4ydHUDTIPo6VRB4/Oe/XS3pVxMeRx0/OB+G4qzatUeTxk1OF
eyfTWeHk8ZPTJG5+fHdRAHn85Ci/yXJ5fMOTPH5yAlQE5eN22pPHAGf4WkGK
lvFk8hjg2JhqmF3acHMmz2OAE6Q4/l3K20kcnscAZ6i055ld8jwOz2OAc/JW
b4jGPA8Oz2OAczAma/LWA74cnscvTkd5V7fyf0EcnscvTs7+PQVhZeEcnscv
zuShsKn9g5Ecnscvjt2XmvP3gmM4PI9fnIOv7h3eciiOw/P4xTm2qO/T268J
HJ7HIMet81SQpX4yh+cxyGnq02EOI5XD8xjkDGi2LIk1TePwPAY5476tb1hp
ms7heQxy6g1fdU/Rz+DwPAY5rT7Xc9cpZnJ4HkOcxeJzxd+OZHJ4HkOcEzd3
nfd5mcXheQxxjkcpWeuey+bwPIY4+edvdKTV5XB4HkMct7Gb1xZH5XJ4HkMc
Afu09ZlWeRyexxDn52zGh9JveRyexzBHdteBmpuH8jk8j2FO5y7ZDQvjCzg8
j2HO4iWN3x9rFZLHMMfw5YN5768Vkscwx316499HGUXkMcwR0C1/clu1mDx+
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
a5kzU6H7L1akHyw=
          "]]}}, {{
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          GrayLevel[0]]}}, {{
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          GrayLevel[0]]}, {}, {}, {}, {}, {}, {}, {}}, {{
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[
           Rational[1, 180]], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          GrayLevel[0]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"d\[Sigma]/dpT", ""}, {"pT", "NLO Contribution"}}, 
      FrameStyle -> Directive[
        GrayLevel[0], 12], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 10}, {-0.16373883365253597`, 0.3629844}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[
          Rational[1, 180]], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[
          Rational[1, 180]], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        Directive[
         PointSize[
          Rational[1, 180]], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         GrayLevel[0]]}, {"CSS-NLO", "NLO-C++", "NLO-C++"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}, Joined -> {True, True, True}, LabelStyle -> {
         GrayLevel[0], 10}, LegendFunction -> "Frame", LegendLabel -> "N=3", 
       LegendLayout -> {"Column", {Automatic, 5}}]], {0.7, 0.7}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.8280306436087017`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"c9f61ae6-44f0-483b-b4c2-3ad7d1a88ca7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "NLO contribution (terms only proportional to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Alpha]s", "2"], TraditionalForm]],ExpressionUUID->
  "1baac37b-56c8-4892-9421-33b3bc0baa18"],
 ")"
}], "Subchapter",
 CellChangeTimes->{{3.791270415261487*^9, 3.791270427402686*^9}, {
  3.791273752667684*^9, 3.791273787663987*^9}, {3.8267767197341537`*^9, 
  3.826776727711043*^9}, {3.826974886705041*^9, 3.826974888561879*^9}, {
  3.827983769129311*^9, 3.827983782941884*^9}, {3.82798453614303*^9, 
  3.827984558329095*^9}},ExpressionUUID->"81603a52-63d8-4d00-88da-\
4e71300c84f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Num\[CapitalSigma]NLO", "[", 
    RowBox[{"n_", ",", "pt_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["\[Alpha]s", "\[Pi]"], ")"}], "2"], 
          FractionBox[
           RowBox[{"2", " ", "pt"}], 
           SuperscriptBox["mH", "2"]], " ", 
          RowBox[{"(", "GevtoPb", ")"}], 
          RowBox[{"\[Sigma]0", "[", "\[Alpha]s", "]"}], 
          RowBox[{"d\[Sigma]NLO", "[", 
           RowBox[{"g", ",", "g"}], "]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LC1", "\[Rule]", " ", 
            RowBox[{"FC1", "[", 
             RowBox[{"pt", ",", "mH"}], "]"}]}], ",", 
           RowBox[{"LC2", "\[Rule]", " ", 
            RowBox[{"FC2", "[", 
             RowBox[{"pt", ",", "mH"}], "]"}]}], ",", 
           RowBox[{"LC3", "\[Rule]", " ", 
            RowBox[{"FC3", "[", 
             RowBox[{"pt", ",", "mH"}], "]"}]}], ",", 
           RowBox[{"LC4", "\[Rule]", " ", 
            RowBox[{"FC4", "[", 
             RowBox[{"pt", ",", "mH"}], "]"}]}]}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]0", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]Ngg", "[", "n", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]0", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]Ngq", "[", "n", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]0", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"q", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]Nqg", "[", "n", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]0", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]Nqq", "[", "n", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]1", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]mgg", "[", "n", "]"}]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"C1", ",", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"ToString", "/@", 
              RowBox[{"{", 
               RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
          " ", "C1gg"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"C1", ",", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"ToString", "/@", 
              RowBox[{"{", 
               RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
          " ", 
          RowBox[{"C1gq", "[", "n", "]"}]}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"A1", "\[Rule]", " ", "A1g"}], ",", 
        RowBox[{"A2", "\[Rule]", " ", "A2g"}], ",", 
        RowBox[{"B1", "\[Rule]", " ", "B1g"}], ",", 
        RowBox[{"B2", "\[Rule]", " ", "B2g"}]}], "}"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LR", "\[Rule]", " ", "LRR"}], ",", 
       RowBox[{"LF", "\[Rule]", "LFF"}], ",", 
       RowBox[{"LQ", "\[Rule]", " ", "LQ2"}]}], "}"}]}], "/.", 
    RowBox[{"h1g", "\[Rule]", " ", "hh1gg"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827986941411737*^9, 3.8279869910575857`*^9}, {
   3.827987031854732*^9, 3.827987037528483*^9}, {3.827987115578104*^9, 
   3.827987157845529*^9}, {3.8279872005200768`*^9, 3.827987207895186*^9}, {
   3.827987270015131*^9, 3.827987315395073*^9}, {3.8279874888587933`*^9, 
   3.827987490232238*^9}, {3.827988050815442*^9, 3.827988057466384*^9}, {
   3.827988487482643*^9, 3.827988488406187*^9}, {3.827988540023767*^9, 
   3.8279885475549583`*^9}, 3.827991269384677*^9, {3.8279912996030073`*^9, 
   3.8279913039341917`*^9}, 3.827991571392132*^9, 3.827991604251462*^9, {
   3.827991643991357*^9, 3.8279916763570004`*^9}, {3.827991716861751*^9, 
   3.827991764150323*^9}, {3.827992145975609*^9, 3.8279921476529617`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"16e401f7-c99f-46bf-9010-b981070d04ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssNLOaspt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pt", ",", 
       RowBox[{"Num\[CapitalSigma]NLO", "[", 
        RowBox[{"NN", ",", "pt"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"pt", ",", "1", ",", "20", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<./datfiles/cssNLOaspt.dat\>\"", ",", "cssNLOaspt", ",", 
    "\"\<Table\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.827988136169176*^9, 3.8279881449674063`*^9}, {
  3.827988177644477*^9, 3.8279881991445704`*^9}, {3.8279888930248137`*^9, 
  3.827988941809746*^9}, {3.8279919430052643`*^9, 3.82799195433463*^9}, {
  3.827992116802793*^9, 3.827992119387903*^9}, {3.827992160004279*^9, 
  3.827992162962851*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"ec06ef70-0096-4073-85b0-3795e7e6ba68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./datfiles/cssNLOaspt.dat\>\"", ",", "\"\<Table\>\""}], 
      "]"}], ",", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<./datfiles/morepoints_smallpt_NLO_without_LO.dat\>\"", ",", 
       "\"\<Table\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<CSS-NLO\>\"", ",", "\"\<NLO-C++\>\""}], "}"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "10"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<N=3\>\""}], ",", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.7"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<d\[Sigma]/dpT\>\"", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<pT\>\"", ",", " ", "\"\<NLO Contribution\>\""}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827988229265129*^9, 3.827988269453752*^9}, {
   3.827988301556212*^9, 3.8279883842522383`*^9}, {3.82798842859875*^9, 
   3.827988451181532*^9}, {3.827988884609825*^9, 3.8279888850591297`*^9}, 
   3.827991961610903*^9, {3.8279925831378*^9, 3.8279925865631037`*^9}, 
   3.827992651995966*^9, {3.827992682751445*^9, 3.827992693537401*^9}, {
   3.827993693384*^9, 3.8279937120717907`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"382b0c67-13b7-4805-bb83-8c02e50274be"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large], 
        LineBox[CompressedData["
1:eJw03Hc8le8fx3F7Rfbejn04zolK87yjtEil7L2a0qI0NaVBJNKgImkqGpoa
SntHWxLaSfbI7/y+Plf/9LgfOM59Pe/XfR/3fd23aXjs1CgJMTGxGFkxsf//
3/evUXir9HFtZEt5mU1g6o0W60ZhyLw1pUmbysumlhpt+D6lUagTFP6wwKi8
bLnGybE1yxqFd5olSgvO3yzLnz9CoSqvUah/5INbjNfNsocP/v+vUaipfWJ+
zZ8bZa3W/3/BRqHz20ujv6ffKDMWvVqp0R9h3NyR7xYNulE2rmaZ6BX/CJPu
rXWPene9bMH/X27+H+Fti67so+uvl+3O/v+/P8I3NUrHHRyul91s+f8L/hGG
L84ZVfP2WtmPKf9/g3+E8Ydd6o9vvlb239vTaBIeuqDzJXHYtbKR/3+5EU3C
7vAZe3e9KyuL/u9fk9C8n3Vuz5iysv+vbWBqk/BBg9tO1ZKrZf+tbmmTsMDQ
Z9k5ztWy/95eTZNQd/SqhMdZV8r+ezmFv8KpbkbVUL5S5vjfv7/Chgfj+jUm
Xy77b/gC/wrtMn9H3pS9XPbf6m74K5wmddvj4KZLZf+9vZN/hXJdd7TiFC+V
/fdyVX+F1Z/DW8x3XCzr82gWGs4169hjcJE8moUpGl3itwovkEez0Gu17Pkt
gy+QR7Pw79FbK9/dKSWPZqGfzO0F+YGl5NEs3HjoduDTpvPk0Swc6+1UNGXL
efJoEb681C9Bw/I8ebQIN7dpRMjfPEceLcI/ZYsLTcLPkUeL8LNOispEyXNl
/w3fjRahPY//NaHgLHm0CMV0FcVzJ54lj1ah2L55B483nSGPVuFhi6EpO/ec
IY9WYVOyYZu725my7f+9YKtwhafUyttNJeTRKjQNuGLdur+EPFqFu2xfzngy
uYQ82oTXq/fLTZAoIY82YU/KkkG+Z4vJo02oMFM7vnFWMXm0CR/EOR2UMykm
jzbhw6e8L5lVp8mjTbhj3K/ytO2nyaNdGJNcI9444TR5tAvfaRkXF8qcJo92
oce4AoeSm6fIo124pPyqjuzaU+TRLpz1d7HH3lGnyKNdGNQt+Dlb4hR5tAv/
/XpbWLmpiDw6hMkGrU52ykXk0SHMP/nE6E7WybL/Xm5+h7BzZ+uivWYnyaND
+C9h5bE9RSfIo0Poc9L9YOnIE+TRIbwyfEtW/ePj5NEp5Ds42uhGHCePTqFj
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
mt5vTbT/cDbFszDFMx1/2P5Q9HqHB2dKipb7+jDF4d+Di+Qa2f7RFIZPBXLy
v2n/4m6KpxuHHJX6xfaXplil7JXT9YP2/z6mWOqx8OfP72z/aYpbFsv3v/1G
HmGmWJY76lr5V/KINsUoic3Tj7DjwxxTjGmRm5XcQB7zTeGwL0Iyqp484kwR
eNHBfngd29+aIuP231/9P5NHoinOq1lNef+J7X9Fv79WEHi4hjw2m2Ls9hid
mI9sf2yK8r3mKbxq8sgwxa5X6be+v2f7Z1PoLKu7nf+OPHJMUTB02G6/t2x/
bYqKhfljFd6QR6Ep5gzkVJ17xfbfpkibc2xySBV5lJgi9LfZZclKtj83RVtB
mGn+C/K4YorRuYJNeE4eN0yxxdKz/dVT8qgwxYr6mQkxT9j+XjQe/4zV/7HP
E09FPgZyDzc/ZMdjU+zNPnxS/QF5vDPFg5QlZbvusT5E219TrYzeXdaHKepO
TNyaVcH6MMWTC2I+qrdZH6ZY4zhuXlI568MU3+P9X3fcYH2YImVQRO7M66wP
M7jvWFPxvIz1YYYpTnd8h11lfZghM3iEf+7lqL6/r5TN4KX49lnvRXa8N4O1
VOrdwAusDzMoNQ4dc+4868MMwsVn3BXPsT7M8GLMrfrgM6wPMziP4uqdLGZ9
iF4/cdfPjlPs84EZrswvmeFSxPoww7GvWqlJJ1gfZlg6aursu8foeOtihoiI
r72yR1kfZnj6eZq3ayHrwww79SQWLy9gfZjhs71XyKl81ocZzAS5Rp8Osj7M
8MxpQKnKAfq8FGaG5wEeA4bnsj5Ey78td0TuY32YISfu28fkPezzh+j1r5Wa
Hs9mfZghTK4w4H4W60P0fjtuZjTsZH2Ywee+0nOxDNaHGUZ7rTDQTmd9mOGH
Vne87XbySDWDRGjsl6Ep5JFhhi+TTsaP28r6MMOZnxutvDazPsyw3eWKWMAm
1ocZIsP7yYVuZH2YQWedqWv4etaHGU4rFZwPW0seJaLxPjVwTnAi68MM9fMj
InxXsT7MRPvr0kOeK9jnHzMMWnV28OhlrA8zpFk/MRq0lPVhhgmP4kIt4lkf
ZvjooCChtpj1YYaAhw1y3QtYH2ZwagtZVhvLPr+awaL6YsCdGNaHGT4UDi4+
Oof1YYYVyxTXbZ5FHo1m+LM1+vmMGawP0fgOn13oEsX6EI2XtqOsfgTrg4OP
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
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[Large], 
        LineBox[CompressedData["
1:eJwtzglUzesax/HspAHNc2me9263hwyR/s+hJNdYIo4x027SPM9FZRclDWbh
JIVT2E4aDrIPyZRM23VLbuciCZVITm6H4/es9V//9a71vp/na+4f6r2JJScn
d+nb9/3/Y/qYdu/f31jMkDH7932ffqZ19arBtfyHjPCf+cDcl82Uvrjaxty5
/X0GmcLHd1/a5rYym/+ZT0yTzsd3zm63mR/eZ+b1kJ+vOK4F3jAjidyv8HRS
M7y/mCOjUtZY/WvwRpjcQ9PLflsuhfd/Znmyctije03w5GjnkFuNW/wV3Jcj
l8r4J76Fl+CPocPGi3QOxTTiPYva45r6r++pxz55elMp8dradRHeWAqO5T3b
vKoW3lg6lFub1PTlAjwFal/wL8U5dRJ446hmyrxs4+Lz8BRp7MzFKb/nnIOn
RMLdb5QvF56Fp0SBLZN0Mmtq4ClTtVu6VdXlangqVF++xE/b9Vd442ljXkSH
9+PT8CbQgTLf1Fe5p+BNoFT/7jFNy6rgTaSW2wrc/MmV8FQpd+szSZ/tSXhq
tHGzlokrpwKeOgVw3urG0wncV6c6s89Bg/7l8NUpav1Pb4cLf8F7DSp5XZpT
e/c49mkQ+yizOkL3ODxNSpyQanRwyzF4mtQhazC5d/UoPE3yY8KiDGyPwtOi
2fevDBTtKYOnRR2mjy+KFcvgaVPFKlawnsIReNqk4GtqulbpMDxt+u+auMox
+ofg6ZBZVugfis4H4enQ4qlO9yUrDsDTJZ86qYKVeD88XTpfsWhau3QfPF0y
asjSqBy3D54eFWkkVI3x3gtPj9pUbrqOLy+Fp0+Bg2rNa0dL4OnTrNAZKXXr
SuDp0zg/Xc0lN4rhGVAaXxafNaUYngGJ1t9i+VUVwTMkmV99wD3LIniG9KQo
2uvlsT3wDMl94NLlRJs98IwopczGXaW6EJ4RJUoN641cC+EZky6rwGPdnd3w
jMmi32iw0383PGPy/rktU3WkAN4kapju4/DvvQXwJtHEWYvLdFwK4JlQ5x+h
uzbU5cMzIa9cFUUlxXx4JqSjdVxOsnIXPFNq44zpVJHshGdK5b5zslo0d8Iz
I0ni+IX9MXm4b0bTieeZ35kL34we/SWTH1qQi/dmJNodfuHPK2LsM6OHszhq
BVPF8MxpXVW99Ou5HfDM6aywuWemYAc8c5pfGfzQ8EIOPHMyfdXr4+6aA8+c
hudP6y2/ng3PghycvV9NW5oNz4KaO1yGbr3IgmdBmoUNl67FZ8GzIO6qs4Yn
NLLgWVCXrCMm7dR2eJb04aq5e/Pc7fAs6Yx9rGtd9zZ4lnS4vVw6LN4Gz5IW
Dq/586vTNniWxHUXnX8gy4RnRZv/Y1FyMT0TnhVlBt0w73DMhGdF+bGMr0V7
BjwrOhN4f1ppXgY8K1L9TX2vJpMBz5oaFzw3lXxIh2dNi7fHhnypTIdnTZKo
iNja9enwrKkqj7fikFE6PGt6q/Q/kacsDZ4NhcQ9WnOkKA2eDe08G96a6ZMG
z4ZE1krnhrXS4NmQuGOOsc7pVHg2tNmDlSwWpMKzpXfprPXTG1Pg2VJ3YcXk
vV4p8GyprXSga7YsGZ4tLb7HapKJkuHZ0hy+qujGSBI8Oxq/vTrVdU8SPDtK
Wndw1IqTBM+OPp0KE7KbE+HZkXdfxaOYjYnw7Ijd63/nqXwiPHu6nvigZUV5
Ajx78s/2uPN4bgI8e1JRdrVc9i4enj31vAudeLU4Hp499TYbtKox8fAc6GbL
XdNPr+PgOVDAu7N5l0ri4DnQluTWHk2POHgOtE5v+cDUj7HwHOhp1oYPQydi
4bGJJVHf7bcyFh6b6pmFctpqsfDYdMZneRv3Wgw8NiUrFlwcTYqBx6Y+sXrd
T1Ni4HHo8+uumud90fA4JJ7yq/GZ09HwOKR/wnNqd0A0PA55Db1vW2AXDY9D
pzat2P/oVRQ8R+ovLWhIOBkF79s5O2dDZWAUPEdyMJl58JpjFDxHmqC495zL
QCQ8RxrhdSnk1EbC4xKvI2Hc9JRIeFyylsvJyvGIhMclZ+nGagPVSHhcEpsN
ik/LIuBxSXNpt17a0Qh4TuS8JLbqTXAEPCdyORMTre4SAc+Jbo6M9/EcFwHP
iV7crV65/GE4PCfalLMo/uPxcHg82t7FvXY7MvzHfQMerTp6gDnsHg6fRxNv
FXoo6+L9fB5dnfHJdV53GPbxKCqDe0PYEPbDS+ORyRF2RNuuMOznkUbn9UbP
DWE/vPM8OmUSwQ6aFoYeHrGlDuEcVXgveSSXfTOotCUUfXyqd8zz1o4LRR+f
NrkkftGzDUUfn3axckv0n2xFH5/m8W4c8xNvRR+fBuQHFhi7bUUfn45M6X3v
MxCCPj4Nm/Xke54MQR+fng/4JMStDUEfn1ZPttY8pxeCPj655Vcta7oXjD4B
ZTj1Cp/lBqNPQLXSB6/negajT0A1wp2MRD4YfQJ6MTtmxLgpCH0Ciu7Sky9I
DUKfgKKUdXZ8cQtCn4CUeQMPnEcD0SegK6n7HZKvBKJPQI+fNva1ZQSiT0Ct
RYved3oEok9IGTz+rB7lQPR9O8cdtPzlbgD6hBSy7cX90KIA9Alpy9JgVaWf
A9AnpEkTOl3TLQLQJyT+20bl4h4R+oREaisl5edF6BPSCZm8S2CyCH1CalX5
HPXJU4Q+IX1VrOifpyVi/gZwzODw
         "]]}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}, {}, {}, {}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}, {}, {}, {}}}, {{}, {}}}, InsetBox[
     TemplateBox[{"\"CSS-NLO\"", "\"NLO-C++\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox["\"N=3\"", {
                  GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, 
                 StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "10"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"N=3\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "5"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.7, 0.7}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"d\[Sigma]/dpT\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox["\"pT\"", TraditionalForm], 
      FormBox["\"NLO Contribution\"", TraditionalForm]}},
   FrameStyle->Directive[
     GrayLevel[0], 12],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {-0.16373883365253597`, 0.3629844}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJw03Hc8le8fx3F7Rfbejn04zolK87yjtEil7L2a0qI0NaVBJNKgImkqGpoa
SntHWxLaSfbI7/y+Plf/9LgfOM59Pe/XfR/3fd23aXjs1CgJMTGxGFkxsf//
3/evUXir9HFtZEt5mU1g6o0W60ZhyLw1pUmbysumlhpt+D6lUagTFP6wwKi8
bLnGybE1yxqFd5olSgvO3yzLnz9CoSqvUah/5INbjNfNsocP/v+vUaipfWJ+
zZ8bZa3W/3/BRqHz20ujv6ffKDMWvVqp0R9h3NyR7xYNulE2rmaZ6BX/CJPu
rXWPene9bMH/X27+H+Fti67so+uvl+3O/v+/P8I3NUrHHRyul91s+f8L/hGG
L84ZVfP2WtmPKf9/g3+E8Ydd6o9vvlb239vTaBIeuqDzJXHYtbKR/3+5EU3C
7vAZe3e9KyuL/u9fk9C8n3Vuz5iysv+vbWBqk/BBg9tO1ZKrZf+tbmmTsMDQ
Z9k5ztWy/95eTZNQd/SqhMdZV8r+ezmFv8KpbkbVUL5S5vjfv7/Chgfj+jUm
Xy77b/gC/wrtMn9H3pS9XPbf6m74K5wmddvj4KZLZf+9vZN/hXJdd7TiFC+V
/fdyVX+F1Z/DW8x3XCzr82gWGs4169hjcJE8moUpGl3itwovkEez0Gu17Pkt
gy+QR7Pw79FbK9/dKSWPZqGfzO0F+YGl5NEs3HjoduDTpvPk0Swc6+1UNGXL
efJoEb681C9Bw/I8ebQIN7dpRMjfPEceLcI/ZYsLTcLPkUeL8LNOispEyXNl
/w3fjRahPY//NaHgLHm0CMV0FcVzJ54lj1ah2L55B483nSGPVuFhi6EpO/ec
IY9WYVOyYZu725my7f+9YKtwhafUyttNJeTRKjQNuGLdur+EPFqFu2xfzngy
uYQ82oTXq/fLTZAoIY82YU/KkkG+Z4vJo02oMFM7vnFWMXm0CR/EOR2UMykm
jzbhw6e8L5lVp8mjTbhj3K/ytO2nyaNdGJNcI9444TR5tAvfaRkXF8qcJo92
oce4AoeSm6fIo124pPyqjuzaU+TRLpz1d7HH3lGnyKNdGNQt+Dlb4hR5tAv/
/XpbWLmpiDw6hMkGrU52ykXk0SHMP/nE6E7WybL/Xm5+h7BzZ+uivWYnyaND
+C9h5bE9RSfIo0Poc9L9YOnIE+TRIbwyfEtW/ePj5NEp5Ds42uhGHCePTqFj
2J3Jo9uPkUenMGyAIDQw9Rh5dArXbCv6N936GHl0Cn3vtVtY3jxa9uk/j07h
FMk5xjdCjpJHl3DTluA1xv+OlDn959ElnOaSbueUc4Q8uoTxaafHtwqPkEeX
MLKpyS2wtpA8uoQd9Q9fBm4qJI8u4e/Aii+/eIXk0S30Wed1Wr7qMHl0C2U5
D/blJx4mj26hYNcyn/Pcw+TRLazeeebakFcF5NEtvFyn8JezsYA8uoUyYckj
5g0sII9uofMsWY5q/SHy6BEu5m3yld51iDx6hIH6R2+6TjxEHj1C31vmCbd6
88mjR1heMe3SurP55NEj3NX2on3J3Hzy6BGqR5rf32OeTx7/hHG5vi1f3ueR
xz9h7+O34X678sjjnzBIZZBlg1ceefwT/jpWs2SrSh55/BOaVticdX10kDz+
CSf3Uw+R3XaQPHqFSY0eus/cD5JHrzB59IAjOUoHyaNXaLfjZvOMxwfIo1cY
oH1V3Cb9AHn0Cg98PNb8bvoB8ugVurwTV1mtd4A8xHBg8egShY/7aX3EIFjp
6L+8YD/5iKGK07PnQcx+Wj8xmOYvse0cuJ+8xLCo9cbB3p5cWl8xOF/x/F6c
lkt+Yri8KNpGxiqX1l8MH5sXJv25kkOeYsj9zA2O8c6h8RBD6zAPx4WN+8hX
DDecgkrbt+yj8RFDyKDldzus95G3GIKjnefOq9hL4yWOuHUJjzxn7CV/cRid
DxuTJbeXxk8cUgpu7iOP7aHtQRzxDkfWjfTcQ+Mpjju+wlNpzbtp+xDH0Acd
FwR7dtP4imN1q+4xHdfdtL2IY9W5iUX4kU3jLQ7ugdtq+ZnZtP2II0w8ftQI
l2waf3EM8rG6LfN7F21P4thvVDa+a+8u8pDA1UOL0jXdd5GHBDTLlNZN7s4i
DwnU6DvoHT6RRR4SKDfKWaARmkUeEnjRmnllh3oWeUjgVqWpu8mdTPKQgIPB
vPVnV2aShwQ6hw+on+SUSR4S4HqpyH/5vpM8JDDPuHfPivyd5CGBX0HnI+WC
d5KHBDDOQpiks5M8JLCI88Gg5XkGeUgi+1y21KTtGeQhiZlbilRTPDLIQxIm
r7MWne6XQR6SmNcVG3Pm3g7yEC37rZ2+Y/MO8pDEidynGRMm7iAPScx2PFxQ
qbiDPCSxsdxcx+lxOnlIYkXdq6SQ9HTykMTn7d6Hpnunk4ck9m14zFfXTycP
SahEnO7M+JhGHlLYGjumtqogjTykYNc89c2rmDTykIKWXvmHjIFp5CEFvYEe
/+T+bScPKTjN0po+oGI7eUjhza4ZSv3TtpOHFD4me4dkB2wnDyl08Jdsf2q5
nTykYGRu0DCjLpU8pJDjkfxk+apU8pDCqviys691UslDCoqRv5NWnEkhDylM
dI2aHDIlhTyksXSZGH/l723kIY34lpPBT1O2kYc0Ql58t/Vx2EYe0pgaMapD
/ulW8pDGnFGPXOsWbSUPaQw58DD7s/ZW8pDGxC1muZJXtpCHNI4q1vcbGbGF
PKQhN7z9WKrCFvIQvb54RnBz8WbykMabzXWaMwM3k4c0aoLyKutlNpOHDDx/
Hzk/tziZPGTgfzq7piU4mTxkIJa0JGWVYjJ5yOBMsqe85KVN5CGD62pvTqye
vYk8ZLCt1exLo94m8pDBwc8DnLweJJGHDN6/uWiYtyqJPGTglntd+F6QRB4y
mC7wGv2vbiN5yGCfxYDPEns2kocMTr7fXN8weSN5yODv9kKTo7IbyUMW1jrH
49zKNpCHLG7MH115YckG8pCF54+ZEBdsIA9ZRPRqlOl+X08esjhdID1brGA9
ecjCzXtpVHHYevKQhf2s7zV2RuvJQxaWsh/1Y96uIw9ZVMfvC5ifvY48ZFH8
rKXZ0Xcdechin7bi2LPa68hDFiPX61/+U7WWPOQQCdyt37W2TPO/F5TDTddR
v9L815KHHGYvDjjbaLCWPOSg3qxUIvZxDXnI4fvOhg1leWvIQw5Zi6ZX2s5c
Qx5yOL1noTfs19DnfTn0f/bqek9TInnIIcZ/4fvQC4nkIYd/Fe5LZiQmkocc
Cu/OjVYel0ifP+Xw8dfBzd4qieQhh/ulN3bFFa8mD3lIvTUfsnjMavKQx+mF
H7/kv15Fn0/lsaHpwlHJ2FXkIQ+XtKVpW6VXkYc8VizaXTZs30r6/C2PyDiF
GUqDVpKHPCYkV93pebyCPOSx/8BPJ/k5K8hDHm8Mn8jbya6gv5fk0XNy+pnw
/OXkIY/nx6KKjrgsJw95hD44t66nZhl5KCDXNbXCf+0y8lBALG+j0VXOMvJQ
wPrJbkPMbyeQhwJMdKa+TJ6VQB4K6P/hzuXvSgllM/7zUIBjsP1tt5Kl5KEA
z2D7F1l+S8lDAborZ798K7aUPBRgwRldrnxkCXkoYGLKwQL+1CXkoYDzjTe2
DeuOJw8FqOVIZdofjicPBdwRnq+X9Ionj374rfDt9KXeOPLoh0t/hjlNPRFH
Hv1gfO/4mfKAOPLoB9mo2PUq/eLIox9Wb7/8b8ClxeTRDxL/CjbZzF1MHv0Q
pNC4/Y/hYvLohxch71M3PVlEHv0wc56y7I91i8ijH0rO+q7RdV5EHv1w7u3O
9P4/F5JHP+Rt3lh15+BC8lDEAI3DLWP8FpKHInqeKuxZp7KQPBQh6zp41eo7
C8hDEXc+9AYNXrOAPBSRuydc/MjQBeShiCXmUYOfNc8nD0Usv9BUeapoPnko
4sT5i1dd5swnD0VY3FJ+ucFqPnko4t+QVOXGO7HkoQiTxkG7eKNjyUP0dUO1
ETevzSMPRWyLmil9dOQ88lDC+N9pMtVXYshDCd7VlyOCR8aQhxKufC7xML82
lzyU4Pv2kIS961zyUMKW5b8eLq6YQx5KaFH5KNvuPoc8lFDsmKJZ8nw2eSgh
e1X2zIMBs8lDCRuGd6+68XkWeSjBVfbVJ+XYWeShhOZpo22TOmeShxJUfxi2
mSfNJI/+ODusqrVOYyZ59Edb2vhPt/NmkEd/TLVPWlnuOIM8+mOZ6cmst+XR
5NEfV5QvK8j7RJNHf7w7En5p/Lco8uiP9N53u3aviiKP/niRcmtvu3oUefTH
bc2f90KPRpJHf2wwGSB4MiqSPPrjtKdfg+ubCPLoj03T6vtfWBRBHv1hntPy
zK5/BHko43iJ1sy9R8LJQxl/hlgpSruFk4cytHN5MpG1YeShDPXZQwvOrQkj
D2UcsB02ptMkjDyUsUH602i766HkoYwtb1cpTwgPJQ9lTJCt1p4iFUoeyugI
9CteOSmEPJRxc+y+E6aZweShjKHFac7J1UHkoYzvxUOXFdkGkYcKUnICjqQu
CaT1UcFmg2GKFrcD6PiugkUuM9tnawXQ+qlgYHHis8CZ/uSlgtqSNqXWS350
vFTBErcPdgNU/chPBU8tj5cpzvSl9VdBdZl81JprPuSpgg65PXe36PnQeKiA
M+7+Yat4bzoeqeB0cXbF5OfT6fgqen+/ov9JDJhO3iqYNvMmb2j6NBovFexL
HDmu6a8XfX5QgcbGQWOtfLxo/FRQuvqI08tLU2l7UEHqJRnLdtOpNJ4q0LQU
H7E1eQptHyqwDgk/vK1pMh2fVfA95UNOe+Bk2l5UsLX26dP0NE8abxVYDFM7
0T5nEn3+UMHhxrBN+uM9aPxVEHrF0rHZ2p22JxUc/N6avrzfRPJQhfW08XlH
G8eThyom77WMW/ZqHHmo4vKtt7zPN8aShyo6Wk70qylyIw9VtKxMDZidO4Y8
VDFXtXJtQtpo8lDFI4emDtmNruShiohzVh7KK13IQxW+O8caJMePIg9VGBbM
1otdCPJQxWu7AP34mpHkoYopVW/3Pfw0nDxUkeSgsuPVl6HkoYp4M/vWzX+d
yUMVA39H1L+SGEweqqiMjSw4pzWQPETvd1rNHh0HR/JQhZWvluffiQLyUEXA
8f0v4t/wyEMVwnW/Ft634JKHKhRrHL0eJViRhyrmzGnbPquSQx6quJc6dlPS
MBPyUMVT9wtHLKbqkofo/cxfefDHCDXyUMOmqxd8Fi+WIQ81TN22pXyH/p+r
fR5qGPnvo0d1zeeRfR5qeOu0bMeBDxLCPg81hOSG56wZoCLs81CD5RuX2pY6
LWGfhxqEWakHXiQbCvs81PDe5oGzmbKZsM9DDcGOnKtnp1gI+zxE339h/NXz
W62FfR5qyDBc+XHoNa6wz0MNd5rnZ075wRP2eajBrDGxf5KcQNjnoQadhoUj
R2UNEPZ5qMHo9vExoWZOwj4PNTR/jGr5cWSgsM9DDedO3JButB8s7PNQw9lr
VloLTzoL+zzUsH79lhPLuUOFfR5q2Hb99lDNQ8OEfR6i9f9bqzFWf4Swz0MN
3vNjluumjBT2eajh1tyLmRk9QmGfhxqc5hsO/3gGwj4PNcA0bNvUWaOEfR7q
KMqZKbAwcBH2eahD0iRWOfChi7DPQx1mSY8ku1a4Cvs81BG9z+yjNHc0eahj
8pM5cxKrRpOHOrJjBOHz1o4hD3U8D8mLf851Iw91nIy5NLnkuRt5qONmb1CK
6rKx5KGO5phlN/8YjSMPdSx8ZrvM58Y48lDHhXnPB7hFjicPdfTLGhV5XWoC
eahjIv/e8gd5E8hDHR1XZryfPWoieYh+XvJVbe77ieShjo/OFz7OW+pOHurY
/bzA4K2qB3mo4/OP6VUNRzzIQx2qw0+P3YVJ5KEO5RPNe36/nEQeoveTeaej
cZYneahjfnLgqtxuT/JQx7ZaGPe6TSYPdWgVhnPkUieThwbGPS73mFs5mTw0
sOlfqoG94RRh3/FdAy9uNcq7R0whDw3kNnK23iucQh4amHx6rebRn1OEfcdL
DSzbk6LxQzCVPDSgs7Tnb1rcVPLQgOavcr19pVPJQwMREpY/+ndNJQ8NTIgt
rfgy3Is8NJDzIk7ebpWXsO/4qoGYsnL5N1e9yEP0+7atM2z+50UeGmi1Us9c
PnKasO/zgwbm7Qm7vmDlNPLQgN+m5q9Vl6aRhwYcF/71LuqYRh4aMP8icO8Y
NJ08ROu3bYjC+UXThX3HZw2Udnk9+lo0nTw0sDgp41n69+nkoYHUDzUeJZbe
wr7PH6LxSu5d5B7mTR4aWD8+Ky5kjzd5aKDWxyXx5wtv8tDEq/XpV9uUfMhD
E7OH6PuudvMhD03k+ixbsGGVD3loIuFfqF2/cz7koYks/t7Dqj99yEMT3gGG
vdkcX/LQxNhyCfdDfr7koYmhVbn5Tqm+5KEJH/8NBuPLfclDE+s3JJfXtvsK
+z6vaaKr9/FRaXs/8tDE+2tP3xSF+pGHJu5WRQbV7vAjD02E6JU7H7jtRx6a
kC3NnP+t3Y88NPH8TJv0NVt/8tBE0sSVbWaB/uShibDBGKWxzZ88NDGz7tO7
jCv+5KGJU9t2XT/00588NKEyyO7zWMMA8tCE0z7ZwSvcA8hDE3/7Dz3qujyA
PDSRaraam3skgDw0YRE+piC1KoA8tJD7/oyklnQgeWhhe8FZW8cBgeShhWbn
1t6G4EDy0ILxgz9RA7cEkocWfqa3Djc4H0geWnj5mRux71MgeYhez2vXmQtK
QeShhecnrPotdA4iDy0E/To1siI8iDy00KDdbX5xaxB5aGFuT0XaxHNB5KGF
Ix2PvVdUB5GHFpTTn7p6yAWThxYq5dMty/jB5KGFBzW19575BpOH6Otuxzs3
JQaTh2g59svKT4eDyUMLoV+L9T4+CiYPLVg/G7dzbUsweWjBX1r51D39EPLQ
gtHALO6FUSHkoYXwlvzbk2aEkIcW1p4bMHLr1hDy0MKtoniPhadDyEML4y41
nBCvDCEPbdw0ddEe1hlCHtpwtLudq6wcSh7aMKraFlNlEkoe2uDFu0+KGxBK
Htr4uGjt7q+uoeShjeNrPhxxmh5KHtr49Uz43Ds6lDy0MXRy6dzJS0LJQxuL
ylPum24KJQ9t7JUYNfr+rlDy0Ea49EZbjyOh5KGNZ7KTnx6+EEoe2pDZ9Wjz
27uh5KENibz5hV9eh5KHNpYtq1/2+GsoeWhj8gvO1O0doeShjTHlYSu58mHk
oY1BRSYTD+iEkYc2ZjjbyjdZhZGHNjJtdkgZDQ4jD200e11JtnALIw/R+43x
+yw3PYw8tHGlbmbInYgw8tBGUKlwTOTCMPLQRvDgjdXvEsPIQwc7nw5dMiA1
jDx04PC8ZFrUvjDy0IGY6YGyuGNh5KGD7b+UeiMuhJGHDubFhvvxK8LIQweP
1kZpvH0RRh46eOU/Mi7yUxh56EDDKP7ag99h5KED3w0dQzR6wshDB0sX6VkM
UwgnDx2oJaeVj9IOJw8d5JSs9rc2DycPHZScj7X+zQ8nDx3MPOcTmzkinDx0
IF20O9ZoQjh56OBil/ysJO9w8tDBjbv1u5+Gh5OHDs5tq3XtmRdOHqL1W2Rx
UGF5OHnoYNzdMX87NoaThw4UZnotvp8eTh46+KL5Imx1Tjh56OBt3a02zaPh
5KGDrvT9C1LPhpOHDmqrvBV+XAsnD12UXffp5j4IJw9dJIhtX+NZFU4eulAb
MOe596dw8tBFie1LW5ef4eShC6shw66ptoeThy6Wzth2/5ZEBHnoQqxUuD5Y
KYI8dHE5eKLpO+0I8tDFrjaH1yPNIshDF4mlzTUb7SLIQxc/99ssODMogjx0
wT305VIFIshDFw2Vla3XJkSQhy50N1t4758WQR66+BC/Qyk6OII8dNFVFTNZ
bWYEeejCcmPalEMLIshDF+4qc12Nl0eQhy5qnnT7JK6PIA9d5Pe+vHZnWwR5
6OL4NcOi9swI8hCtHz/VS2V/BHnoQmbe8g/KRyLIQ/TzOfdWt52OIA9d7P7b
HV1xMYI89JB6hHtz9c0I8tCDh4zCTZMHEeShh6te9RlHX0SQhx4eVh2NNnwf
QR56CLv3ISqhLoI89OA/9nDZ1Z/MQw/7hHf2/2xhHnq4HHVooMw/5qGHGbqu
R+VkIslDD1WeY21blCLJQw/zEzo/3teMJA89jIsa17HVMJI89GBrdn2fs0Uk
eejB8n12+yO7SPIQrd+VE46TnSLJQw+3rq5aenlYJHnooSZpUKO6ayR56CEL
h296T4gkDz2MiHTX3zAlkjz0MCZ9onGubyR56OF4YFxbfkgkeejBTsPtfmZ0
JHnowTe9/vrimEjy0MNIcXsJ4eJI8tDDsgP7iluWRZKHPvy2zenYtSaSPPQh
vTyh23pTJHno4/Jy/5pDKZHkoQ/vC1MfKu+MJA99fBH41kXviSQPfXAWqE86
diCSPETL4z5y3x+OJA991K19dLD7RCR56GP03oOV8meYhz5OxlZ+k7rIPPRh
/zVb4lcZ89DHuZLnuHWLeYjef53pnc33mYc+zI++uTjyKfPQx/ofisNqKpmH
Po51J85e+I556KNo4IXZTTXMQx8jDjQFhjUwD31syrYIL/vBPPQxcZbMHsUm
5qGPq9+krce3MQ99TDafahPXzTz00VZbeXW7eBR56EPcb6TcXpko8tAH7/gf
86x+UeRhgKhMXae1KlHkYYCjLTnTgjSjyMMAJ0O5h6z1osjDAC9LbUZ/Nooi
DwPcu3jbczsnijwMsGXbnzo76yjyMECHZ6D5Rbso8jCA9KEV1s6CKPIwwNqR
W5UPD4wiDwOsi05ulRkaRR4GsE0a3OkzMoo8DDD9tPHg3S5R5GGAN6Zpdx+6
RZGHAebdOvCwaUIU/T1ogNaLvBB5zyjyMIDuy3fZql5R5GGAHl3d7H4+UeQh
+v5Rukvb/KPIwwBfnd5NeRkcRR4GiNtoO+pQeBR5GOBZY2bojOgo8jBAxKNV
9/RnR5GHAXzSFbJvxDAPAzwS8uoDFjAPA1RWH7nfsJh5GGJGq3xE9FLmYYhB
rYdvVS1nHoaQKDmqOHw18zCE/3OZKTvWMg9DlGD1sfcbmIchDmQectJPZh6G
GJv2Rsp9K/MwxJuESU7zU5mHITR2iL9NSmcehni0rlxlx07mYQiZ684/03Yx
D0MktT5JWr+HeRji07ynbbNzmIchGhMmTxtzgHkYQu75oDPq+czDEGOkwass
YB6G2PK489XWI8zDEBuT7t4bfJx5iL5/+SfdqpPMwxCuUye/m32aeRhiVEyT
1d8S5mGI+DEr1eafYx6GuHlv2emaUuZhiE3XJuiNu8Q8RN+vxwnPu8I8jJDs
o5Lzt4x5GOHju5ZPzjeYhxHcPFPGLCpnHkYw+DHnzcHbzMMI/Wvaz1bcYR5G
yM9b8qPmHvMwguZYyfQ/D5iHEWSepV5sfcQ8jKC041vCnyfMwwhpiy/W1jxj
Hkb44pnY784L5mEkOpJnSeVXMg8j9P52+hT3inkY4dufWedHvGEeRlgkZ5bV
9ZZ5GCEmwTyj6D3zMIJrgMZ1v2rmYYTGT/P5nR+ZhxFunNrZvP0T8zDCcYNL
xkafmYcRyta03jxQxzyM8HfT0L/6DczDCE6LfMq2fmEeovEN7xrS/JV5iNYn
v3jx1O/MwxjjWhsSD/9gHsbY8uRz7N+fzMMYUceeTh30m3kYw2rMuaHzG5mH
MfIaEpwP/GEexlA+URt4t4l5GOPrzd2lX/4yD2MsL7YM7G1mHsa4lP3bR6mV
eRhj9ZKRl9XamIcx2meMyFZuZx7GeFnf9k+yg3kYY7dyQM/vDuZhDPf3A/Of
dzIPY7ydNUSyqIt5iL7frsNmbTfzMBb9ffHdyqOHeRijd+lMRZV/zMMYZo3H
6+/9Yx7GyPlTdWtlL/MwxtyQH6XWYtHkYYxrn588ui9a7vMwRiV/stYM8Wjy
MIacQDenU7Tc52GMfRPKFm+UiCYPE5zbcbFQQTK6b32kTdBfcea4JNFyn48J
Ol/Ih3eLlv9bP2UT6MyqkJwtFU3nG00w8vmJYU9Ey/+tr64JzOqKtB2ko8nP
BEtjCg5tFC3/t/4cEyTHTP5bKVru8zSBxiSv/iYy0X3jwTPBZI1hUuGi5b7z
kyao3bns017R8n/j42yCtcfnnHsiWu7zNsGgWZ7bekTL/w2/iwkcx05azJGN
Jn8TGAcvXeoiWv5v/NxNcHfHrQJ/0XLf9mCC+w81FefK0nj6mCDKTHA2XrTc
t32Y4K/cnZPLRMv/nR8MM4HN5kXSS0XLfefXTFAYe/bWPFka7zkmGL2ovStY
tNx3/tMEFTHbz4yTpfGPM8H2DRe7uKLlvu3JBK6B+97LyZJHogkyho+PrpYh
jw2i8RtbeqBIhjw2m+DG/kd7EmTII9UEF/f4h46QIY8ME4g3aHR1SpNHtgkE
pfuXFDOPHBMYtG2piWAeeSbYNtNztDLzKDRB/atJx85IkcdJEwxze206TYo8
SkxwQt6m5KckeZSaIFI8cvYaSfK4Ihqv0j1TlSXJ44YJFqU/jM+SII8KEyT+
+lSjK0EeD0wwZtrpnExx8ngq2h6yO88ribPt2wT7ZGOcV4uRxzsTPN+YZ/td
1EPf+VoTxF6zyJ4iWv6Po94EPmNnphT/Y/sjEwy/8kCjv2i5b7q5CWa3HxgU
2cP2Tyb4YW3+70w39d0per2eFXFi3Wx/ZYrXFTcL3Lqod2lTFB3o2ZPUyfZf
phDfbhhys4P6VzbFrwKpzg7R/qOvD1OY2K+N57bT/kDXFC1XvT74tLH9myla
51sMW91K+weOKVKb0jIPtLD9nSnUT5l1Xm2m/QXPFKubPWOrRPu3vj5MMavf
mt5vTbT/cDbFszDFMx1/2P5Q9HqHB2dKipb7+jDF4d+Di+Qa2f7RFIZPBXLy
v2n/4m6KpxuHHJX6xfaXplil7JXT9YP2/z6mWOqx8OfP72z/aYpbFsv3v/1G
HmGmWJY76lr5V/KINsUoic3Tj7DjwxxTjGmRm5XcQB7zTeGwL0Iyqp484kwR
eNHBfngd29+aIuP231/9P5NHoinOq1lNef+J7X9Fv79WEHi4hjw2m2Ls9hid
mI9sf2yK8r3mKbxq8sgwxa5X6be+v2f7Z1PoLKu7nf+OPHJMUTB02G6/t2x/
bYqKhfljFd6QR6Ep5gzkVJ17xfbfpkibc2xySBV5lJgi9LfZZclKtj83RVtB
mGn+C/K4YorRuYJNeE4eN0yxxdKz/dVT8qgwxYr6mQkxT9j+XjQe/4zV/7HP
E09FPgZyDzc/ZMdjU+zNPnxS/QF5vDPFg5QlZbvusT5E219TrYzeXdaHKepO
TNyaVcH6MMWTC2I+qrdZH6ZY4zhuXlI568MU3+P9X3fcYH2YImVQRO7M66wP
M7jvWFPxvIz1YYYpTnd8h11lfZghM3iEf+7lqL6/r5TN4KX49lnvRXa8N4O1
VOrdwAusDzMoNQ4dc+4868MMwsVn3BXPsT7M8GLMrfrgM6wPMziP4uqdLGZ9
iF4/cdfPjlPs84EZrswvmeFSxPoww7GvWqlJJ1gfZlg6aursu8foeOtihoiI
r72yR1kfZnj6eZq3ayHrwww79SQWLy9gfZjhs71XyKl81ocZzAS5Rp8Osj7M
8MxpQKnKAfq8FGaG5wEeA4bnsj5Ey78td0TuY32YISfu28fkPezzh+j1r5Wa
Hs9mfZghTK4w4H4W60P0fjtuZjTsZH2Ywee+0nOxDNaHGUZ7rTDQTmd9mOGH
Vne87XbySDWDRGjsl6Ep5JFhhi+TTsaP28r6MMOZnxutvDazPsyw3eWKWMAm
1ocZIsP7yYVuZH2YQWedqWv4etaHGU4rFZwPW0seJaLxPjVwTnAi68MM9fMj
InxXsT7MRPvr0kOeK9jnHzMMWnV28OhlrA8zpFk/MRq0lPVhhgmP4kIt4lkf
ZvjooCChtpj1YYaAhw1y3QtYH2ZwagtZVhvLPr+awaL6YsCdGNaHGT4UDi4+
Oof1YYYVyxTXbZ5FHo1m+LM1+vmMGawP0fgOn13oEsX6EI2XtqOsfgTrg4OP
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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJwtzglUzesax/HspAHNc2me9263hwyR/s+hJNdYIo4x027SPM9FZRclDWbh
JIVT2E4aDrIPyZRM23VLbuciCZVITm6H4/es9V//9a71vp/na+4f6r2JJScn
d+nb9/3/Y/qYdu/f31jMkDH7932ffqZ19arBtfyHjPCf+cDcl82Uvrjaxty5
/X0GmcLHd1/a5rYym/+ZT0yTzsd3zm63mR/eZ+b1kJ+vOK4F3jAjidyv8HRS
M7y/mCOjUtZY/WvwRpjcQ9PLflsuhfd/Znmyctije03w5GjnkFuNW/wV3Jcj
l8r4J76Fl+CPocPGi3QOxTTiPYva45r6r++pxz55elMp8dradRHeWAqO5T3b
vKoW3lg6lFub1PTlAjwFal/wL8U5dRJ446hmyrxs4+Lz8BRp7MzFKb/nnIOn
RMLdb5QvF56Fp0SBLZN0Mmtq4ClTtVu6VdXlangqVF++xE/b9Vd442ljXkSH
9+PT8CbQgTLf1Fe5p+BNoFT/7jFNy6rgTaSW2wrc/MmV8FQpd+szSZ/tSXhq
tHGzlokrpwKeOgVw3urG0wncV6c6s89Bg/7l8NUpav1Pb4cLf8F7DSp5XZpT
e/c49mkQ+yizOkL3ODxNSpyQanRwyzF4mtQhazC5d/UoPE3yY8KiDGyPwtOi
2fevDBTtKYOnRR2mjy+KFcvgaVPFKlawnsIReNqk4GtqulbpMDxt+u+auMox
+ofg6ZBZVugfis4H4enQ4qlO9yUrDsDTJZ86qYKVeD88XTpfsWhau3QfPF0y
asjSqBy3D54eFWkkVI3x3gtPj9pUbrqOLy+Fp0+Bg2rNa0dL4OnTrNAZKXXr
SuDp0zg/Xc0lN4rhGVAaXxafNaUYngGJ1t9i+VUVwTMkmV99wD3LIniG9KQo
2uvlsT3wDMl94NLlRJs98IwopczGXaW6EJ4RJUoN641cC+EZky6rwGPdnd3w
jMmi32iw0383PGPy/rktU3WkAN4kapju4/DvvQXwJtHEWYvLdFwK4JlQ5x+h
uzbU5cMzIa9cFUUlxXx4JqSjdVxOsnIXPFNq44zpVJHshGdK5b5zslo0d8Iz
I0ni+IX9MXm4b0bTieeZ35kL34we/SWTH1qQi/dmJNodfuHPK2LsM6OHszhq
BVPF8MxpXVW99Ou5HfDM6aywuWemYAc8c5pfGfzQ8EIOPHMyfdXr4+6aA8+c
hudP6y2/ng3PghycvV9NW5oNz4KaO1yGbr3IgmdBmoUNl67FZ8GzIO6qs4Yn
NLLgWVCXrCMm7dR2eJb04aq5e/Pc7fAs6Yx9rGtd9zZ4lnS4vVw6LN4Gz5IW
Dq/586vTNniWxHUXnX8gy4RnRZv/Y1FyMT0TnhVlBt0w73DMhGdF+bGMr0V7
BjwrOhN4f1ppXgY8K1L9TX2vJpMBz5oaFzw3lXxIh2dNi7fHhnypTIdnTZKo
iNja9enwrKkqj7fikFE6PGt6q/Q/kacsDZ4NhcQ9WnOkKA2eDe08G96a6ZMG
z4ZE1krnhrXS4NmQuGOOsc7pVHg2tNmDlSwWpMKzpXfprPXTG1Pg2VJ3YcXk
vV4p8GyprXSga7YsGZ4tLb7HapKJkuHZ0hy+qujGSBI8Oxq/vTrVdU8SPDtK
Wndw1IqTBM+OPp0KE7KbE+HZkXdfxaOYjYnw7Ijd63/nqXwiPHu6nvigZUV5
Ajx78s/2uPN4bgI8e1JRdrVc9i4enj31vAudeLU4Hp499TYbtKox8fAc6GbL
XdNPr+PgOVDAu7N5l0ri4DnQluTWHk2POHgOtE5v+cDUj7HwHOhp1oYPQydi
4bGJJVHf7bcyFh6b6pmFctpqsfDYdMZneRv3Wgw8NiUrFlwcTYqBx6Y+sXrd
T1Ni4HHo8+uumud90fA4JJ7yq/GZ09HwOKR/wnNqd0A0PA55Db1vW2AXDY9D
pzat2P/oVRQ8R+ovLWhIOBkF79s5O2dDZWAUPEdyMJl58JpjFDxHmqC495zL
QCQ8RxrhdSnk1EbC4xKvI2Hc9JRIeFyylsvJyvGIhMclZ+nGagPVSHhcEpsN
ik/LIuBxSXNpt17a0Qh4TuS8JLbqTXAEPCdyORMTre4SAc+Jbo6M9/EcFwHP
iV7crV65/GE4PCfalLMo/uPxcHg82t7FvXY7MvzHfQMerTp6gDnsHg6fRxNv
FXoo6+L9fB5dnfHJdV53GPbxKCqDe0PYEPbDS+ORyRF2RNuuMOznkUbn9UbP
DWE/vPM8OmUSwQ6aFoYeHrGlDuEcVXgveSSXfTOotCUUfXyqd8zz1o4LRR+f
NrkkftGzDUUfn3axckv0n2xFH5/m8W4c8xNvRR+fBuQHFhi7bUUfn45M6X3v
MxCCPj4Nm/Xke54MQR+fng/4JMStDUEfn1ZPttY8pxeCPj655Vcta7oXjD4B
ZTj1Cp/lBqNPQLXSB6/negajT0A1wp2MRD4YfQJ6MTtmxLgpCH0Ciu7Sky9I
DUKfgKKUdXZ8cQtCn4CUeQMPnEcD0SegK6n7HZKvBKJPQI+fNva1ZQSiT0Ct
RYved3oEok9IGTz+rB7lQPR9O8cdtPzlbgD6hBSy7cX90KIA9Alpy9JgVaWf
A9AnpEkTOl3TLQLQJyT+20bl4h4R+oREaisl5edF6BPSCZm8S2CyCH1CalX5
HPXJU4Q+IX1VrOifpyVi/gZwzODw
          "]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"d\[Sigma]/dpT", ""}, {"pT", "NLO Contribution"}}, 
      FrameStyle -> Directive[
        GrayLevel[0], 12], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 10}, {-0.16373883365253597`, 0.3629844}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]]}, {"CSS-NLO", "NLO-C++"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {
         GrayLevel[0], 10}, LegendFunction -> "Frame", LegendLabel -> "N=3", 
       LegendLayout -> {"Column", {Automatic, 5}}]], {0.7, 0.7}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.827992587769354*^9, 3.827992654198738*^9, {3.827992688915163*^9, 
   3.8279926940159693`*^9}, {3.827993698203949*^9, 3.827993713494505*^9}, 
   3.827993749725175*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"4c348c8e-a25b-43f6-9b41-857820be0cba"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 1584.75},
WindowMargins->{{4.5, Automatic}, {7.5, 27.75}},
Magnification:>0.7 Inherited,
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4b25da0d-4382-4f63-a51d-4a8871ac94f0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SetDirectory_templates"->{
  Cell[1541, 46, 355, 7, 21, "Input",ExpressionUUID->"9705a8fb-9b61-4663-9653-346d1ee7ea12",
   CellTags->"SetDirectory_templates"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SetDirectory_templates", 530913, 10447}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 419, 7, 57, "Chapter",ExpressionUUID->"8a9ff98f-0bbf-418b-aa97-dac2163ebe2d"],
Cell[CellGroupData[{
Cell[1002, 31, 216, 4, 42, "Chapter",ExpressionUUID->"722f086d-2af6-4144-a38c-74e54c86fa43"],
Cell[1221, 37, 317, 7, 24, "Text",ExpressionUUID->"9dcd3846-db54-4cba-96ed-6cb2d592fee8"],
Cell[1541, 46, 355, 7, 21, "Input",ExpressionUUID->"9705a8fb-9b61-4663-9653-346d1ee7ea12",
 CellTags->"SetDirectory_templates"],
Cell[CellGroupData[{
Cell[1921, 57, 315, 5, 31, "Subsubsection",ExpressionUUID->"167854bb-5de8-4f3a-8115-e1631bb625d1"],
Cell[2239, 64, 1321, 37, 52, "Input",ExpressionUUID->"0a8ebf0a-3577-4656-83dd-2eab2acc2206"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3597, 106, 367, 6, 31, "Subsubsection",ExpressionUUID->"3ef91cd9-199f-4d1f-a813-b1e0c3e6f33f"],
Cell[3967, 114, 504, 16, 35, "Input",ExpressionUUID->"e4754d1c-9cb5-4293-b9fe-bffa45deba57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4508, 135, 294, 5, 31, "Subsubsection",ExpressionUUID->"b48f08cb-ec50-48cc-b75d-28e46b285f7e"],
Cell[4805, 142, 2385, 68, 134, "Input",ExpressionUUID->"0bd61deb-fa26-4a62-9ae6-7991b8e80256"],
Cell[7193, 212, 6527, 185, 162, "Input",ExpressionUUID->"280698ba-12ff-4cc3-92d4-607d9d974b23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13757, 402, 489, 7, 31, "Subsubsection",ExpressionUUID->"48fdb9c5-4e42-4bd1-b040-748484b31ad7"],
Cell[14249, 411, 987, 22, 52, "Input",ExpressionUUID->"dad17c13-c5f8-47a2-82b9-38d4ab7ed2b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15273, 438, 232, 4, 31, "Subsubsection",ExpressionUUID->"7ae029ac-440f-4777-b817-4766231c4af0"],
Cell[15508, 444, 2084, 55, 49, "Input",ExpressionUUID->"77876523-1e45-4d79-9965-d0509079e7a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17629, 504, 223, 4, 31, "Subsubsection",ExpressionUUID->"9210d459-52b8-453f-92eb-bb4dfa480bc3"],
Cell[17855, 510, 8137, 231, 196, "Input",ExpressionUUID->"07d68a33-dd34-4133-8462-29bd1696a6d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26029, 746, 585, 18, 32, "Subsubsection",ExpressionUUID->"ac177e9d-edf9-4889-9b52-e05134c67649"],
Cell[26617, 766, 5579, 176, 122, "Input",ExpressionUUID->"eaa88ba6-9819-4d92-bf25-07f23a0b59f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32233, 947, 602, 17, 32, "Subsubsection",ExpressionUUID->"ec8797df-a8ce-4e14-9aaf-55431b6a2344"],
Cell[32838, 966, 2213, 68, 120, "Input",ExpressionUUID->"662389f0-a41e-4479-bc3f-04a3cf297210"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35088, 1039, 445, 6, 45, "Subchapter",ExpressionUUID->"2746f9b0-64be-4894-aeda-b94cf3da3563"],
Cell[35536, 1047, 291, 6, 24, "Text",ExpressionUUID->"b2ae5d29-770c-4670-bfa5-be2225e9964e"],
Cell[CellGroupData[{
Cell[35852, 1057, 391, 6, 31, "Subsubsection",ExpressionUUID->"9c6d0b0c-d259-46fb-b2cc-20505568dd2d"],
Cell[CellGroupData[{
Cell[36268, 1067, 827, 21, 21, "Input",ExpressionUUID->"1ccd3872-b1b0-40fb-8c8b-c881f3b23908"],
Cell[37098, 1090, 579, 14, 36, "Output",ExpressionUUID->"6e9c8ce7-ab0d-49f8-990b-057edc631ef3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37726, 1110, 406, 6, 31, "Subsubsection",ExpressionUUID->"db706cb9-d6ca-4c83-a914-ef5a224a8bce"],
Cell[38135, 1118, 1433, 39, 37, "Input",ExpressionUUID->"e8c596fd-7a8c-461d-9df3-87595da6b28a"],
Cell[CellGroupData[{
Cell[39593, 1161, 468, 10, 21, "Input",ExpressionUUID->"74456c2f-a0d4-4723-b8ac-f1c29a3f1d71"],
Cell[40064, 1173, 567, 15, 36, "Output",ExpressionUUID->"673274ef-f603-4803-9037-ec349ba7a657"]
}, Open  ]],
Cell[40646, 1191, 393, 8, 24, "Text",ExpressionUUID->"b944299d-38b2-42bd-9b51-e70b83bd7e06"],
Cell[CellGroupData[{
Cell[41064, 1203, 1725, 47, 21, "Input",ExpressionUUID->"97a1d70c-2f3a-4940-81c3-01f74e76ae0c"],
Cell[42792, 1252, 481, 13, 36, "Output",ExpressionUUID->"d8eb2e5f-6aa0-43d9-bae0-044f80a7354a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43334, 1272, 595, 13, 45, "Subchapter",ExpressionUUID->"97202fa2-8cf3-4e35-96ca-a8229abead53"],
Cell[43932, 1287, 352, 7, 24, "Text",ExpressionUUID->"d1b9555e-521a-4864-a888-6b109a5be4f5"],
Cell[CellGroupData[{
Cell[44309, 1298, 391, 6, 31, "Subsubsection",ExpressionUUID->"1f4dfc05-3fa3-4aa6-a561-1de1b7034331"],
Cell[CellGroupData[{
Cell[44725, 1308, 863, 24, 21, "Input",ExpressionUUID->"fa63a39d-ce82-4e48-ac3a-683662a1d1f9"],
Cell[45591, 1334, 735, 22, 39, "Output",ExpressionUUID->"7c4fb7d6-53de-425b-98b8-5a086453c30a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46363, 1361, 866, 24, 21, "Input",ExpressionUUID->"a19841ae-50b7-4894-8c7e-b5aaa1a0a6af"],
Cell[47232, 1387, 3863, 114, 56, "Output",ExpressionUUID->"6374cef8-ded2-4606-817f-ac5110032a6b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51144, 1507, 405, 6, 31, "Subsubsection",ExpressionUUID->"7045abb6-3a88-4c10-a946-3a6b3c5a7aba"],
Cell[51552, 1515, 1634, 44, 37, "Input",ExpressionUUID->"7291e729-0948-4f54-8d7d-b3026f2431d3"],
Cell[CellGroupData[{
Cell[53211, 1563, 401, 10, 21, "Input",ExpressionUUID->"e296e103-b8c9-441d-b6fc-2cb2d74ed6ac"],
Cell[53615, 1575, 4302, 126, 70, "Output",ExpressionUUID->"91ac89e7-a7b1-48c1-8b34-d78ae0ed37ff"]
}, Open  ]],
Cell[57932, 1704, 499, 9, 24, "Text",ExpressionUUID->"6864e869-8f44-46f8-b989-da28ba091bd0"],
Cell[CellGroupData[{
Cell[58456, 1717, 1623, 46, 37, "Input",ExpressionUUID->"68f25eaf-b310-4542-9cb6-d3589b66e901"],
Cell[60082, 1765, 2568, 79, 39, "Output",ExpressionUUID->"4549835e-ab5d-492e-9544-f1928f7c8990"]
}, Open  ]],
Cell[62665, 1847, 283, 7, 24, "Text",ExpressionUUID->"db458672-38b8-45a3-836b-f14d8c4a4f98"],
Cell[CellGroupData[{
Cell[62973, 1858, 1954, 55, 52, "Input",ExpressionUUID->"cf0f77e0-6352-480f-95df-0766e6d49583"],
Cell[64930, 1915, 1326, 42, 39, "Output",ExpressionUUID->"3a4c9631-e86c-4a45-a25e-2bbfa1e0aad0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66329, 1965, 163, 3, 48, "Chapter",ExpressionUUID->"9dd1118e-b5d6-495c-8f80-f810cd3bac8c"],
Cell[66495, 1970, 281, 6, 24, "Text",ExpressionUUID->"6ff47465-d2ac-435f-9026-f7a1b4d2ddb1"],
Cell[CellGroupData[{
Cell[66801, 1980, 242, 4, 31, "Subsubsection",ExpressionUUID->"2ea164ed-14e4-45ca-8c8a-5ba75f19bbc5"],
Cell[67046, 1986, 5332, 152, 295, "Input",ExpressionUUID->"190374a7-13e5-419a-b279-0c97639975f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72415, 2143, 445, 6, 45, "Subchapter",ExpressionUUID->"896b0713-7cac-4a11-a18e-1df33c979f46"],
Cell[72863, 2151, 2179, 53, 34, "Input",ExpressionUUID->"3abb2ffd-6603-4747-bea0-1f94b16085dc"],
Cell[75045, 2206, 774, 20, 37, "Input",ExpressionUUID->"b81b597a-3a65-4f3b-8b1b-5c763206306f"],
Cell[CellGroupData[{
Cell[75844, 2230, 2224, 57, 37, "Input",ExpressionUUID->"4d27eb41-affe-437e-85ba-0f044ad9a6f0"],
Cell[78071, 2289, 77728, 1379, 179, "Output",ExpressionUUID->"c9d8cf9f-ca45-4adc-be6e-d1e011b8fcfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155836, 3673, 300, 5, 31, "Subsubsection",ExpressionUUID->"85034ede-8eff-4bea-9a82-32bff5db22f0"],
Cell[156139, 3680, 1370, 36, 21, "Input",ExpressionUUID->"a6ec9205-8629-4d7f-9ec2-a8909309102b"],
Cell[CellGroupData[{
Cell[157534, 3720, 972, 22, 21, "Input",ExpressionUUID->"354ecbcb-ec90-412d-ae28-2bb92da038c4"],
Cell[158509, 3744, 443, 9, 23, "Output",ExpressionUUID->"5a751889-409c-4f90-99ba-b3fcb09c76bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158989, 3758, 950, 21, 21, "Input",ExpressionUUID->"9a588fd2-2af1-454c-bc13-46f22b4bfbbb"],
Cell[159942, 3781, 475, 9, 23, "Output",ExpressionUUID->"a2a4deca-c69a-4394-b4ed-7ce87c2f8776"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160454, 3795, 2309, 63, 52, "Input",ExpressionUUID->"7c9ca3a3-d00e-47a5-9926-36b8b50a530f"],
Cell[162766, 3860, 139663, 2448, 179, "Output",ExpressionUUID->"3b5da2d1-6e35-46e6-827d-a3acd357c678"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302466, 6313, 2218, 62, 52, "Input",ExpressionUUID->"6ccbe862-0fdc-40d7-8f7f-c264c10106ae"],
Cell[304687, 6377, 139496, 2445, 179, "Output",ExpressionUUID->"c9f61ae6-44f0-483b-b4c2-3ad7d1a88ca7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[444244, 8829, 595, 13, 45, "Subchapter",ExpressionUUID->"81603a52-63d8-4d00-88da-4e71300c84f7"],
Cell[444842, 8844, 5123, 124, 96, "Input",ExpressionUUID->"16e401f7-c99f-46bf-9010-b981070d04ba"],
Cell[449968, 8970, 927, 23, 37, "Input",ExpressionUUID->"ec06ef70-0096-4073-85b0-3795e7e6ba68"],
Cell[CellGroupData[{
Cell[450920, 8997, 2282, 59, 37, "Input",ExpressionUUID->"382b0c67-13b7-4805-bb83-8c02e50274be"],
Cell[453205, 9058, 77279, 1372, 179, "Output",ExpressionUUID->"4c348c8e-a25b-43f6-9b41-857820be0cba"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

