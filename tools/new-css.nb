(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    339935,       7212]
NotebookOptionsPosition[    330323,       7040]
NotebookOutlinePosition[    330959,       7063]
CellTagsIndexPosition[    330872,       7058]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["CSS expansion in Mellin Space (Bozzi et. al)", \
"Title"]], "Chapter",
 CellChangeTimes->{{3.791273654873348*^9, 3.7912736574577208`*^9}, {
  3.791273706615746*^9, 3.791273731328961*^9}, {3.7912738585645037`*^9, 
  3.7912738636857653`*^9}, {3.826775321259921*^9, 3.826775344358584*^9}, {
  3.826775588426889*^9, 
  3.826775592203027*^9}},ExpressionUUID->"8a9ff98f-0bbf-418b-aa97-\
dac2163ebe2d"],

Cell[CellGroupData[{

Cell["Analytical expansion", "Chapter",
 CellChangeTimes->{{3.827985475320418*^9, 3.8279854830330467`*^9}, {
  3.827985514894835*^9, 
  3.827985518674445*^9}},ExpressionUUID->"722f086d-2af6-4144-a38c-\
74e54c86fa43"],

Cell["\<\
Before running this notebook, create a folder named datfiles in the same \
directory where this notebook is located.\
\>", "Text",
 CellChangeTimes->{{3.827166178894506*^9, 3.8271662147228637`*^9}, {
  3.827300621659182*^9, 
  3.827300622632512*^9}},ExpressionUUID->"9dcd3846-db54-4cba-96ed-\
6cb2d592fee8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.827039574508202*^9, 3.827039582222681*^9}, {
  3.827039809953933*^9, 3.8270398113668737`*^9}},
 CellTags->"SetDirectory_templates",
 CellLabel->"In[1]:=",ExpressionUUID->"9705a8fb-9b61-4663-9653-346d1ee7ea12"],

Cell[CellGroupData[{

Cell["Various Definitions", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9, {3.826782766029014*^9, 3.826782770573827*^9}, {
   3.826973387831129*^9, 3.826973390748942*^9}, 
   3.826975093290951*^9},ExpressionUUID->"167854bb-5de8-4f3a-8115-\
e1631bb625d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Subscript", "[", 
    RowBox[{"\[Gamma]0", ",", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"ToString", "/@", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]n", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Subscript", "[", 
    RowBox[{"\[Gamma]1", ",", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"ToString", "/@", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"C1", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Subscript", "[", 
    RowBox[{"C1", ",", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"ToString", "/@", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8269733942654257`*^9, 3.826973473852339*^9}, {
   3.8269940724700527`*^9, 3.8269941049506598`*^9}, {3.827983640023492*^9, 
   3.827983664375759*^9}, {3.827983707480394*^9, 3.827983709137785*^9}, 
   3.8279849645791683`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"0a8ebf0a-3577-4656-83dd-2eab2acc2206"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coefficient functions", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9, {3.826782766029014*^9, 3.826782770573827*^9}, {
   3.826973387831129*^9, 3.826973390748942*^9}, 3.826975093290951*^9, {
   3.827983699634728*^9, 
   3.827983713798818*^9}},ExpressionUUID->"3ef91cd9-199f-4d1f-a813-\
b1e0c3e6f33f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"C1gg", "=", "0"}], ";", 
  RowBox[{
   RowBox[{"C1gq", "[", "nn_", "]"}], ":=", 
   FractionBox["CF", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"nn", "+", "1"}], ")"}]}]]}], ";", 
  RowBox[{"hh1gg", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"11", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}]}]}], ";"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"e4754d1c-9cb5-4293-b9fe-bffa45deba57"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Anomalous Dimensions", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9, {3.826782766029014*^9, 3.826782770573827*^9}, {
   3.826787851444277*^9, 
   3.826787858708789*^9}},ExpressionUUID->"b48f08cb-ec50-48cc-b75d-\
28e46b285f7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"One", " ", "Loop", " ", "Anomalous", " ", 
    RowBox[{"Dimensions", " ", "[", 
     RowBox[{"From", " ", "Bonvini", " ", "thesis"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]Nqq", "[", "nn_", "]"}], ":=", 
     RowBox[{
      FractionBox["CF", "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["3", "2"], "-", 
        FractionBox["1", 
         RowBox[{"nn", "+", "1"}]], "-", 
        FractionBox["1", 
         RowBox[{"nn", "+", "2"}]], "-", 
        RowBox[{"2", 
         RowBox[{"PolyGamma", "[", 
          RowBox[{"nn", "+", "2"}], "]"}]}], "-", 
        RowBox[{"2", "EulerGamma"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]Nqg", "[", "nn_", "]"}], ":=", 
     RowBox[{
      FractionBox["nf", "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"nn", "+", "1"}]], "-", 
        FractionBox["2", 
         RowBox[{"nn", "+", "2"}]], "+", 
        FractionBox["2", 
         RowBox[{"nn", "+", "3"}]]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]Ngq", "[", "nn_", "]"}], ":=", 
     RowBox[{
      FractionBox["CF", "2"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["2", "nn"], "-", 
        FractionBox["2", 
         RowBox[{"nn", "+", "1"}]], "+", 
        FractionBox["1", 
         RowBox[{"nn", "+", "2"}]]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]Ngg", "[", "nn_", "]"}], ":=", 
     RowBox[{
      RowBox[{"CA", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "nn"], "-", 
         FractionBox["1", 
          RowBox[{"nn", "+", "1"}]], "+", 
         FractionBox["1", 
          RowBox[{"nn", "+", "2"}]], "-", 
         FractionBox["1", 
          RowBox[{"nn", "+", "3"}]], "-", 
         RowBox[{"PolyGamma", "[", 
          RowBox[{"nn", "+", "2"}], "]"}], "-", "EulerGamma"}], ")"}]}], "+", 
      "\[Beta]0"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8267878610941133`*^9, 3.8267878890576468`*^9}, {
   3.8267880878879128`*^9, 3.8267881208601007`*^9}, {3.826788233376998*^9, 
   3.826788277030122*^9}, {3.826993500484489*^9, 3.826993740009458*^9}, {
   3.826994154823534*^9, 3.826994173649962*^9}, 3.826995314595791*^9, {
   3.8277590847200203`*^9, 3.827759092803989*^9}, {3.828063949967491*^9, 
   3.828063977741047*^9}, {3.8280645381435547`*^9, 3.828064543178372*^9}, 
   3.828064602708475*^9, {3.828066174199403*^9, 3.828066182508664*^9}, {
   3.828066428154599*^9, 3.828066430320917*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0bd61deb-fa26-4a62-9ae6-7991b8e80256"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"One", " ", "Loop", " ", "Anomalous", " ", 
    RowBox[{"Dimensions", " ", "[", 
     RowBox[{"From", " ", "Vogt", " ", "paper"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sp", "[", 
      RowBox[{"m_", ",", "M_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox["i", 
        RowBox[{"-", "m"}]], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "M"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]NggV", "[", "nn_", "]"}], ":=", 
     RowBox[{
      RowBox[{"CA", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sp", "[", 
          RowBox[{"1", ",", 
           RowBox[{"nn", "-", "2"}]}], "]"}], "-", 
         RowBox[{"2", 
          RowBox[{"Sp", "[", 
           RowBox[{"1", ",", 
            RowBox[{"nn", "-", "1"}]}], "]"}]}], "-", 
         RowBox[{"2", 
          RowBox[{"Sp", "[", 
           RowBox[{"1", ",", 
            RowBox[{"nn", "+", "1"}]}], "]"}]}], "+", 
         RowBox[{"Sp", "[", 
          RowBox[{"1", ",", 
           RowBox[{"nn", "+", "2"}]}], "]"}], "+", 
         RowBox[{"3", 
          RowBox[{"Sp", "[", 
           RowBox[{"1", ",", "nn"}], "]"}]}]}], ")"}]}], "+", "\[Beta]0"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8280661892702208`*^9, 3.828066235320342*^9}, {
  3.828066271777679*^9, 3.8280664037832603`*^9}, {3.828066438828187*^9, 
  3.82806644068372*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"c17655ea-970d-4080-a77f-94758ca94ba2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Numerical", " ", "One", " ", "Loop", " ", "Anomalous", " ", 
    "Dimensions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]N0gg", "[", 
     RowBox[{"n_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{"n", "-", "1"}]], " ", "CA", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "x"], "+", "x", "-", 
           SuperscriptBox["x", "2"], "-", "2"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", 
            RowBox[{"n", "-", "1"}]], "-", "1"}], ")"}], 
         FractionBox["CA", 
          RowBox[{"1", "-", "x"}]]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"WorkingPrecision", "\[Rule]", "12"}], ",", 
       RowBox[{"AccuracyGoal", "\[Rule]", "12"}], ",", 
       RowBox[{"MaxRecursion", "\[Rule]", "20"}]}], "]"}], "+", 
     "\[Beta]0"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.828064586446959*^9, 3.828064638792094*^9}, {
  3.828064671186878*^9, 3.828064819920431*^9}, {3.828065014391564*^9, 
  3.828065025082913*^9}, {3.828065111762669*^9, 3.8280651150953827`*^9}, {
  3.82806522800639*^9, 3.828065288813477*^9}, {3.828067796300324*^9, 
  3.828067819591601*^9}, {3.828068036597931*^9, 3.828068062226379*^9}, {
  3.828068768658168*^9, 3.828068769672324*^9}, {3.828069081289719*^9, 
  3.828069086905707*^9}, {3.828069160613162*^9, 3.828069193444687*^9}, {
  3.828069237702127*^9, 3.828069249899199*^9}, {3.8280705753213577`*^9, 
  3.8280705875105143`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"401dbb38-2ff4-4785-a85c-a10ecda777e9"],

Cell[TextData[{
 "In order to compare ",
 Cell[BoxData[
  FormBox["\[Gamma]Ngg", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "cfe96944-6ad9-45f1-8f2b-d619686b142f"],
 " with ",
 Cell[BoxData[
  FormBox["\[Gamma]N0gg", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e969ff4a-a969-470c-9567-fc6c6e906dd4"],
 " (or with the threshold), it should be noted that ",
 Cell[BoxData[
  FormBox["\[Gamma]N0gg", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2e56537a-c062-4869-bb6b-2d74f253adef"],
 " is shifted by 1, therefore, the correct comparison for a given ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "460dc779-09b9-4a50-ab00-49227ec092dd"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Gamma]N0gg", "(", "N", ")"}], "=", 
    RowBox[{"\[Gamma]Ngg", "(", 
     RowBox[{"N", "-", "1"}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3d4f606e-577b-4e6c-b95a-c3d7d183d0f4"],
 "."
}], "Text",
 CellChangeTimes->{{3.828074513727861*^9, 3.8280746322839537`*^9}, {
  3.828074681255862*^9, 
  3.828074705932806*^9}},ExpressionUUID->"70d59eb6-a38e-42a0-8a6b-\
f21521812d02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Two", " ", "Loops", " ", "Anomalous", " ", 
    RowBox[{"Dimension", " ", "[", 
     RowBox[{
     "Mellin", " ", "form", " ", "can", " ", "only", " ", "be", " ", 
      "computed", " ", "numerically"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]gg", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["2", "3"]}], "nf"}], "+", 
      RowBox[{
       FractionBox["27", "4"], 
       RowBox[{"Zeta", "[", "3", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sp1gg", "[", "x_", "]"}], ":=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"1", "-", "x"}]], 
      RowBox[{"(", 
       RowBox[{"16.75", "-", 
        FractionBox[
         RowBox[{"5", "nf"}], "6"], "-", 
        RowBox[{
         FractionBox["3", "4"], 
         SuperscriptBox["\[Pi]", "2"]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"sp2gg", "[", "x_", "]"}], ":=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"72", "x", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", "1"}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "nf", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "x"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "61"}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "9"}], "+", 
                 RowBox[{"x", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "9"}], "+", 
                    RowBox[{"109", " ", "x"}]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}], "+", 
           RowBox[{"9", " ", "x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "x"}], ")"}]}], " ", 
               RowBox[{"(", 
                RowBox[{"25", "+", 
                 RowBox[{"109", " ", "x"}]}], ")"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Pi]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", "x", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "x", "+", 
                    SuperscriptBox["x", "2"]}], ")"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], "-", 
        RowBox[{"12", " ", "x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "nf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "x"}], ")"}], "2"]}], "+", 
           RowBox[{"27", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "x", "-", 
               SuperscriptBox["x", "2"]}], ")"}], "2"]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"Log", "[", "x", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"108", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "x"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "x"}]}], ")"}], 
             "2"], " ", 
            RowBox[{"Log", "[", 
             RowBox[{"1", "-", "x"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "x"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "x"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"225", "+", 
                 RowBox[{"99", " ", "x", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"4", " ", "x"}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", "nf", " ", 
                  RowBox[{"(", 
                   RowBox[{"9", "+", 
                    RowBox[{"13", " ", "x"}]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{"108", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "x", "+", 
                  SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
               RowBox[{"Log", "[", 
                RowBox[{"1", "+", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"648", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "x", "+", 
            SuperscriptBox["x", "2"]}], ")"}], "2"], " ", 
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", 
           RowBox[{"-", "x"}]}], "]"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]mgg", "[", 
      RowBox[{"n_", "?", "NumericQ"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"n", "-", "1"}]], 
          RowBox[{"sp2gg", "[", "x", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{"n", "-", "1"}]], "-", "1"}], ")"}], 
          RowBox[{"sp1gg", "[", "x", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "+", 
      "\[Delta]gg"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.827113278671586*^9, 3.827113301348783*^9}, {
  3.827113764026958*^9, 3.827113808100054*^9}, {3.827113992661934*^9, 
  3.827113993764226*^9}, {3.827135369273376*^9, 3.82713541778579*^9}, {
  3.827135452088726*^9, 3.82713545387929*^9}, {3.827983514919176*^9, 
  3.827983572935831*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"280698ba-12ff-4cc3-92d4-607d9d974b23"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Large-N limits of the Anomalous Dimensions:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 3.826982720634457*^9}, {3.827235279040455*^9, 
  3.827235290678097*^9}, {3.827236002653586*^9, 
  3.8272360076225967`*^9}},ExpressionUUID->"48fdb9c5-4e42-4bd1-b040-\
748484b31ad7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]gqLargeN", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]qgLargeN", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]ggLargeN", "=", 
    RowBox[{
     RowBox[{"-", "CA"}], 
     RowBox[{"(", 
      RowBox[{"LN", "+", "EulerGamma"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"LN", "=", 
    RowBox[{"Log", "[", "n", "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.827236059675784*^9, 3.827236079031742*^9}, {
  3.827236153355014*^9, 3.827236209506297*^9}, {3.827236504098186*^9, 
  3.827236524633234*^9}, {3.827236648945203*^9, 3.827236649342257*^9}, {
  3.827236727396452*^9, 3.8272367908822803`*^9}, {3.827238093715683*^9, 
  3.82723810005193*^9}, {3.827240549837997*^9, 3.827240555841064*^9}, {
  3.827240684135336*^9, 3.827240702681201*^9}, {3.827759158899104*^9, 
  3.82775915933679*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"dad17c13-c5f8-47a2-82b9-38d4ab7ed2b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["H functions (contain the constant terms when pT\[Rule]0)", \
"Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9},ExpressionUUID->"7ae029ac-440f-4777-b817-\
4766231c4af0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H1", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"g", ",", "a"}], "]"}], 
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"g", ",", "b"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"h1g", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"B1", "+", 
          RowBox[{
           FractionBox["1", "2"], "B1", " ", "LQ"}]}], ")"}], "LQ"}], "-", 
       RowBox[{"pc", " ", "\[Beta]0", " ", "LR"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"g", ",", "a"}], "]"}], 
     RowBox[{"C1", "[", 
      RowBox[{"g", ",", "b"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"g", ",", "b"}], "]"}], 
     RowBox[{"C1", "[", 
      RowBox[{"g", ",", "a"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "a"}], "]"}], 
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"g", ",", "b"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "b"}], "]"}], 
        RowBox[{"\[Gamma]", "[", 
         RowBox[{"g", ",", "a"}], "]"}]}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"LF", "-", "LQ"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H2", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.826775713705885*^9, 3.826775723083069*^9}, {
  3.826775794563634*^9, 3.826775821494261*^9}, {3.826775861786674*^9, 
  3.8267759253302593`*^9}, {3.826775977208521*^9, 3.8267760444729443`*^9}, {
  3.826776088493599*^9, 3.826776165030381*^9}, {3.8267800864794292`*^9, 
  3.82678009408857*^9}, {3.826786664021212*^9, 3.826786671964617*^9}, {
  3.8267898632178307`*^9, 3.8267898639271917`*^9}, {3.826992380741808*^9, 
  3.826992403764237*^9}, {3.827983478513797*^9, 3.827983479904554*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"77876523-1e45-4d79-9965-d0509079e7a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalSigma] functions (contain the singular terms when \
pT\[Rule]0)", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 
  3.826775662219036*^9}},ExpressionUUID->"9210d459-52b8-453f-92eb-\
bb4dfa480bc3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]12", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["A1", "2"]}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"g", ",", "a"}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"g", ",", "b"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]11", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "a"}], "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "b"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"B1", "+", 
         RowBox[{"A1", " ", "LQ"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "a"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"g", ",", "b"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "b"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"g", ",", "a"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]24", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", "A1", ")"}], "2"], "8"], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"g", ",", "a"}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"g", ",", "b"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]23", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "A1"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "3"], "\[Beta]0", " ", 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "a"}], "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "b"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"\[CapitalSigma]11", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]", "[", 
    RowBox[{"m_", ",", "n_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[CapitalSigma]11", "[", 
     RowBox[{"m", ",", "n"}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"m", ",", "a"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"n", ",", "b"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"n", ",", "b"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"m", ",", "a"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]22", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["A1", "2"]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H1", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "-", 
       RowBox[{"\[Beta]0", " ", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "a"}], "]"}], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "b"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"LR", "-", "LQ"}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A2", " ", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "a"}], "]"}], " ", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"g", ",", "b"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"B1", "+", 
          RowBox[{"A1", " ", "LQ"}], "-", "\[Beta]0"}], ")"}], 
        RowBox[{"\[CapitalSigma]11", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Xi]", "[", 
        RowBox[{"g", ",", "g", ",", "a", ",", "b"}], "]"}], "+", 
       RowBox[{"\[Xi]", "[", 
        RowBox[{"g", ",", "q", ",", "a", ",", "b"}], "]"}], "+", 
       RowBox[{"\[Xi]", "[", 
        RowBox[{"q", ",", "g", ",", "a", ",", "b"}], "]"}], "+", 
       RowBox[{"\[Xi]", "[", 
        RowBox[{"q", ",", "q", ",", "a", ",", "b"}], "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]", "[", 
    RowBox[{"m_", ",", "n_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"H1", "[", 
     RowBox[{"m", ",", "n"}], "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"m", ",", "a"}], "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"n", ",", "b"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"B1", "+", 
         RowBox[{"A1", " ", "LQ"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"m", ",", "a"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"n", ",", "b"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"n", ",", "b"}], "]"}], 
       RowBox[{"\[Gamma]", "[", 
        RowBox[{"m", ",", "a"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalSigma]21", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalSigma]11", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "\[Beta]0", 
     RowBox[{"(", 
      RowBox[{"LQ", "-", "LR"}], ")"}]}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Chi]", "[", 
       RowBox[{"g", ",", "g", ",", "a", ",", "b"}], "]"}], "+", 
      RowBox[{"\[Chi]", "[", 
       RowBox[{"g", ",", "q", ",", "a", ",", "b"}], "]"}], "+", 
      RowBox[{"\[Chi]", "[", 
       RowBox[{"q", ",", "g", ",", "a", ",", "b"}], "]"}], "+", 
      RowBox[{"\[Chi]", "[", 
       RowBox[{"q", ",", "q", ",", "a", ",", "b"}], "]"}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "a"}], "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"g", ",", "b"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"B2", "+", 
         RowBox[{"A2", " ", "LQ"}]}], ")"}]}], "-", 
      RowBox[{"\[Beta]0", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"g", ",", "a"}], "]"}], 
          RowBox[{"C1", "[", 
           RowBox[{"g", ",", "b"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"g", ",", "b"}], "]"}], 
          RowBox[{"C1", "[", 
           RowBox[{"g", ",", "a"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"g", ",", "a"}], "]"}], 
          RowBox[{"\[Gamma]n", "[", 
           RowBox[{"g", ",", "b"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"KroneckerDelta", "[", 
           RowBox[{"g", ",", "b"}], "]"}], 
          RowBox[{"\[Gamma]n", "[", 
           RowBox[{"g", ",", "a"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7912680146790123`*^9, 3.791268047201088*^9}, {
   3.79126808598851*^9, 3.791268090418388*^9}, {3.791268149729343*^9, 
   3.791268318887458*^9}, 3.7912683560328693`*^9, {3.791268387733553*^9, 
   3.791268396015605*^9}, {3.791268453173203*^9, 3.791268453426758*^9}, {
   3.7912687607645693`*^9, 3.791268799619454*^9}, {3.7912688310134563`*^9, 
   3.7912688361756*^9}, {3.791268901181983*^9, 3.791269057199025*^9}, {
   3.791269099926186*^9, 3.791269156864284*^9}, {3.79126931016634*^9, 
   3.7912693777797203`*^9}, {3.791269495163733*^9, 3.791269524992525*^9}, {
   3.791269602594758*^9, 3.7912698034442244`*^9}, {3.7912698493212557`*^9, 
   3.791270177445949*^9}, {3.791270230861576*^9, 3.791270285435473*^9}, {
   3.791270330735653*^9, 3.791270356720215*^9}, {3.7912705046361713`*^9, 
   3.791270593558174*^9}, {3.791271377428708*^9, 3.791271380063513*^9}, {
   3.8267817543377953`*^9, 3.826781829377541*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"07d68a33-dd34-4133-8462-29bd1696a6d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Fourier Inverse of Log(\[Chi]) where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Chi]", "=", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox["b", "2"], 
      RowBox[{
       SuperscriptBox["Q", "2"], "/", 
       SuperscriptBox["b0", "2"]}]}]}]}], TraditionalForm]],
  InitializationCell->True,ExpressionUUID->
  "1a34ade8-a5c2-4452-9dc9-c81c09a3e166"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 
  3.826780363133871*^9}},ExpressionUUID->"ac177e9d-edf9-4889-9b52-\
e05134c67649"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IC1", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["b0", "x"]}], 
     RowBox[{"BesselK", "[", 
      RowBox[{"1", ",", 
       RowBox[{"b0", " ", "x"}]}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       FractionBox["pt", "mH"]}], ",", 
      RowBox[{"b0", "\[Rule]", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "EulerGamma"}], "]"}]}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IC2", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "b0"}], "x"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"Log", "[", "x", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["BesselK", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"1", ",", 
         RowBox[{"b0", " ", "x"}]}], "]"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       FractionBox["pt", "mH"]}], ",", 
      RowBox[{"b0", "\[Rule]", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "EulerGamma"}], "]"}]}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IC3", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", "b0"}], "x"]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"], "-", 
          RowBox[{"Zeta", "[", "2", "]"}]}], ")"}]}], "-", 
       RowBox[{"2", 
        RowBox[{
         SuperscriptBox["BesselK", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"1", ",", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"Log", "[", "x", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["BesselK", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"1", ",", 
         RowBox[{"b0", " ", "x"}]}], "]"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       FractionBox["pt", "mH"]}], ",", 
      RowBox[{"b0", "\[Rule]", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "EulerGamma"}], "]"}]}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IC4", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"4", "b0"}], "x"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", " ", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "3"], "-", 
          RowBox[{"3", " ", 
           RowBox[{"Zeta", "[", "2", "]"}], 
           RowBox[{"Log", "[", "x", "]"}]}], "+", 
          RowBox[{"2", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"3", 
        RowBox[{
         SuperscriptBox["BesselK", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"1", ",", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Log", "[", "x", "]"}], "2"], "-", 
          RowBox[{"Zeta", "[", "2", "]"}]}], ")"}]}], "+", 
       RowBox[{"3", 
        RowBox[{
         SuperscriptBox["BesselK", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"1", ",", 
          RowBox[{"b0", " ", "x"}]}], "]"}], 
        RowBox[{"Log", "[", "x", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["BesselK", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"3", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"1", ",", 
         RowBox[{"b0", " ", "x"}]}], "]"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", 
       FractionBox["pt", "mH"]}], ",", 
      RowBox[{"b0", "\[Rule]", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "EulerGamma"}], "]"}]}]}]}], "}"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.826780370011105*^9, 3.826780524513062*^9}, {
  3.8267806816274357`*^9, 3.8267806834590607`*^9}, {3.826780851384306*^9, 
  3.826780863032722*^9}, {3.826780901637658*^9, 3.826781167205944*^9}, {
  3.826788329334374*^9, 3.8267883413022213`*^9}, {3.826974607476489*^9, 
  3.826974607695559*^9}, {3.826974815425825*^9, 3.826974817081341*^9}, {
  3.826995375739154*^9, 3.826995416969507*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"eaa88ba6-9819-4d92-bf25-07f23a0b59f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Fourier Inverse of Log(\[Chi]) where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Chi]", "=", 
    RowBox[{
     SuperscriptBox["b", "2"], 
     RowBox[{
      SuperscriptBox["Q", "2"], "/", 
      SuperscriptBox["b0", "2"]}]}]}], TraditionalForm]],
  InitializationCell->True,ExpressionUUID->
  "2a287adb-4b05-4880-be66-de2172041c60"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}},ExpressionUUID->"ec8797df-a8ce-4e14-9aaf-\
55431b6a2344"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FC1", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      SuperscriptBox["x", "2"]]}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", " ", 
      FractionBox["pt", "mH"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FC2", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", 
       SuperscriptBox["x", "2"]]}], 
     RowBox[{"Log", "[", 
      FractionBox["1", 
       SuperscriptBox["x", "2"]], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", " ", 
      FractionBox["pt", "mH"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FC3", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", 
       SuperscriptBox["x", "2"]]}], 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       FractionBox["1", 
        SuperscriptBox["x", "2"]], "]"}], "2"]}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", " ", 
      FractionBox["pt", "mH"]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FC4", "[", 
    RowBox[{"pt_", ",", "mH_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["4", 
       SuperscriptBox["x", "2"]]}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Log", "[", 
         FractionBox["1", 
          SuperscriptBox["x", "2"]], "]"}], "3"], "-", 
       RowBox[{"4", 
        RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", " ", 
      FractionBox["pt", "mH"]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.826780370011105*^9, 3.826780524513062*^9}, {
  3.8267806816274357`*^9, 3.8267806834590607`*^9}, {3.826780851384306*^9, 
  3.826780863032722*^9}, {3.826780901637658*^9, 3.826781167205944*^9}, {
  3.826781232966085*^9, 3.826781404791602*^9}, {3.8269745918080597`*^9, 
  3.8269745920270643`*^9}, {3.826995194960518*^9, 3.826995234821488*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"662389f0-a41e-4479-bc3f-04a3cf297210"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LO contribution (terms only proportional to \[Alpha]s)", "Subchapter",
 CellChangeTimes->{{3.791270415261487*^9, 3.791270427402686*^9}, {
  3.791273752667684*^9, 3.791273787663987*^9}, {3.8267767197341537`*^9, 
  3.826776727711043*^9}, {3.826974886705041*^9, 3.826974888561879*^9}, {
  3.827983769129311*^9, 3.827983782941884*^9}, {3.827984543899065*^9, 
  3.8279845454908524`*^9}},ExpressionUUID->"2746f9b0-64be-4894-aeda-\
b94cf3da3563"],

Cell["\<\
Here, we are only interested in the LO contribution at small-pt (pt\[Rule]0), \
therefore neglecting all the constant terms in the expansion.\
\>", "Text",
 CellChangeTimes->{{3.827983788840517*^9, 
  3.827983848466444*^9}},ExpressionUUID->"b2ae5d29-770c-4670-bfa5-\
be2225e9964e"],

Cell[CellGroupData[{

Cell["Analytical expression of the coefficients:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 
  3.826982720634457*^9}},ExpressionUUID->"9c6d0b0c-d259-46fb-b2cc-\
20505568dd2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalSigma]12", "[", 
     RowBox[{"g", ",", "g"}], "]"}], ",", 
    RowBox[{
     RowBox[{"\[CapitalSigma]11", "[", 
      RowBox[{"g", ",", "g"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"B1", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"-", "2"}], "\[Beta]0"}]}], "}"}]}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"Coefficients", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{"LC2", ",", "LC1"}], "}"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8269827498666162`*^9, 3.826982780185812*^9}, {
   3.827982427118257*^9, 3.827982436506675*^9}, 3.827982471111291*^9, {
   3.82798422657983*^9, 3.82798422682026*^9}, {3.8279842574918547`*^9, 
   3.827984270043408*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"1ccd3872-b1b0-40fb-8c8b-c881f3b23908"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["A1", "2"]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
    RowBox[{"2", " ", "\[Beta]0"}], "-", 
    RowBox[{"2", " ", 
     SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.826982781373499*^9, 3.827982441262499*^9, 
  3.827982472797635*^9, 3.827984900786828*^9, 3.82798497914771*^9, 
  3.827986130956717*^9, 3.827988026801734*^9, 3.8280242421516933`*^9, 
  3.828064046967471*^9, 3.828071564288965*^9, 3.828075098093361*^9, 
  3.828086660687694*^9, 3.828154000757124*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"fd3a5c96-e009-4ed2-a107-f5780d707575"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LO terms:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 3.826982720634457*^9}, {3.827984644527821*^9, 
  3.8279846457435913`*^9}},ExpressionUUID->"db706cb9-d6ca-4c83-a914-\
ef5a224a8bce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Normalized", " ", "cross"}], "-", "section"}], ",", " ", 
    RowBox[{"ie", " ", "divided", " ", "by", " ", "\[Sigma]0"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d\[Sigma]LO", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalSigma]12", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC2"}], "+", 
      RowBox[{
       RowBox[{"\[CapitalSigma]11", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC1"}]}], 
     RowBox[{"(*", 
      RowBox[{"+", 
       RowBox[{"H1", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], "*)"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"c_", ",", "d_"}], "]"}], "\[RuleDelayed]", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"c", "===", "d"}], ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Alpha]sp", "=", 
    RowBox[{"\[Alpha]s", "/", "\[Pi]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.827983994279335*^9, 3.827984022496647*^9}, {
   3.827984139029344*^9, 3.8279841601784286`*^9}, 3.8279842368530416`*^9, {
   3.827984477079921*^9, 3.827984488040373*^9}, {3.827985105448168*^9, 
   3.827985107568186*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"e8c596fd-7a8c-461d-9df3-87595da6b28a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"d\[Sigma]LO", "[", 
    RowBox[{"g", ",", "g"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"LC2", ",", "LC1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.827984288987938*^9, 3.8279843211315527`*^9}, {
   3.827984493032954*^9, 3.827984493386877*^9}, {3.827984805394611*^9, 
   3.82798480557092*^9}, 3.827985135321423*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"74456c2f-a0d4-4723-b8ac-f1c29a3f1d71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"A1", " ", "LC2"}], "2"]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B1"}], "-", 
     RowBox[{"A1", " ", "LQ"}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.8279849869863863`*^9, {3.827985110641268*^9, 3.827985136092148*^9}, 
   3.8279861312230597`*^9, 3.827988026936483*^9, 3.8280242422957287`*^9, 
   3.828064050700014*^9, 3.8280715643876657`*^9, 3.8280750984336863`*^9, 
   3.828086660801156*^9, 3.828154001275793*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"646cb057-e63a-473b-9fbe-2ab1fe8fcb10"]
}, Open  ]],

Cell["\<\
Since we are mainly interested in the pt-enhanced terms that are not \
multiplied by ln(N), as they are already contained in the threshold \
resummation, we can get rid of all the N-dependence which are contained in \
the Anomalous Dimensions.\
\>", "Text",
 CellChangeTimes->{{3.827984349039084*^9, 
  3.827984439336833*^9}},ExpressionUUID->"b944299d-38b2-42bd-9b51-\
e70b83bd7e06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d\[Sigma]LOptNoLogN", "=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"d\[Sigma]LO", "[", 
      RowBox[{"g", ",", "g"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"LC2", ",", "LC1"}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"q", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]1", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.827984455955809*^9, 3.8279844722892427`*^9}, {
   3.8279845052974463`*^9, 3.827984508302514*^9}, 3.8279851413512897`*^9, {
   3.8279859975315647`*^9, 3.827986016860207*^9}, {3.827986056060869*^9, 
   3.82798605868987*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"97a1d70c-2f3a-4940-81c3-01f74e76ae0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"A1", " ", "LC2"}], "2"]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B1"}], "-", 
     RowBox[{"A1", " ", "LQ"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.827984992475318*^9, {3.827985113799646*^9, 3.827985141833295*^9}, 
   3.82798613142544*^9, 3.827988027037271*^9, 3.828024242387192*^9, 
   3.828064052847768*^9, 3.828071564477468*^9, 3.8280750987743053`*^9, 
   3.828086660871975*^9, 3.828154001437492*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"29535477-88f8-4808-94a1-0bd262da5bf4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "NLO contribution (terms only proportional to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Alpha]s", "2"], TraditionalForm]],ExpressionUUID->
  "af596781-5c11-431e-8174-d1df3a363968"],
 ")"
}], "Subchapter",
 CellChangeTimes->{{3.791270415261487*^9, 3.791270427402686*^9}, {
  3.791273752667684*^9, 3.791273787663987*^9}, {3.8267767197341537`*^9, 
  3.826776727711043*^9}, {3.826974886705041*^9, 3.826974888561879*^9}, {
  3.827983769129311*^9, 3.827983782941884*^9}, {3.82798453614303*^9, 
  3.827984558329095*^9}},ExpressionUUID->"97202fa2-8cf3-4e35-96ca-\
a8229abead53"],

Cell["\<\
Similarly, here, we are only interested in the LO contribution at small-pt \
(pt\[Rule]0), therefore neglecting all the constant terms in the expansion.\
\>", "Text",
 CellChangeTimes->{{3.827983788840517*^9, 3.827983848466444*^9}, {
  3.8279845740619802`*^9, 
  3.82798458230422*^9}},ExpressionUUID->"d1b9555e-521a-4864-a888-\
6b109a5be4f5"],

Cell[CellGroupData[{

Cell["Analytical expression of the coefficients:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 
  3.826982720634457*^9}},ExpressionUUID->"1f4dfc05-3fa3-4aa6-a561-\
1de1b7034331"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalSigma]24", "[", 
     RowBox[{"g", ",", "g"}], "]"}], ",", 
    RowBox[{"\[CapitalSigma]23", "[", 
     RowBox[{"g", ",", "g"}], "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"c_", ",", "d_"}], "]"}], "\[RuleDelayed]", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "===", "d"}], ",", "1", ",", "0"}], "]"}]}], ",", 
    RowBox[{"B1", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Beta]0"}]}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"Coefficients", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{"LC4", ",", "LC3"}], "}"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8279846745795*^9, 3.82798469208045*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"fa63a39d-ce82-4e48-ac3a-683662a1d1f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SuperscriptBox["A1", "2"], "8"], ",", 
   RowBox[{
    RowBox[{"-", "A1"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["\[Beta]0", "3"], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
         RowBox[{"2", " ", "\[Beta]0"}], "-", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.827985003097816*^9, 3.827986131881753*^9, 
  3.827988027155488*^9, 3.828024242397357*^9, 3.8280640608151417`*^9, 
  3.828071564568618*^9, 3.8280750991576157`*^9, 3.828086660954297*^9, 
  3.828154001547797*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"15ab1190-2681-400c-8e77-35276b4ccb91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[CapitalSigma]22", "[", 
     RowBox[{"g", ",", "g"}], "]"}], ",", 
    RowBox[{"\[CapitalSigma]21", "[", 
     RowBox[{"g", ",", "g"}], "]"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"c_", ",", "d_"}], "]"}], "\[RuleDelayed]", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"c", "===", "d"}], ",", "1", ",", "0"}], "]"}]}], ",", 
    RowBox[{"B1", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Beta]0"}]}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"Coefficients", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{"LC2", ",", "LC1"}], "}"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.827984666277828*^9, 3.827984684705163*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"a19841ae-50b7-4894-8c7e-b5aaa1a0a6af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "A2"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"A1", " ", "LQ"}], "-", 
          RowBox[{"3", " ", "\[Beta]0"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
          RowBox[{"2", " ", "\[Beta]0"}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], 
    "-", 
    RowBox[{
     FractionBox["1", "2"], " ", "A1", " ", 
     RowBox[{"(", 
      RowBox[{"h1g", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "LQ"}], "+", "LR"}], ")"}], " ", "\[Beta]0"}], "-", 
       RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "-", 
       RowBox[{"LQ", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Beta]0"}], "-", 
          RowBox[{"LQ", " ", "\[Beta]0"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"LF", "-", "LQ"}], ")"}], " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
          RowBox[{"2", " ", "\[Beta]0"}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}], " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Gamma]0", "\<\"gq\"\>"], " ", 
        SubscriptBox["\[Gamma]0", "\<\"qg\"\>"]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "B2"}], "-", 
    RowBox[{"A2", " ", "LQ"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LQ", "-", "LR"}], ")"}], " ", "\[Beta]0", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "A1"}], " ", "LQ"}], "+", 
       RowBox[{"2", " ", "\[Beta]0"}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A1", " ", "LQ"}], "-", 
       RowBox[{"2", " ", "\[Beta]0"}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"h1g", "-", 
       RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "-", 
       RowBox[{"LQ", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Beta]0"}], "-", 
          RowBox[{"LQ", " ", "\[Beta]0"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"LF", "-", "LQ"}], ")"}], " ", 
        SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["C1", "\<\"gq\"\>"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"LF", "-", "LQ"}], ")"}], " ", 
        SubscriptBox["\[Gamma]0", "\<\"gq\"\>"]}]}], ")"}], " ", 
     SubscriptBox["\[Gamma]0", "\<\"qg\"\>"]}], "+", 
    RowBox[{"\[Beta]0", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Gamma]1", "\<\"gg\"\>"]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.827985006319038*^9, 3.827986132131612*^9, 
  3.827988027320739*^9, 3.828024242481488*^9, 3.82806406290476*^9, 
  3.828071564659916*^9, 3.828075099492996*^9, 3.828086661031187*^9, 
  3.828154001565658*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"3e8d6c61-fac9-459f-bb44-f8031871cab7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["NLO terms:", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775662219036*^9}, {
  3.8267802742912073`*^9, 3.826780363133871*^9}, {3.82678121933877*^9, 
  3.8267812211067667`*^9}, {3.8269749481345243`*^9, 3.826975028812332*^9}, {
  3.826982711418419*^9, 3.826982720634457*^9}, {3.827984712607354*^9, 
  3.827984714331491*^9}},ExpressionUUID->"7045abb6-3a88-4c10-a946-\
3a6b3c5a7aba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Normalized", " ", "cross"}], "-", "section"}], ",", " ", 
    RowBox[{"ie", " ", "divided", " ", "by", " ", "\[Sigma]0"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d\[Sigma]NLO", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalSigma]24", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC4"}], "+", 
      RowBox[{
       RowBox[{"\[CapitalSigma]23", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC3"}], "+", 
      RowBox[{
       RowBox[{"\[CapitalSigma]22", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "LC2"}], "+", 
      RowBox[{
       RowBox[{"\[CapitalSigma]21", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "LC1"}]}], 
     RowBox[{"(*", 
      RowBox[{"+", 
       RowBox[{"H2", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], "*)"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"c_", ",", "d_"}], "]"}], "\[RuleDelayed]", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"c", "===", "d"}], ",", "1", ",", "0"}], "]"}]}], "}"}]}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Alpha]sp", "=", 
    RowBox[{"\[Alpha]s", "/", "\[Pi]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8279847395681553`*^9, 3.827984776315295*^9}, {
  3.827984840490486*^9, 3.827984840707142*^9}, {3.827985023354673*^9, 
  3.8279850269771214`*^9}, {3.82798512210822*^9, 3.827985123739889*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"7291e729-0948-4f54-8d7d-b3026f2431d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"d\[Sigma]NLO", "[", 
     RowBox[{"g", ",", "g"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LR", "\[Rule]", " ", "0"}], ",", 
      RowBox[{"LF", "\[Rule]", " ", "0"}], ",", 
      RowBox[{"LQ", "\[Rule]", " ", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"LC4", ",", "LC3", ",", "LC2", ",", "LC1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827984798787673*^9, 3.827984819205208*^9}, 
   3.8279851544798117`*^9, {3.828075127496994*^9, 3.828075140463615*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"e296e103-b8c9-441d-b6fc-2cb2d74ed6ac"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["A1", "2"], " ", "LC4"}], "8"], "-", 
  RowBox[{"A1", " ", "LC3", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["\[Beta]0", "3"], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "B1"}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"LC2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", "A1", " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"B1", "-", "\[Beta]0"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "B1"}], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "B1"}], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}], " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gq\"\>"], " ", 
         SubscriptBox["\[Gamma]0", "\<\"qg\"\>"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B2"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"h1g", "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"B1", "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "-", 
     RowBox[{"2", " ", 
      SubscriptBox["C1", "\<\"gq\"\>"], " ", 
      SubscriptBox["\[Gamma]0", "\<\"qg\"\>"]}], "+", 
     RowBox[{"\[Beta]0", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]1", "\<\"gg\"\>"]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.827985029264091*^9, {3.82798512789573*^9, 3.827985155317519*^9}, 
   3.827986132524961*^9, 3.827988027433313*^9, 3.828024242605648*^9, 
   3.828064070998879*^9, 3.828071564786559*^9, {3.8280751004304657`*^9, 
   3.8280751099315*^9}, 3.828075141454146*^9, 3.8280866611211*^9, 
   3.8281540017031403`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"e9fe4247-aa4f-4ea8-a897-6e6e83ade37e"]
}, Open  ]],

Cell["\<\
As before, since we are mainly interested in the pt-enhanced terms that are \
not multiplied by ln(N), as they are already contained in the threshold \
resummation, we can get rid of all the N-dependence which are contained in \
the Anomalous Dimensions.\
\>", "Text",
 CellChangeTimes->{{3.827984349039084*^9, 3.827984439336833*^9}, {
  3.827985302104463*^9, 3.827985304998661*^9}, {3.827985357721251*^9, 
  3.827985361544278*^9}},ExpressionUUID->"6864e869-8f44-46f8-b989-\
da28ba091bd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d\[Sigma]NLOptNoLogN", "=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{"d\[Sigma]NLO", "[", 
      RowBox[{"g", ",", "g"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"LC4", ",", "LC3", ",", "LC2", ",", "LC1"}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"q", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]1", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{
  3.827984832733811*^9, 3.827985162346025*^9, {3.827986030722188*^9, 
   3.827986066887644*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"68f25eaf-b310-4542-9cb6-d3589b66e901"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["A1", "2"], " ", "LC4"}], "8"], "-", 
  RowBox[{"A1", " ", "LC3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "B1"}], "-", 
        RowBox[{"A1", " ", "LQ"}]}], ")"}]}], "+", 
     FractionBox["\[Beta]0", "3"]}], ")"}]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B2"}], "-", 
     RowBox[{"A2", " ", "LQ"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "B1"}], "-", 
        RowBox[{"A1", " ", "LQ"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"LQ", "-", "LR"}], ")"}], " ", "\[Beta]0"}], "+", 
     RowBox[{"2", " ", "\[Beta]0", " ", 
      SubscriptBox["C1", "\<\"gg\"\>"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"B1", "+", 
        RowBox[{"A1", " ", "LQ"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "-", 
        RowBox[{"LQ", " ", 
         RowBox[{"(", 
          RowBox[{"B1", "+", 
           FractionBox[
            RowBox[{"B1", " ", "LQ"}], "2"]}], ")"}]}], "-", 
        RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"LC2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "B1"}], "-", 
           RowBox[{"A1", " ", "LQ"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"B1", "+", 
           RowBox[{"A1", " ", "LQ"}], "-", "\[Beta]0"}], ")"}]}]}], ")"}]}], 
     "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "A1", " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "-", 
        RowBox[{"LQ", " ", 
         RowBox[{"(", 
          RowBox[{"B1", "+", 
           FractionBox[
            RowBox[{"B1", " ", "LQ"}], "2"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "LQ"}], "+", "LR"}], ")"}], " ", "\[Beta]0"}], "-", 
        RowBox[{"LR", " ", "pc", " ", "\[Beta]0"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}]}]], "Output",\

 CellChangeTimes->{3.82798503206243*^9, 3.827985163138191*^9, 
  3.827986132863443*^9, 3.8279880275522623`*^9, 3.828024242691469*^9, 
  3.828064074992897*^9, 3.8280715649444637`*^9, 3.828075100851288*^9, 
  3.828086661198551*^9, 3.8281540017922783`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"e5c597c6-c245-4daf-aa03-d77cc692fa1f"]
}, Open  ]],

Cell["\<\
The term above is what should be supplemented to the threshold resummation at \
NLO.\
\>", "Text",
 CellChangeTimes->{{3.827985233647296*^9, 3.827985255922577*^9}, {
  3.827985616081546*^9, 
  3.827985617650538*^9}},ExpressionUUID->"db458672-38b8-45a3-836b-\
f14d8c4a4f98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"In", " ", "case", " ", "LR"}], "=", 
    RowBox[{"LF", "=", 
     RowBox[{"LQ", "=", "mH"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"d\[Sigma]NLO", "[", 
       RowBox[{"g", ",", "g"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"LC4", ",", "LC3", ",", "LC2", ",", "LC1"}], "}"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Gamma]0", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"ToString", "/@", 
           RowBox[{"{", 
            RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
       "0"}], ",", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Gamma]0", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"ToString", "/@", 
           RowBox[{"{", 
            RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
       "0"}], ",", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Gamma]0", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"ToString", "/@", 
           RowBox[{"{", 
            RowBox[{"q", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
       "0"}], ",", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Gamma]1", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"ToString", "/@", 
           RowBox[{"{", 
            RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
       "0"}]}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LR", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"LF", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"LQ", "\[Rule]", " ", "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8279854075724688`*^9, 3.827985444365005*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"cf0f77e0-6352-480f-95df-0766e6d49583"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["A1", "2"], " ", "LC4"}], "8"], "-", 
  RowBox[{"A1", " ", "LC3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["B1", "2"]}], "+", 
     FractionBox["\[Beta]0", "3"]}], ")"}]}], "+", 
  RowBox[{"LC2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A2"}], "+", 
        RowBox[{"B1", " ", 
         RowBox[{"(", 
          RowBox[{"B1", "-", "\[Beta]0"}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "A1", " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B2"}], "+", 
     RowBox[{"2", " ", "\[Beta]0", " ", 
      SubscriptBox["C1", "\<\"gg\"\>"]}], "-", 
     RowBox[{"B1", " ", 
      RowBox[{"(", 
       RowBox[{"h1g", "+", 
        RowBox[{"2", " ", 
         SubscriptBox["C1", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}]}]], "Output",\

 CellChangeTimes->{3.82798544569143*^9, 3.827986133063682*^9, 
  3.827988027655478*^9, 3.828024242788568*^9, 3.828064077082984*^9, 
  3.828071565129127*^9, 3.828075101268396*^9, 3.828086661276*^9, 
  3.828154001877212*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"1de11fd0-9c47-4444-8944-4dab768dd287"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Checks", "Chapter",
 CellChangeTimes->{{3.827985475320418*^9, 
  3.8279854830330467`*^9}},ExpressionUUID->"9dd1118e-b5d6-495c-8f80-\
f810cd3bac8c"],

Cell["\<\
Here, as a proof of concept, we check that in the small-pt limit, the results \
of the expansion agree with the C++ implementation.\
\>", "Text",
 CellChangeTimes->{{3.827985547885682*^9, 
  3.827985587865448*^9}},ExpressionUUID->"6ff47465-d2ac-435f-9026-\
f7a1b4d2ddb1"],

Cell[CellGroupData[{

Cell["Physical constants", "Subsubsection",
 CellChangeTimes->{{3.826775625142969*^9, 3.826775699623632*^9}, 
   3.826776602240675*^9, {3.826782766029014*^9, 
   3.826782770573827*^9}},ExpressionUUID->"2ea164ed-14e4-45ca-8c8a-\
5ba75f19bbc5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GF", "=", 
    RowBox[{"1.166378", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]]}]}], ";", 
   RowBox[{"GevtoPb", "=", 
    RowBox[{"3.8937966", " ", 
     SuperscriptBox["10", "8"]}]}], ";"}], " ", 
  RowBox[{"(*", "constants", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nf", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "active", " ", "flavours"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CA", "=", 
    RowBox[{"nc", "=", "3"}]}], ";", 
   RowBox[{"CF", "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["nc", "2"], "-", "1"}], 
     RowBox[{"2", "nc"}]]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Casimir", " ", "Operators"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]0", "=", 
    RowBox[{
     FractionBox["1", "12"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"11", " ", "CA"}], "-", 
       RowBox[{"2", "nf"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Beta", " ", 
    RowBox[{"functions", " ", "[", 
     RowBox[{"According", " ", "to", " ", 
      RowBox[{"Bozzi", "'"}], "s", " ", "definition"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Sigma]0", "[", "\[Alpha]_", "]"}], ":=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SqrtBox["2"], "GF"}], 
     RowBox[{"576", "\[Pi]"}]]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Born", " ", "level", " ", "cross"}], "-", 
    RowBox[{"section", " ", "\[Sigma]0"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Coeff", ".", " ", "Cusp"}], " ", "Anomalous", " ", 
    "Dimensions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1g", "=", "CA"}], ";", 
  RowBox[{"B1g", "=", 
   RowBox[{
    RowBox[{"-", "2"}], "\[Beta]0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2g", "=", 
   RowBox[{
    FractionBox["CA", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"CA", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["67", "18"], "-", 
         RowBox[{"Zeta", "[", "2", "]"}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["5", "9"], "nf"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B2g", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"16", " ", 
       SuperscriptBox["\[Pi]", "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["64", "3"]}], "-", 
          RowBox[{"24", " ", 
           RowBox[{"Zeta", "[", "3", "]"}]}]}], ")"}], 
        SuperscriptBox["CA", "2"]}], "+", 
       RowBox[{
        FractionBox["16", "3"], "nf", " ", "CA"}], "+", 
       RowBox[{"4", " ", "nf", " ", "CF"}]}], ")"}]}], "+", 
    RowBox[{"\[Beta]0", 
     FractionBox["CA", "\[Pi]"], " ", 
     RowBox[{"Zeta", "[", "2", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]s", "=", "0.11264"}], ";", 
  RowBox[{"mH", "=", "125"}], ";", 
  RowBox[{"\[Mu]F", "=", "125"}], ";", 
  RowBox[{"\[Mu]R", "=", "125"}], ";", 
  RowBox[{"Q", "=", "125"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LRR", "=", 
   RowBox[{"Log", "[", 
    FractionBox[
     SuperscriptBox["mH", "2"], 
     SuperscriptBox["\[Mu]R", "2"]], "]"}]}], ";", 
  RowBox[{"LFF", "=", 
   RowBox[{"Log", "[", 
    FractionBox[
     SuperscriptBox["mH", "2"], 
     SuperscriptBox["\[Mu]F", "2"]], "]"}]}], ";", 
  RowBox[{"LQ2", "=", 
   RowBox[{"Log", "[", 
    FractionBox[
     SuperscriptBox["mH", "2"], 
     SuperscriptBox["Q", "2"]], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "3"}], 
  RowBox[{"(*", 
   RowBox[{"Mellin", " ", "Moment"}], "*)"}], ";", " ", 
  RowBox[{"PT", "=", "10"}], 
  RowBox[{"(*", 
   RowBox[{"pt", " ", "value", " ", "in", " ", "GeV"}], "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "above", " ", "definitions", " ", "should", " ", "always", " ",
     "be", " ", "the", " ", "same", " ", "as", " ", "in", " ", "the", " ", 
    "input", " ", "card", " ", "for", " ", 
    RowBox[{"C", "++"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.82678279271395*^9, 3.8267828033218937`*^9}, {
   3.826783014418295*^9, 3.8267831377126017`*^9}, {3.826791850216086*^9, 
   3.826791850469602*^9}, {3.826975077094997*^9, 3.826975167580564*^9}, {
   3.826975346967696*^9, 3.826975364149468*^9}, {3.82697545618328*^9, 
   3.8269754960679007`*^9}, {3.82699305813076*^9, 3.826993075165612*^9}, {
   3.826993955978298*^9, 3.826993993674025*^9}, {3.827135324989147*^9, 
   3.827135328052752*^9}, {3.8271377279019003`*^9, 3.8271378482300453`*^9}, {
   3.827137899225215*^9, 3.827137961353134*^9}, 3.82775754725148*^9, {
   3.8279347313397837`*^9, 3.827934743810484*^9}, {3.82793624564609*^9, 
   3.827936331435087*^9}, {3.8279363627536573`*^9, 3.8279363691228237`*^9}, {
   3.827936476968811*^9, 3.827936484850709*^9}, {3.827986270198565*^9, 
   3.827986683085897*^9}, {3.827986721389894*^9, 3.827986785024728*^9}, 
   3.8279869814505863`*^9, {3.8279871456077223`*^9, 3.827987146534411*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"190374a7-13e5-419a-b279-0c97639975f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LO contribution (terms only proportional to \[Alpha]s)", "Subchapter",
 CellChangeTimes->{{3.791270415261487*^9, 3.791270427402686*^9}, {
  3.791273752667684*^9, 3.791273787663987*^9}, {3.8267767197341537`*^9, 
  3.826776727711043*^9}, {3.826974886705041*^9, 3.826974888561879*^9}, {
  3.827983769129311*^9, 3.827983782941884*^9}, {3.827984543899065*^9, 
  3.8279845454908524`*^9}},ExpressionUUID->"896b0713-7cac-4a11-a18e-\
1df33c979f46"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Num\[CapitalSigma]LO", "[", 
    RowBox[{"n_", ",", "pt_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox["\[Alpha]s", "\[Pi]"], ")"}], 
        FractionBox[
         RowBox[{"2", " ", "pt"}], 
         SuperscriptBox["mH", "2"]], " ", 
        RowBox[{"(", "GevtoPb", ")"}], 
        RowBox[{"\[Sigma]0", "[", "\[Alpha]s", "]"}], 
        RowBox[{"d\[Sigma]LO", "[", 
         RowBox[{"g", ",", "g"}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LC1", "\[Rule]", " ", 
          RowBox[{"FC1", "[", 
           RowBox[{"pt", ",", "mH"}], "]"}]}], ",", 
         RowBox[{"LC2", "\[Rule]", " ", 
          RowBox[{"FC2", "[", 
           RowBox[{"pt", ",", "mH"}], "]"}]}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Subscript", "[", 
         RowBox[{"\[Gamma]0", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"ToString", "/@", 
            RowBox[{"{", 
             RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
        RowBox[{"\[Gamma]Ngg", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], "}"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A1", "\[Rule]", " ", "A1g"}], ",", 
       RowBox[{"B1", "\[Rule]", " ", "B1g"}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LR", "\[Rule]", " ", "LRR"}], ",", 
      RowBox[{"LF", "\[Rule]", "LFF"}], ",", 
      RowBox[{"LQ", "\[Rule]", " ", "LQ2"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827986941411737*^9, 3.8279869910575857`*^9}, {
   3.827987031854732*^9, 3.827987037528483*^9}, {3.827987115578104*^9, 
   3.827987157845529*^9}, {3.8279872005200768`*^9, 3.827987207895186*^9}, {
   3.827987270015131*^9, 3.827987315395073*^9}, {3.8279874888587933`*^9, 
   3.827987490232238*^9}, {3.827988050815442*^9, 3.827988057466384*^9}, {
   3.827988487482643*^9, 3.827988488406187*^9}, {3.827988540023767*^9, 
   3.8279885475549583`*^9}, 3.8279916830712233`*^9, {3.8279921326029654`*^9, 
   3.8279921412673283`*^9}, {3.828071441274131*^9, 3.828071445468645*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"3abb2ffd-6603-4747-bea0-1f94b16085dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssLOaspt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pt", ",", 
       RowBox[{"Num\[CapitalSigma]LO", "[", 
        RowBox[{"NN", ",", "pt"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"pt", ",", "1", ",", "20", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<./datfiles/cssLOaspt.dat\>\"", ",", "cssLOaspt", ",", 
    "\"\<Table\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.827988136169176*^9, 3.8279881449674063`*^9}, {
  3.827988177644477*^9, 3.8279881991445704`*^9}, {3.8279888930248137`*^9, 
  3.827988941809746*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"b81b597a-3a65-4f3b-8b1b-5c763206306f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./datfiles/cssLOaspt.dat\>\"", ",", "\"\<Table\>\""}], 
      "]"}], ",", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<./datfiles/morepoints_smallpt_LO_gg_channel.dat\>\"", ",", 
       "\"\<Table\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<CSS-LO\>\"", ",", "\"\<LO-HpT-MON\>\""}], "}"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "10"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<N=3\>\""}], ",", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.7"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<d\[Sigma]/dpT\>\"", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<pT\>\"", ",", " ", "\"\<LO Contribution\>\""}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827988229265129*^9, 3.827988269453752*^9}, {
  3.827988301556212*^9, 3.8279883842522383`*^9}, {3.82798842859875*^9, 
  3.827988451181532*^9}, {3.827988884609825*^9, 3.8279888850591297`*^9}, {
  3.827992699642165*^9, 3.8279926997902727`*^9}, {3.827993669892993*^9, 
  3.827993684518363*^9}, {3.827993718240993*^9, 3.827993737060458*^9}, {
  3.828072029999991*^9, 3.828072033865115*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"4d27eb41-affe-437e-85ba-0f044ad9a6f0"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large], 
        LineBox[CompressedData["
1:eJws23c8le8fx3Gb7L3HsR3zaCjzfOy9V/bem6KQCImUREVDSkRpTy3tvZf2
0J5UUkr1O7+vt396eJzjPvd1va7nfd1Oh2Z8TkASDxcXV5YgF9f//534Gmav
EJ6ZNufRDjYzsuHkd4NhNjvgfPqu/B3sgIPq1R/8h9kKW4efWIvsYJfIbnd9
XjzMNpc568rftZ29KddWeKBjmC0bZv76t8N29pXL//8aZpeZbNgpPriNPWrw
/wMOs7NeGHiYVG5ja3COdlD9C/txrtYvV71tbLfnxZwjfmFX//TY5Hupl533
/8PlfmG/uux/Ylp+L3t16/+/vrBDZ98M/ajcyz71/f8H/MLWv7T7e9KZreyP
/v8/wS/s3DNPelbkbWX/d3qyX9nK3JF/szW2su3+fzjbr+zL83d8fXV1Czv5
v6+v7JWly0Y/z9/C/v9oIxu+svsaX7wsm7yF/d9wD35lLzo+9rfudQ/7v9N7
/pXtYyXxVmhtD/u/wwl/Y4dKC2z4HNDDnvLf1zd2g2NY1WSRHvZ/0xf5jT1t
j5PDpdPd7P+GW/2N/VRK4/GO+d3s/05v+zd25O7BzgHrbvZ/hxv4xl7QNjjD
amwze6LHCPtkTE/xtQOb0WOEfVH5X3ND0Wb0GGE/OiM7kj9jM3qMsE8n3nTM
/9WFHiPsWaEuWQuPdqHHCJvr7ZTm7oou9Bhhu8b1y9506UKP72xvGYuKcdEu
9PjOfnVyeL3m7U70+M7+ouybZr22Ez04j1+4yO+U1Mn+b/pOfme7iWpenmbW
iR7f2WcKG9kivzahxyhb5RVLvP/MJvQYZYtX+kp4Ld+EHqNs4e/D9ttiNrGX
/XfAUfaCPcGXHptsQo9R9udDzd/vjXegxyh7+KiT6erLHejxg/1WZiq/2roO
9PjBHuw2NYrK7kCPH+xOuxu5IdSBHj/Y/0LTzvDJdKDHDzbL/Pm0xNcb0eMH
ey3rwIfcQxvR4ydbzJHLWL9hI3r8ZC9smxVSmbgRPX6y32UtfFlhtRE9frK1
P1ekakhtRI+fbNX6/fUz325Aj5/s1S3d0obHN6DHT/ZjY8+by1o2oMcY+9pT
+77avA3oMcbm/sK8KOW5gf3f4XLH2JOa3qvo6W5AjzH2dF7R+6f+taPHGFtL
U4799kE7eoyxRWyG1i3b344ev9hi131DDy1vR49f7Nxh/SfxOe3o8Yv9QUNp
f41XO3r8YmeFD+XrGbajxy/2AgXGQRuhdvbgfz1+sUXV1uYuu7IePX6z9aQ7
0pYsXs+e+l+P3+xmnbpfGR7r0eM3+/lm4yf6wuvR4zc7692090cutqHHb7b8
6gBx/fo29PjN7m1KC4z3aUOPcfZY78MH6VJt6DHO9gu4+Njmzjr0GGd7rU3s
vd26Dj3G2Y83WG0zjVmHHuNsjTMrI11116HHOFv42CNPlY9r0WOc3WXwmbF5
z1r0+MM+Ht284k3JWvT4w/6XMlR432ktevxhz73ybtNc8bXo8Yf9V2OX1Jl7
a9DjD3s5z5QTBzvWoMcf9rX6tvP+OWvQ4y971oN33kus16DHX3bs+oiaVKE1
6PGX7dmqePjZndXo8Ze9tm+v3beO1ejxl6388lzhuvzV6PGXfVZj4d1H9qvR
4x+7Vyni6Xap1ejxj33n/iKG1GArevxjH6m/YMG9pxU9/rFlnEYulVa1osc/
9uamTSsrQlrR4x974dDLMDFmK3pwkePuhy/VxlswHi76sbtYete1FvThospA
8wunO1owPi4aGm7/FTKnBb246Or6wI4k7xaMl4ueMWZf/KzVgn5cpDC2pGL4
5yqMn4tGV9PL1Gur0JOL/i0RUgzpWoX54KKSyt+e++etQl8uknOtP1gTvArz
w0WRJb7rz5usQm/O+Umf9CgSWIX54qYps6TElz9dif7cZOHwykmhbyXmj5s+
bjMM5G9aifXATcn+zzeFZ63EfHLTk7J32+TcVmJ9cNOeX7feTdVeifnlphUy
ex7u/7sC64Wbzot9Elv9YAXmm5te3pGQfrx/BdYPN8340lle1rQC889Nfe2i
Y6W5K7CeuCnbxFNzwHsFevCQWNCHzsVGK9CDh0LO3bRsnbQCPXjoUr/ayr9v
mtGDhzqX/Zp76GwzevBQueXCLZc6m9GDh7g/9XxlVTejBw89qhrTepfYjB48
1PVwudQ3p2b04ByP/2+rt24zevBQWJz4uh/8zejBQz1zT3MNv25CDx46uJu1
c9r5JvTgoSOHQ9ac62lCD14q75c6sGlxE3rwkpTP2PilrCb04KWvYy4ZNn5N
6MFLXh1H+L5PbkIPXgrOXHx9RK4JPXgpx9/6gdXYcvTgpWWxTeZnHy1HD176
Vrfg/Yrjy9GDl56LTlLr2bQcPXjpWLLWq7+LlqMHL219sSN+ZdZy9OClKT0J
fdkBy9GDj7y8eiVrpi9HDz7a9aa96YnqcvTgI/Wdn3Jn8SxHDz6q5TnxwPVt
I3rwkfa7gwIzrzaiBx9tl7lhsmlvI3rw0Wm2f73Rmkb04CMf8SNxnyoa0YOP
1jocG36b2ogefLQhVX2+ml8jevCR5tPe4LrpjejBR2GOU4+bajSiBx+ZWKeL
CQs2ogc/Zax5tlRlaBl68FP3m9GW+IFl6MFPWszLC570L0MPfpqrbN61tHsZ
evDTkc7VMfmNy9CDn27slhWvLV6GHvw06DhN5mbCMvTgp2uPJW55eS9DD35a
YcXc+9NiGXpwHnfM0LjDWIYe/KQTqFT+XHgZevDT7OzaGqv3DeghQB++L9gr
0d+AHgL04oFFhn1zA3oIUPZN+earaQ3oIUBxu+6r7Gc3oIcAiXxK/jYq14Ae
AlS47KTEso9L0UOAgjvG0spPLUUPAar+J/7v7Oql6CFAlcvfXovPX4oeAjQo
aPs8wGMpeghQyoMK65VaS9FDgO6cv//e6PcS9BAg6uX9J317CXoIkuY298Ue
25aghyBp38nturFwCXoIEvt3d/rm2CXoIUjzBed9v2i1BD0ESWLJqRRruSXo
IUjnDjS8+jFUjx6ClLZYa+W/i/XoIUhL8x91+HfVo4cgFaiY2XyqqEcPQfJr
b2i4EVWPHpzz+ZV6449lPXoIks5h8Rl58vXoIUShkjvHDb8tZsv9d0AhChb0
jDC8vhg9hOiYQvvy7G2L0UOITn/SfTlatxg9hEh+9p+mk6mL0UOIRLRev73u
shg9hOhF0WRjTd3FuN8Xoi0Xj/Ts5l2MHkLEsH60o2qwDj2EaM+HsIaVJ+rQ
g/P8zOQ1b9rrcP8pRA+jG5hF5XXoIUTfPPY1OsXWocck+tbLbepLdegxiU6a
Pw5fyajD/ekkitN7XajEXYcek6hE4c3gwPNa9JhEZ9df4b5xshb335PofuKG
GXybatFjEl2jks+51bXoMYkEWkrr5VNq0WMSfbl/dt6IWy1+X5pEPMYFZsJG
tegxicpt6yRDxWrRYxINOY43PhhahB7CVKbeqtd8cxF6CJN8u5Bj5b5F6CFM
T/+ejNrcsgg9hGlH6qShfyWL0EOYEg8/ya2PWcRO+a+HMKXEcsV4OS5CD2Fa
7/HUgq2/CD2EiUe+tShRZBF6CJOV25cNh4dq0EOYAnZ5zHC6XYMewiTysf3Y
n4M16CFMQn8qDr1ZV4MewqQtKbSHu7IGPUTINfAWyzO1Bj1EyPMz77FT3jXo
IUL8ClNfp0+pQQ8RUrPPtyClGvQQIa40a1vHfwvRQ4Rs586uK3i1ED1EyPBi
2o7rlxaihwi1Huq3C9+9ED1EaCCu6LJE60L0EKG+sJefhucvRA8Ret/ebfkn
eSF6iJB28w7XqT4L0UOUXv412LVi2kL0ECVJhypJTbWF6CFK95ZlcN/lW4ge
oqTh2M/Y+7EaPUTpjk2j6OHb1eghSmbpjMT3R6rRQ5Re+N4+Z99ZjR6ilL9j
xv3jS6rRQ5S2241ZpRRWo4coFeQ/XjY1pho9ROlNxOn5Bm7V6CFK2i3t2xzM
q9FDlLb6zzqxQLkaPcRoYaB3wlveavQQoyoTe5uCT1XoIUYlaWmjWgNV6CFG
764/tflxvAo9xOjVyUOHh7ZUoYcY/W2dxBBdUYUeYlSveUPBa34VeohRrrJQ
wI60KvQQo1NXm8qmBVWhhxip7XXyeWJXhR5ilK56K7+HWYUeYvRw5GHbStkq
9BCnquWPqzv/VaKHOA3UT310530leoiTZadiqP7dSvQQp9uHW3tbT1SihzjJ
3ljbZLytEj3E6aXM/VNPWyrRQ5x0x29/311ViR7iZJP3YrAztxI9xKlnnOF8
MLISPcRJUShv4J1bJXqI02+9kmCraZXoIU6xGd0lPZqV6CFO+88wBKeLV6KH
BOXnnN83+GsBekiQX6ytS++bBeghQXxXbxc13V6AHhI0sq9FuOXEAvSQII88
5/6+7QvQQ4KWBriG/lyzAD0kyND7YHNg7QL0kCDLriirS4UL0EOCLm/vFIlJ
XIAeEuRS03lZPGABekhQ9wd5hwfsBeghQUeFQsxPmCxAD0kaCouJPaWyAOOR
pMUNV1Y8m7QA+7skFc0baFH8WYHxSdJvKR/zjNcV6CVJ54NW69+7XYH9UpI6
sw47xZyqQD9J0t7jFMC1uwLjl6TdxyOUD7dXoKcklTfvT2loqMB8SFLG3lb+
eWUV2I8kySf8bn9lVgX2V0kq3Hw+viOyAr0l6c+T4MMPPSswX5IkvPn9SmPr
Ctw/SFK/39xTKwwrMH+S9EJvjoSCcgXWgyS9P/nUfeekCsynJFWkMh3ixsqx
PiTJN8X7PPNdOfZnSXq24ETvpPvlWC+StC226DjXhXLMtyQxxh/cFu8rx/2H
JEUxbhye0lOO+Zeke2/2uea0lmM9SdIa+wjPE7Xl6CFFjFLB1czicvSQoiV3
CgS708vRQ4rSpC6l2ESUowfncZnuhtee5eghRe7lskFdNuXoIUV9cTV1JSbl
6CFFQzdeCCWrl6OHFHluKepMkihHDykqm/7LopirHD2k6PtLOabri/noIUWP
SmKNTp2Zjx5S9MuvVye1ez56SNHn5NVnpi2ejx5SNM1meb9R9nz0kCLu9P7T
7v7z0UOKkrwkFjVMnY8eUpS32/TouMJ89JCiDytrFBt/l6GHFDk/t/P1elqG
HlK00HSygumpMvSQopCN3/UsNpehhxQd6L8xLXFxGXpIUZv7id8HcsrQQ4oe
GOaYmweVoYcUXUyauuzajDL0kCZ5Efmby9XK0EOaPk0/tauYpww9pElNpen9
wjfz0EOaiLtyxoHL89BDml6nTJ0psnseekiTu8IHgcpV89BDmn46LOZRnzcP
PaSpb+eqSY/i56GHNGm/Nnt4xG0eekhTaaT49OOm89BDmgYOLXz8SnYeekiT
g3xVg8nvUvSQJvsZNeKrnpeihzS9fb9JVet8KXpIk75nVenV7aXoIU0HGFFf
1qwoRQ9parcetasrLUUPaaoc6GC2JpSihzQF87kUnvcoRQ9pWi3r+l5hcil6
SNMhydWeNUql6CFNP8z6YuW5S9FDmuxCNg2ffluCHtLkterpyeXXS9BDmo4e
y1s//2AJesjQv0eDPovbS9BDhkLvW63et6gEPWRorhCX59/cEvSQIdHz04yS
wkrQQ4Z2qUfwv7cvQQ8Zjt+0TfWGJeghQ7L3b97ykilBDxkqKKqIMRwvRg8Z
ulxxR0b3VTF6yNAbj01Hba4Wo4cMvfhoYZh3oBg9OOcr6K5/sr0YPWSouFqw
0qyuGD1kaF60hGhfQTF6yBAjJbMxOqoYPWTISq1lUMO1GD1kyK5kzrVxVjF6
yNDA1WiD78rF6CFDmk0Cx4T4i9FDhoR8m+OmD81FDxm6U9j8svz+XPSQoW7/
X4qvTs1FDxkKG1S/kbB9LnrI0Jdb/U/HW+aihwwtSfursLNyLnrIUm9etPe8
7LnoIUunbc4EJobNxf4uS+6r5vxLdJqLHrL09qya7nyzueghSy/rDrbuVp6L
/VKWjmpsmfyPfy56yNIt551nEr/MQQ9Z8vR8afDi0Rz04DyueGhy8fk56CFL
+fb/+ph756CHLLnIPVjxZf0c7K+yNP3A+XU3Fs9BD1laOK2950LRHPSQJYnO
xY33E+bg/kGWCtkiptx+c9BDlpSqvoWSzRz0kKXFEZlvVxrMQQ/OeGyHD/LJ
zUEPWeqI8Oyo5Z6D/Znz8xdWV+h+LkIPWart9TS996AIPTjzma1cteFcEe4/
ZGn3J6noir1F6CFL13fXrSraUIQesqRpaChatbQIPeQ4Pp6v6iopQg85Wrb9
s/zT1CL0kKMnyveSTEKK0EOOhObkxDU6FqGHHJ2zvPZa2LwIPeRo+vTwW63q
ReghR31fD/HZiRahhxwpvhyc+WOsED3k6NTpSdvPvClEDzkyfNI72H2nEPdr
cqQRvvRO+6lC9JCjxBV7k7btKkQPOVKYlZZ/dX0hesiR+0HLh7xLC9FDjmaG
j8z3Li1EDznKfNFDW9ML0UOOTl/Y+kc1rBA95OjN1cWrNroWooccXYpRGbK2
KEQPOeoZTX/1VqcQPTjjL7sQ0SNTiB5y9KPv1JR5PIXoIUe/Nmv7Jn6ZjR5y
lDw01BD9bDZ6yFGdW8a9jGuz0UOerr6TEak/Nhs95OnV943C/dtmo4c8Lf8g
cohv3Wz0kCdFhdLxyPrZ6CFPjvzh+86VzEYPeeL66XTeKWM2eshTV6Ss0u3w
2eghT5scBxbP9piNHvJ05v4tPqbVbPSQJ4EXC1M/M2ejhzzdt+hYc0ZpNnpw
zs9WqnL7pNnoIU+WeZ95e8ZmoYc8PXtQz7vv3Sz0kCehlvyUm/dnoYc8RUWG
yXFfnIUe8vRh1OQbHZqFHvJkcU/iTeOWWeghT29b/Qa+rZ6FHvI0r6ZgS/Li
WeghT/UGJq7vS2ahB+fnL8c3l2XOQg95uiFnOFc7ahZ6yBPP4vOP7nnPQg95
eqq1p6vNbhZ6KNCcu0uOzTKbhR4KNHuykWgEYxZ6KNDfd4uL/KVmoYcCPUh/
8jaUZxZ6KFBtfplb9rcC9FCgQ5tGyppfFqCHAt3QGp118U4BeihQpU6ijOS5
AvRQoLZGT8ekgwXooUD31778dKGnAD0U6ELM8nHbNQXooUB/igZnnqgvQA8F
urup/mNgWQF6KNDt5PwN33MK0EOB1q9vi+uKK0APBZoyxVkhObAAPRRIY8vJ
3qnOBeihQDW314hKTy9ADwWKyZ6n+degAD0UaNFp67s/lQvQQ4Fuhd+U4xEr
QA8FEm5KuKT0Lx89FOhV0IxB9pd89FCgh/v7nWe9yEcPBRrfvPT5/jv56KFI
DatjNgiez0cPReo2k85LPpSPHoq07sUWm1u9+eihSIGHA4a91+ejhyLlfg2Z
c7cxHz0UKWKLwYnMqnz0UCT11ZEHJIvy0UORRPu3uJ5My0cPRQoT/xxdEZmP
Hopkr6/z3ts3Hz0UKUQg666+Qz56KBK7T1hKYlo+eihSqUxcDa9BPnoo0r2E
73r8KvnowRmfYfZjGfF89OAc7/ryFjPufPRQJKFoT5eZI3nooUh609pvL3mT
hx6K9Pp8n/n1B3nooUgmM595alzNQw9FYnSXSJWcyEMPRcrrl857sTcPPRQp
dKNn2MzuPPRQJEeJDwfvr8lDD87xbG6XpTTkoYcS7WoWWs1dmYceSrRmzuax
zYV56KFEwb8/1Yen56GHEg12WDgqReehhxIlmoyJvPTPQw8lqnC7ePeQcx56
KJFaVETTOss89FCiYa9i83qTPPRQouUWUhsWauahhxJNtdS7WS+Xhx5K9GXG
w71tk/LQQ4k6O7Isj/zJRQ8lSraw8Hv1JRc9lGjtqe53Sq9z0UOJGscCR8Me
5KKHEq1nPk/uvJqLHkr0WULWePxkLnoo0ZE1Fy2iD+SiB+d8Do4XXdqaix5K
dEjuyDPH9lz0UKLX36bEn2vORQ8levih+1NwbS56KJHT4TmzhubloocSnZVQ
ftuUn4seSvQ1QNXKMSUXPZTpQKF+5J+IXPRQptSTv9kn/XLRQ5nk2/MGGp1z
0UOZ1qbPlc20ykUPZfpirfLOzywXPTjPP1LoSjq56KFMJcMnNa2UctFDmc6K
+KTbieeihzKp2c2T8ebNRQ9luibSqnF5OAc9lGmUe12H9MMc9FCmutKZLVln
ctBDmbo1PF482pGDHsrUd0g1PXZ1DnooU8jnLumfVTnooUxfb74/2ZGTgx7K
1NIuF5cQnoMeyiQaOv+WhXMOeiiTRcoWLnVWDnook2mU4zVFlRz0UKa3dQw9
fYEc9FCmv3vsP7p9yUYPZZI8dE2o7FE2eigTl4dqwtlz2eihTI9rNwxq7slG
DxXafI47Z1lbNnqo0A0DwWGpumz0UKEF4R3eXbOz0UOFahyGcrzjstFDhcZ3
GrIFvbPRQ4U+SR/puDUjGz1UyFSXtXC3TjZ6qFB1t+W1Dsls9FChn3K7UjaP
Z6GHCtkFNc84+jYLPVSoMEvA6NXtLPRQIXEXXwONE1nooUKXAx8qZWzLQg/O
98HW7863ZqGHCk0W0ymfsTALPVTIazTrfF9+Fnqo0BoeuV6vmCz0UKEpgTPk
vnhmoYcK/fqm9LlrRhZ6qFDGKnXNbN0s9FAhkcArLS7SWeihQu6R19isf5no
oULWZ4e4jD5moocK9bNVzlncz0QPFUq8GTMv8GwmeqjS+g0fxSv2ZKKHKn3d
IpXS356JHqrkvZCdJ740Ez1UyU1fUCm7JBM9VOlCm5LHk9RM9FAluceuw9Eh
meihSndmLfgx5JiJHqpkHH3fs9E8Ez1U6fihkvsOGpnooUq/Wg/U84lloocq
8R4b87/7KwM9VIkRd0Xu4NsM9FCly78fnu65m4EeqiQs8slz6+kM/D6oSsED
r1Yd2Z2BHqoUYHNhxeP2DPRQpdLcA5PFGzLQQ5XuXfkU4TMvAz1UqX/12b/r
MjLQQ5VCbx0U+hOWgR6qtPBbaEqGWwZ6qJLniUChdxYZ6KFKhQpz7s/WzUAP
VdLa1XteSjYDPVQp/PvIqSM8GeihRqmncvoKv6SjhxpFsENXsZ+lo4cazVjP
5aVwLR091GjJz4dn/hxNRw81ChSf9e1rbzp6qFGiRvap0TXp6KFGAftqdSYt
TkcPNeosaOc3LE5HDzUqedMZHJaWjh5qdCx0M++qmenooUY1Ky79HXRNRw81
4r8SYGE7PR091OhxyMrWTr109FCje7VCiqry6eihRp/qp25o509HDzW6zDym
M+V7Gnqo0an1cctvvUxDDzV6UvjtfsXtNPRQo12BsR9sT6ehhxp5X+rdL7g3
DT3UaNH070ZPO9LQg/Pzi7OsTzeloYcaVRrG3dlfmYYeanSub/L7/QVp6KFG
Er8i0k8npKGHOt1ck+XyNDANPdQpRF4iR9ApDT3UKb/s722bqWnooU4noyTT
5uukoYc6udeZqV6TTUMPzvd/I58a8aehhzot2rmjY8X3VPRQpzuZQeGir1PR
Q51+9i4Zabibih7qdCNvTwLjXCp6qBOX2pTWowdS0UOddng0LEzpTkUPderd
GqOm3pqKHurE98zP93ltKnqo0y5/HfFdxanooc7ZT3d6LslIRQ91OtfzZGx2
ZCp6qJO3yA7hDO9U9FAno5lTczPtUtFDndacX6FabJaKHpzzrRbnaWakooc6
fVj4SfqQVCp6qNNI1gr7jzyp6KFOK5JKyw1HUtBDnar+Gp2c9SoFPTRoq5j9
2MW7KeihQVl1GYom51PQQ4MYWdnSa/pS0EODvi3ReCC7NQU9NOh7ZUr86rUp
6KFBKVX2bUZLU9BDg6IdDpefn5+CHhp09urIeG5eCnpokP0choBuQgp6aNC+
rQsaXgaloIcGfbmdV7/DJQU9NGg+O2S4ekYKemjQmR8921MMU9BDg6p6fx4K
Uk1BDw3yXfZUyFs8BT00aIW1WL0fVwp6aNCapfYzYr4mo4cGDTZ5c899mYwe
GnQlXubhurvJ6KFBbjwL+66cT0YPDeL36lkmdDgZPTRo1bXGIJ9tyeihQdL7
E8fa1iejhwbt7Awt+NWYjB4adK9z5/7YqmT0YJAF79kDNwqTJ8bDzyCjqX/T
vdOS0YdBaUevnb4VkTwxPgkGbZU/0Zfok4z3Gxn0qSHVjss+eWK8Sgwqssh0
7ZqSjH4MWnCo4kKIXvLE+LUZtDsou09KKRk9GSTfKyA6IIL5MGWQ3hHT/V1/
k/D+JIPEDt/vLf+SNDE/MxhkzCX8KvFlEnozaMv764GBA0kT7/c5MKjgvM9n
z4tJ6M8g7aO7e3yOJk3MnxeDcnqsSiJ2JmE9MChdesrM/I6kifkMZZDbpB/T
mlYmYX0wSFpmeNKx2qSJ9wfjGHRJcuWFr6VJeH+NQfP0c9LNc5Mm5juDcz7d
EoNzE5Lw/ieDbv1S0rsckjQx/7MZZL3AztjAIwnriUHnaq3fL7FNmuhRziAZ
48fBf1hJWF8MOmDzJ7FQJ2miRx2DDppXio0pJGG9ceZPLNG5WiRpokczg3a4
bORR+ZeI9ccg3v3e1oe+Jk70aOP0KK18Ff86EeuR03Mo64fsg8SJHt0Mqq90
Srl+JRHrk0EJ+zyNVpxInOixhzM/o7ctE/YlYr0yyGGlXa1VT+JEj6MMMtzx
TUJlXSLef2WQmmTmab7GxIke5zivZ2C87kdVItYzg2pHTi/7NidxoscNBrm8
ubXiZ2Yi1jeDBO/xdAjEJU70eMSgjZ8Ed6gFJ+L9Wgb11XXutHVPnOjxmkHK
Vlvakm0Tsf4ZxL9mOKfFPHGixzCDBHxiVG7pJsIDg+Kfv10lr5w40eMXg2Ye
W/woXjwRPjTplFzAswM8ifChSQuv+K+W+5EAH5p0OauXu/RDAnxoUqx4g9iH
pwnwoUkxTpP3xd9OgA9NeibxYGjwfAJ8aNK5C3f2ZhxNgA/O60mV/x7flQAf
mlR/xO7wyq4E+NCkgRMLPsxYkwAfmsRndL7yRUMCfGhSHvfKkpVVCfChSSq2
ZRf95ybAhybN36OWKpedAB+aFCGg6vU8PgE+NOnkcqPsfaEJ8KFJk2MnnW30
SoAPTfokMc+z0D4BPjTJ5PLM0XiLBPjQpCvT5x4LNUqAD026G3VmTRAjAT40
yWiD6cIwuQT40KQlvTtnJwsnwIcmxcX7x5f8i4cPTXp4meHUMhIPH5rkJ24p
c/RdPHxokp3/sXPvnsTDhyaNHnwSpn47Hj40SSHg5onwC/HwoUlavA9/tB2L
hw9NcpnnNPJ+Tzx8aJKjSeIOu554+NCkcONWzdVt8fChSQnmXo5/muLhQ5Ok
FgyJptbGw4cmib/8W/igLB4+NGnd0n9zg2bFw4cmPVUpF7+bFg8fmtRerGgS
ExMPH5r0+Gna1aGgePjgrIeD6h9qPOLhQ5Oy174v0ad4+NCkcdu6uVenxcOH
JvVFn3pUahQPH5rEPJ7YNlkzHj40qVje5cCQfDx8cOb3lytjr2g8fHDm73Hg
zfk88fChSc2/Is4G/IyDD878uEV8N/4cBx9aJJEdPFP8ZRx8aFHVvpC3o/fj
4EOLCv4UtL2+Fjfx+5WEFk3edrHg8Zk47PdatHRzedzDw3HwoUVT7E7HPtsV
Bx9a9EDncvrHzXHwoUUnEwfm/FsXBx9aNNXPpEqpOQ4+tEigUG2hVV0c7g+0
KHDFv6L48jj40KIZjVMCGwvj4EOLOhM1pc5lxk3stw5aFCZvuZU3IQ4+tOhi
71dl17A4+NAiH62rYY2+cfChRU5hgXGDznHwoUXektJGVjZx8KFF6+9u2Nky
OW5if47TovlcGz/8MYiDDy3qXtN3J00jDj606FPCqtRHcnG4/9Ci+we+rAsW
jYMPLUpesjDnDg96FHPOL1llIGIsFj60KMp13tW3Q7HwwZnf7nLf0tex8MGZ
z2zuIPnHsfh9V4t4nw7e2X8rdqJHsxZpN0lci7oYCx9a9DtnrqXIiVj40CKr
1UoS/Qdi4UOLvmcMu8/dHgsfWsSVzv/SsjMWPrSozTJlgGtt7ESPPVo0vsJI
/eryWPjQop/OObs31MbChxadlQpZWlIei/sfLXp2ULg3oigWPrTo0ptj/A7Z
sfChRVqmW1eYJsXChxbVjIiHaEbGwocWXctn2SsHxsKHFql0RforecTifkmL
xFzflKvbx8KHFseL4UXmjFj40CI+nUX61maxEz2GteiVdkpTgF4sfHDWm4CF
UK5aLHxw+q9NK2+SRQ8ubTprNW/0iAh68GtT4vaviR950ENYm2JSNtU7jsTA
hzYpPgwyPDQYAx/aFHmQ0WJzIwY+tGnnZrtLF/tj4EOb3r75cjBxewx8aJO+
TV2I8LoY+NCmX/cTWg8vjoEPbToS+qZwTnEMfGjTj9W1LyktBj606drZSwOy
M2PgQ5u+G1q7jLjEwIc2cU/O0306LQY+tGmdn0zGHZ0Y+NCmqJGbogMyMfCh
TYP5WVwveWLgQ5vEx7Zaj3+Jhg9tci5O2KvxPBo+tGl8/axYn+vRuB/XJr6+
S9MW9UfDhzYV9cQaXtkeDR/aZPvAYqpaWzR8aNNPgyj3OUui4UObPg18inlS
Gg0f2jS1TDzbNzMaPrSp78dQ2qWIaPjQpurgq+4BntHwoU0WV4d5X1pFw4c2
hW/vWVpuGA0f2iThHvJMXzkaPrRp1dvoofuTouFDm6b1W+xeORYFH5zxDURo
RL+Lgg9tOi8YasK6HwUf2jTjyeGbohei4EObPq80EBg5GAUf2nRU2OXYq+4o
+NAm3Q3nvjxviYIPbcq2z1j1dlEUfGhTjdNY59icKPjQppxkJ1m5tCj40Kbh
A8z7VmFR8KFN9cuWfUh3j4IPbTItT3fotIya6PFam/zt99x+x4yCD8762ZLb
OkM5Cj606f7G3TWNwlHwoU0dEk0rR35Fwoc2BV6adjTuQyR86FDVivNf7z2M
hA8dkhOoNA2/HAkfOtQxvyvl1ZFI+NDhXH/LVhRvi4QPHYo9Fr1DqS0SPnTI
8FxX78mlkfChQ4Iux6pmz4+EDx2yuSJvNjk3Ej50SDXDqONnbCR86NC0deX3
zvtHwocOlTtuOrvRIRI+dOh2k0nSwimR8KFDemJHtxboRMKHDslkjDemy0XC
hw6ta22TyBCIhA/O+XbHqM7+EQEfOnT0GN/ORW8j4EOHEiUiT3bej4APHfK6
bON5+WIEfOhQtXKNw/jhCPjQoWgBnfZp2yLgQ4fmFvFHzmmLgA8dOqujl326
IQI+OOdXW3tVqSICPnRIaMB69pz8CPjQoWOf/MOfJUTAhw6peL+b7R8cAR86
FChscPySSwR86NCm0zbmvjMi4EOHHrZGn3jIjIAPHZJSuZKapxIBHzrUan9d
Q1IsAj506EDCwScH/obDhw5tYz5ZlzocDh86tHfBxmCtwXD40KHx1uy/L2+F
w4cOcV3es2znmXD40KFZaz7wVR8Ihw8det21KjC+Jxw+dKhnnf1stzXh8MHp
M60kfvqScPjQoWzGExmz+eHwoUOTuUUXmOWFw4cOjcRt75yREA4fOhTeU1jk
ERwOHzpUIqk+nOgaDh86VNmSJLTIMhw+dGgjl3zfHqNw+NChO4f//XqjFg4f
OiT55tdZHclw+NAlJfYbuXSecPjQpQ753mcHRsLgQ5eWeM1giL8Jgw9d+mO/
4Erm/TD40KUt12ue37oUBh+6NMPeJ9jxWBh86NJ8+0HNwzvD4EOX1B6GknVH
GHzo0oO0iz2nVoTBhy55L48MDVoUBh+6FDBjhsOn4jD40KWns5cmLM0Kgw9d
qmtctXd6bBh86FLr9+Wm7wLC4EOXyvTOXdzoHAYfusR9qGJB4oww+NClb94K
vqZGYfChSwXzXzC51MPgQ5f2PHcTfSAZBh+6NPX7zqHDvGHwoUsf1OuvdI7O
hA9dKlrvv37Vu5nwoUsedfOjGx/NhA9dEj+6mq/p2kz40CXBAdPFa0/OhA9d
CmVd/bBt30z40KUNN6QY57pnwocuxWe0ar5dMxM+dGmtt8h7yYaZ8KFLsTGy
BfYLZsKHLs2VT90/d/ZM+NAl85zj2/pSZ8IHZ/wvHgdwR86ED12anlSz3s93
Jnzokqd/3ZLNDjPhQ5dYmYfkBSxmwocutQ18mZrJnAkfusQjIjV4X3UmfOhS
2qW/Cr6SM+FDl85qd1+/xDsTPnRpMJJLwO9HKHzo0ubvXLsfvg+FD856WNNz
NftJKHzo0g5NrpBJN0PhQ5cKSyQdtp4JhQ/OfOz+WB/UFwofutT1rJfFvy0U
PjjrST9H/2h7KHxw1l93aEZpcyh86FJt+bJRh0Wh8KFHCYfdT0mWhsKHHu33
67v0KicUPvRot7KK8MmEUPjQI+trO+d0hobChx4t+nlCaplnKHzo0dinNdcq
2KHwoUc/Lzf2Fk8JhQ892pc3vrFYPxQ+9Mgw12pbhUoofOgRl9jOMw0SofCh
R0stzr3exBsKH3r0dt6Q8IkfIfChR48k2oxffgiBDz2S3+7tIv4sBD70KKq7
LIB9OwQ+9Kj2zn7PovMh8ME53/oK4/1HQuCDM/71OUO/d4bAB+d8/RUa3DpD
4EOP/ANlBda2hsCHHs09JOg7uiQEPjivN74qMXRBCHxwzv91rn1/YQh86NGp
FsdnJhkh8KFHM8rOWnfEhMCHHk1x3eejERQCH3p0YvC6zEa3EPjQI6c5T6uN
bEPgQ4+k43rXHzYPgQ89stQSigzQC4EPPXJIPr9vSDkEPvToxui5zU0SIfCh
R5v2vza24wuBD87z10yioZ/B8KFH37qUH3V9CoYPPeocFBpPHAyGD878h55f
zRwIhg89ahUO2DNyKRg+9KjyWwedPR4MH3p0eey4bdu+YPjgzNennZ2lW4Lh
Q48+lZcXxK0Phg890nCy3+jVHAwfnNdfN8nErjYYPvSo+cyIuEVZMHzoUX2/
luPUgmD40KN/QQdPz0gNhg89KpZ4utQxKhg+9Ojv5DNrgwKC4UOPZh1c9y7D
NRg+9Omea3turU0wfOjT18mTTLaZB8OHPi3JUVIe0AuGD30SWS4/RVA1GD70
ieu8R4GtVDB86FPtTb67cwWC4UOf5LlbQo78DoIPfXpjFDnM9yUIPvRpy/Zt
bYGvg+BDn9wTPkV2PwyCD33KXFuux3sjCD70KZZxYzThbBB86NNObe8LFw8H
wYc+yTiltE7fFQQfnNevXBm/pSsIPvSJ3z6Eob02CD706cF0vasbGoPgQ5/G
Ztel6NUEwYc+2YSJvN1ZGgQfnPmqneZpnx8EH/qU8r21fiAlCD706faFK5sL
ooLgQ58Sc9Nb5AKD4EOfHi0SCz/qFgQf+lT8cubbdLsg+NAnzYqvdupTg+BD
n+ZXVYUNMIPgg/P49KNTVmoEwYc+nfzncyFcLgg+OOcTPSynKxIEH5z5eRMh
950rCD70SYH8Tl0cDYQPfdJRWKbS9TEQPvTprdagUs1gIHzoE0tF6lDWvUD4
0KfhvR9+hF0NhA992rfO6Zrn6UD40KdXhV+tHQ8Fwoc+zbpxzZJ2BsKHPokx
D5926AqED3268HTlPY+1gfChTxst3fNmLg+ED316GXqkLmNRIHxwvp/6hFFV
Fggf+lSyvt1s46xA+NCn9RZju8+kB8IHZ76Snnd9jg2ED854okIE1UID4UOf
GLJh1/28A+FDn4TtPv+pdQyEDwNqcVevP28ZCB8GtD3ie6EoKxA+DMjNs/JQ
sF4gfBiQybqHAZtUA+HDgM7Ol7P5KR0IHwY0etYz339SIHwY0K83a7/s+BcA
HwZk991wv8xoAHwYkONqlSOlHwPgw4CaFVr+vR8MgA8D2ml3pTT6fgB8GJBQ
9gezgWsB8GFAQ/V6csFnA+DDgNYK7je4dyQAPgzI5dLt5Ng9AfBhQNIOJy59
6gmADwOa5ns0sLw9AD4M6K+H+G+FVQHwYUAS/8aP7l0SAB8GFLzxTktIVQB8
GJDTnTc1f4oD4INzfm0La3ryAuDDgLoThZrDUwPgw4Bshs72SMYEwIcBmUZr
nLkUHAAfBjTbIH9wsVcAfBjQAwXtv36OAfBhQNbOrbIqVgHwYUAvZNla71kB
8GFAtycv0D6mHwAfBmTYcEt2lXoAfBhQUvjmr7Pk0KPDgJ5yz+4LFUWPbgPS
Nz6QxOZFj+0GFL/vwzejX/7wYUDXtzbFqn3xhw8Dmuo1pVvmrT98GJD9X/9z
4k/94cOApvsXHxK/6w8fBuTx07JM5oo/fBgQ85ymhNppf/gwoNXbz6QZHfaH
D06Pg0fq7Hb7w4cBvRHYkB3S4w8fnPm9JCFd0O4PHwYk6dGT17zKHz4M6O51
ybpDS/3hw4DKDnwMfVXtDx8GdCX89YDsPH/4MKCNSlsE3Gf5wweTyv3fPKvI
8IcPJqVF+CX0x/vDB5MqFq2u4w73hw8m3VUvC3Tz94cPJpmH7D/U5OYPH0w6
EcR99AXbHz6YJGDMCJ0x3R8+mDT/zt3qRlN/+GDSBrOPzkO6/vDBpI2/mM3+
augxhUludyKzDsqixwwm3bQMuqotih62TPpYPLiniRc9HJhUf/yRstBvP/hg
0lU+Fa6Kr37wwaRxyTmxf9/5wQeTiopvzCh/7gcfTDq8XnChwH0/+GCSe+cf
p8brfvDBpB35rfmM837wwaSlO06J7O33gw8mdR1PEfM64AcfTHp0umDW2+1+
8MEkq+X3bGu7/OCDSRp7apNN2/zgg0nOCfM+DKzwgw8m3a7vvVC9xA8+mLT6
jPTf6dV+8MEkMa/t1Z9L/eCDSbV85VE9s/zgg0mZhYsXpGb6wQeTHC7c/WKU
6AcfTPpzIr37W4QffDBJ53hAR3+gH3wwSfTw2qcNnn7wwSRpdlh4oqMffHDO
L32NpK21H3wwac7HOf+UpvjBB5OG/k7S+W2IHueY5JqSVvJMCz0uM+lt3l6e
i8rocYNJn4aEDxyQRo8BJmVNbVjRI4wej5g0KJW8Zj0Pejzn9N+etXjKd1/4
YFLf2hBt1itf+GBSZfbTn1Pv+MIHk5gNSQIOZ3zhg0m6Pp4uoft84YNJsg9+
7J7V6QsfhtRvPeCyeoUvfBjSX7/w8XPVvvBhSIvOjV75M9sX/z9oSE8V9Pdb
J/vChyGFlKfvqAjxhQ9DEuNy3nvNxRc+DOmyP7tfd7ovfBiSz5vXFyv1feGD
83ovrtx4p+ALH4Y0RXHx1VAhX/gwpNzxvsNXfvrAhyHp9P5q8nznAx+GpPf8
i/+N+z7wYUi9n92Goy/6wIch1R7ZljZyyAc+DKni5M2DjVt94MOQAnhz7lms
9YEPQzIWsjv1ot4HPgzpzMN/BS3zfODDkG7yz30VlO0DH4ZkuzBfWinGBz4M
acP1vu8vfX3gw5DmnWPUHSQf+ODMx4F5F5vMfeDDkMyDtu4q1PKBD0Pq2bnI
Kk7GBz44r2c7FhPI5wMfhlR9+qWq93dv/P8g5/Xjpmf6vPaGD0M6OP+5W+iA
N3wYUuLdgW0p573hw5Bk42VWzu/zhg9DmhXXON62xRs+DOmQX+CjM2u84cOQ
wl9Fs0bqveGDc7xJx74xy7zhw5DaB8o0U3K84cOQ7qzcs3drrDd8GNLhffnd
P/y94cOQ9p29+8PD0Rs+DCm15O+6zqne8GFIJ9pFVwrqecMHZ/0pGzzMVfCG
D854n5akPhfyhg9DUhyxsAz75QUfhrQntd7t3gcv+DCkzwF7GqMfe8GHIb2+
+Fri41Uv+OCs59dJx8qPe8GHIWkeKGhR3e0FH0b0yj60tb/DCz6MqGp+xJG0
FV7wYUTMkGvjyjVe8GFEPCv5Q27N8YIPI/L4HnRqeboXfBiRpqgihUV6wYcR
vffbdk7Pxws+jEhatij4N9sLPowosfThy7vmXvBhRNyVTnl92l7wYURtQxqj
G+W84MOIWoOeZjcJesGHERmL/LxbN+YJH0a0x+wFs/aDJ3wYUcs6tYSljz3h
w4jefNAvW33NEz6MKD5tYeG2E57wYURHFU+4ntvjCR9GNNSb8OlNpyd8GFFR
9Z94iRZP+DCivVs0N9nWecKHETldTO7NL/WEDyNynpJStD3bEz6M6MzN41xf
Yj3hw4hGzeScrAI94cOInqZOsq1z9oQPI6o3dXnzbLonfBjRihNFdnaGnvBh
RPM/e9ttVPWED04P4dJBUQlP+DCiK58P6pVxe8KHEQX+OCYw+s0DPoxI9I9n
2azXHvBhRA2BmrVj9zzggzPeM7za1Zc84MOIni877KpwzAM+jEggUfbbjp0e
8GFEH8IeM3w7PODDiI6Pvr08ssIDPoyoT0fsW/siD/gwoiUs7YbAEg/4MKIp
ZwXXiWZ7wIcRLfi0WvFyrAd8GNF9geN/GgM94IPzeuei3KJdPODDiAJmRI+w
LD3gw4gytm//M8nYAz6M6M8lduw7dQ/4MCLeEn7Fa1Ie8GFEKe9HGYf5PODD
mN7XiRdt++EOH8Z0QcRDvuu9O3wY0/bQLb82PXaHD2PKbZzC2HLdHT6M6afk
pwX7TrnDhzFNin2ufm6/O3wYE01XH37S4w4fxvSmeO/X8bXu8GFMB6Yf1NJc
5g4fxiTYTqWele7wYUyrhFJ/lxS6w4cxJbzyXLs7zR0+jOnaWdGIoUh3+DCm
ypCrUyb7ucOHMSUHHdAqcXSHD2Nqa/qifdHCHT6MacOPnikahu7wYUy6eZI+
xWru8GFMVr9Dcx5KusOHMfm37G9y4HOHD2Ny9E06sOOHG3wYU4VB+12tD27w
wZkPo65Pa564wYcxNYf1/VS+6QYfxtS7Q31k/Rk3+ODMj7r6I8M+N/gwpuuL
ebYd7nWDD2PyuqSUENDuBh+c8azf++tzkxt8cHrt08ttrHGDD2My2Hi237LE
DT6MaeuTT6/eZLvBhzFNOffzyZp4N/gwJq5VLpuDQ9zgw5iUky2t5Tzc4MOY
0vUsVj2wdYMPY1LdsOlAp7kbfHB6FAy1FOq6wYcxfRSrmu6t5AYfxvR8280G
ppgbfBhTbbRPmwi3G3wYU/5IZsy3EVf4MCZXkc3Xnr11hQ9j+sYz58OtR67w
YUwuf6J2XL7uCh/GpPbwvsKl067wYUyDljma1w66wocxvczddP5eryt8GNOZ
pTzCb9td4cOYXoXIDY43u8KHCZ2yy/BWqHWFDxOqyFjhNn2eK3yYUMQO/euR
ea7wYUKfFx58VpPkCh8m9Ev+eeHBMFf4MKHdTNuGz96u8GFCBsYZeoYOrvBh
QmLGopYZFq7wYULjt0+d2mXoCh8mpJI949QfdVf4MKGdA9JTfWVc4cOEihf9
le4SdIUPE1qyuCeSZ9wFPkxoy7zTYonDLvBhQl/reLQvvXSBD854MpVap993
gQ8Tmpt0IrPnigt8mBCXw77VjJMu8GFCSYG7Ndbtd4EPE6rOnvNTfasLfJjQ
lHcXNLvWu8CHCcm1ZLRMbnaBDxNSvawTdnqRC3yYEPn1x0bMc4EPE5qRItj7
I88FPjjPv3BpemuyC3yY0OQNj7kowgU+TKhusSTfR18X+DChQ8ut7NY5ucCH
CR03mdobaOkCH5z5sr3nIWHqAh8m1CvMp3BdywU+TGij4yqxlQou8GFCf8YK
jOJEXeDDhPLay7LMuV3gw4RahdquC4w6w4cJ9cce9n/+3hk+TOi8+clPx586
wwfn+8j2DZ23neGDMz9KLukNF5zhg7N+vnQ6lR1zhg8Taju91yR/jzN8mNC1
o2laGd3O8GFCojOPaaStc4YPE9IM266VudwZPkyIdX26wawaZ/gwof0yESYV
pc7wYULMfmWzpjxn+DAh+V0lhluSneHDhL4LVauejXCGD1Ni6hLPGz9n+DCl
D+0H74m6OMMH5/GA8bXTrZ3hw5SqXVW8UljO8GFKCWf1X6zRdYYPUzriZhFz
R9kZPkzJsiTqqIykM3yYkor1/l8h/M7wYUrmzRGy6385wYcpSfanC34ccoIP
U7qhznvD9pUTfJgSm+2S3fzACT5MaeBm6KOha07wYUq3d0Yp+p1xgg/O69+a
r7HvkBN8mNLLoLef1Xc6wYcpVeWcqlzS6QQfpnRrLvsh1xon+DClDa/qv85Z
5gQfpnTR9snZ79VO8GFKuTqpwUUlTvBhSiL+cWv+5DrBhymtX8qzclGyE3yY
0rK+hQ6KkU7wYUqaxwzbev2d4MOUQleadDm7OsGHKVm7XQ99YeMEH6b08UXw
zurJTvBhSk8qeLcZGzjBhymNEcPznpoTfJjSFqfvNYtknODDlNL3XIm1neQE
H6aUtXf05uhfR/gwJe/s/od7Rxzhw5QG+ebOKXrvCB+mdHVVYZfdM0f4MKUw
EksQvusIH6b0VaJ564NLjvBhSlHiifN2nHCED1O6P/3enUUHHOHDlAJLvHcn
b3OED1MaPagl6d7hCB+mpHz84EezVkf4MKU13vnOKg2O8GFKwcJ7FUSqHeHD
lHRqX8b+K3aED1MKd85U/5nrCB+m9Kd9n/f3ZEf4MKWpL4w/jkY6wocpeVrQ
j/EAR/gwo7iumExBd0f4MKPZGn/c5NmO8GFGbzPq65jTHOHDjA5MrjS1N3KE
DzN6/33m5ChNR/gwo9uSNU3zFBzhw4xq9y/y3SjmCB9mNG34QcIlXvQwMKO8
NeNXfo45wIcZbUzNXmw47AAfZlR1f3dr7GsH+DAjB7bP6OpHDvBhRsy+s233
bzrAhxnxTdm0TPWCA3yYkW1C7oWEfgf4MKPdF/a77NjnAB9mdH4bn8C/rQ7w
YUYyau/4Ajc6wIcZ7Xs3QltbHODDjI53Hzog2OAAH2a0f+fV5NRqB/gwI3XF
c55XShzgg/Pze6wTLfId4MOMdOXObutIdYAPM4qv5daTi3GAD87PKyy+WBfs
AB9mlDyPu5XPywE+zOizOX/DAgcH+DCjRzEztvBZOsCHGY2/sntbZ+YAH2aU
G3zMRU7PAT7MiDEcdapD1QE+zChm89kICxkH+DAjJ+UOsSuT0GO7GSU2r7+b
woUee8zIUDR9r8APe/gwo1bN3Zt6PtnDhxltV2V2+r20hw8zEv1Ysef3A3v4
MKMK7bwrW27Yw4cZLfnVOxx13h4+zEjE85OyXL89fHDmt+GD+/V99vBhRtcG
40saeu3hw4y6xyW2BXTYw4cZsSbveqS02h4+zOhMgYDQq2X28GFG1Z43jPfW
2MMHZzyPbrvVlNnDhxmVP70TFj3bHj5YpNa5Osoy037i88g8LBKQ+uCvmGAP
LyxirV429XcYxifIIj/3EN5BP3v4YVHOAaEjl10xXlEWzRctjDxsZw9PLNL5
mzW4bRrGL8Uir6snPDcZ2+Pz8Sx66u60sk0b86HAouhzF/rXKtvDG4u26xqc
bZPC/Kiy6NxFi82bhOzhj3P+G6/Gbv9HE5931mTRaZWLw4dHCR5ZdNuQP/jK
J5r4fKceiyycohYPviT4ZJFV1K7G3w9pYj6NWLTr/fMkxVsEryzSfXqd3/Ii
TXw+msWiwZ64nKgThM/fs2jttLnt1QdpYr6nscjhzZ+Vu3YQPLNo+doBv+dd
NDH/Viz6uGXokmwbwTdnfp6wBLxW0EQPYpFhUc2fhfWEz+uz6JHh8x1nKmmi
hzOLDjNMVIRKCP5ZdOZLhK1PPk308OCMZ3OMbEsa4XrAIsc+o7ZXsTTRw5dF
T8T23bOYSbg+sGjzjy8nFvvSRI8gFi2Z+iD0pQvhesGijR+TW8iOJnqEsYh/
1/KK9mmE6weL1heHSfGZ0ESPaBa96j7onKGDHnEsOsa1Q/WuCnoksMhpq02z
kwx6JLOof2rClv3C6JHKIq3FulHGPOiRwen3SyLY8xt7okc2i/P7DUPTeZCN
vx/gzOfqOmWXG+yJHgWc9eUUY+tznI3rEYuKxndVR+1gT/SYw6KL/K1DBW1s
XJ9YFBJiUtS4hD3RYx5nvCvqFPeXsnG9YlGq8rVrzzPYEz0WcPq+VWmVjWDj
+sWijG3NuT4e7IkeNSxqPx4T0GDJxvWM40mjy2rAgD3Ro55F6WlNunqKbFzf
WLR1MFiiVJA90aORRdOy1Efujdrh7xVY9GkR47rNa7uJHqtYdMFv+frNd+xw
/WOR2NzeaKUzdhM91rLohNeWScv32uF6yPGw9cJaqU12Ez02sKhOyFO2pckO
10cW8SbnZepW2k306GJRSfCCDX35drhesih85MyOoHi7iR5bWRT0fmHTqL8d
rp+c8aVIu6+3t5vosZPTX+PgZR9zO/w9BMebz0Vlfk27iR77WDRj2zqzk5J2
uL6yqLuoVnAhl91Ej0Ms6kh60+Y3bIvrLef5W2W+aj6znehxnEXHv2f+Gbtm
i7+fYNHntKCj9/ptJ3qcYZHURhPTYztscT3mrK+t0V5b1ttO9LjIomF+P9l1
Dba4PrPoQ1vmgpXzbSd6XGNR8U3NppU5trhec+Yj5anDuhjbiR63WVS4VGHp
Fl9bXL9ZxHxql3eMbTvR4z6nT8jlt/fMbHE9Z9G3YMsvYxq2Ez2ecK5fbdw1
mpK2+PsMzuMBHV2+XLYTPV5wrj9f2ryqhm3weXQWiYQUze5/ZjPR4y2Lc7+3
S437hg2u/ywqaL1j737CZqLHZxbFvcl8smqXDf6eg0UrbvMOf9xgM9HjG4v8
3xkUuC23wf7A8fI3M3HLApuJHj9ZFGuVcFy6wAb7BYsGJDdUViTYTPT4w6JF
7GNbRgNtsH+Yk/CVoMn5TjYT+yGPOe0T4FYYmWqD/cOc7pXFBZfq2mD/MCd5
EYX3wvI22D/M6euJ0zfWC9hg/zCnJ2MSk6x/WOP/E82p16W9/tEba+wf5iQz
RyOs6p417s/M6eQqy4zJF6yxf5jT3jdr+1/3WWP/MCf2s7GADVussX+YU6Ap
r1b8GmvsH+Z0a1cWk1lvPbHfappTTclw0mipNfYPzvEuOd2+kGWN/cOcpCX1
8jqirbF/mJPQoL9lpa819g9z0uNfxEwja+wf5mSRVGcXbG49sT+zzGmjrNps
Vy1r3P+ZU76HwEW2jDX2D858xIpb2fFZY/8wp9O3/p1w+G6F/cOcNO02R3u/
tsL+YU4zw26JRg9YYf8wp8e/gi7MOm+F+0VzOiP9b1ljnxX2D3P60NMVu3eL
FfYPc5r/TGva4zVW2D/MSfmjl4joEivsH+bkLc/1jMqsJnr4mtPRQ0o7S3Ks
sH+YU4fz3DlHYq0megSZ0/TJXBa8AVbYPzjPF1r+ytfRCvuHOU2Jkq3aONUK
+4c5Lb+SLf5b1wr7hznpci2uCFOwwv2oOb3ZEPTgqJAV9g9zEkvqkzP4ZYn9
w5xm/OtmtXywxP7BmT99OQPxx5bYP8zJcNWXn7VXLbF/mFMp79R2keOWuH81
pyWM28pNuywnehSYU9+6S0mMDkvsH+b/a8ne43o+2ziA81A9yajXUMmpktPv
9L3v63dEXFbONTzNYRFC9pQta2QZpV8ezWFjCynKmREiQzIlcsicklMipofU
lkNNTIx9X68+//9er+/9va7Pdb/v+/vjoO4dEn5eY4MfguvG5kwNSrbBD8HK
hYxWf3xtgx+CX7mVx62KtMEPwVV7Pt9lm2hr6keS4IutQ1NrgmzwQ81T+u6B
mwbY4Ifg+O0ztoQqNvghuP+XqUe9fGzwQ81j76Ckyg9t+H9XcEH1mjfZDjb4
oeY72+5tf2XFeVlw4zS/ugk1VvgheOKNNZ+Z71jhh+Dko1V2z0tW+CG4eCv5
/+uEFX4Ivu+Smvr8gLWpH1vUfo7ss+LhViv8EPw6rY3HvTVW+CE4wGl634pk
K/xQ+5U8/NmDOCv8EOx2/xHVRlnhhzp/h8Ic3k6yNvXjgOBO9rKpbqOsOI8L
PrF6UYB2kBV+qOtxTcgKIiv8EPz/Z81Wf+VnhR+Ct782N2a6W+GHYNO50RWX
na3wQ/CywkSbw1sLzu+Cb3d84zLoqQV+CJ5+q2FM0m8W+CH4z5O7/n2+1AI/
1P7MDta1P2OBH4LP9u+aPzPX0tSPK4KrgyYezt9tgR+C2y3lDztmWJr6cV1w
t/Vtry9YaYEf6n5W16qhMtECPwS//GXenFFzLPBDrWdNWtDJCAv8EHzALy/e
OsGC+4Hgq+XdWh4eYYEf6v6r86ow+1vgh7rev184FBgs8EPNU+XbBSN8LPBD
cJhmcf+77SzwQ/CKe7cD5zhZcJ8QPPLIJyltG81N/fhT8Kpuw31yas3wQ50f
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
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[Large], 
        LineBox[CompressedData["
1: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
hEqPtl4IYsmk/we53Lqy
         "]]}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}, {}, {}, {}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}, {}, {}, {}}}, {{}, {}}}, InsetBox[
     TemplateBox[{"\"CSS-LO\"", "\"LO-HpT-MON\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox["\"N=3\"", {
                  GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, 
                 StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "10"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"N=3\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "5"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.7, 0.7}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"d\[Sigma]/dpT\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox["\"pT\"", TraditionalForm], 
      FormBox["\"LO Contribution\"", TraditionalForm]}},
   FrameStyle->Directive[
     GrayLevel[0], 12],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {0, 0.06222893033920688}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
Vy1r3P+ZU76HwEW2jDX2D858xIpb2fFZY/8wp9O3/p1w+G6F/cOcNO02R3u/
tsL+YU4zw26JRg9YYf8wp8e/gi7MOm+F+0VzOiP9b1ljnxX2D3P60NMVu3eL
FfYPc5r/TGva4zVW2D/MSfmjl4joEivsH+bkLc/1jMqsJnr4mtPRQ0o7S3Ks
sH+YU4fz3DlHYq0megSZ0/TJXBa8AVbYPzjPF1r+ytfRCvuHOU2Jkq3aONUK
+4c5Lb+SLf5b1wr7hznpci2uCFOwwv2oOb3ZEPTgqJAV9g9zEkvqkzP4ZYn9
w5xm/OtmtXywxP7BmT99OQPxx5bYP8zJcNWXn7VXLbF/mFMp79R2keOWuH81
pyWM28pNuywnehSYU9+6S0mMDkvsH+b/a8ne43o+2ziA81A9yajXUMmpktPv
9L3v63dEXFbONTzNYRFC9pQta2QZpV8ezWFjCynKmREiQzIlcsicklMipofU
lkNNTIx9X68+//9er+/9va7Pdb/v+/vjoO4dEn5eY4MfguvG5kwNSrbBD8HK
hYxWf3xtgx+CX7mVx62KtMEPwVV7Pt9lm2hr6keS4IutQ1NrgmzwQ81T+u6B
mwbY4Ifg+O0ztoQqNvghuP+XqUe9fGzwQ81j76Ckyg9t+H9XcEH1mjfZDjb4
oeY72+5tf2XFeVlw4zS/ugk1VvgheOKNNZ+Z71jhh+Dko1V2z0tW+CG4eCv5
/+uEFX4Ivu+Smvr8gLWpH1vUfo7ss+LhViv8EPw6rY3HvTVW+CE4wGl634pk
K/xQ+5U8/NmDOCv8EOx2/xHVRlnhhzp/h8Ic3k6yNvXjgOBO9rKpbqOsOI8L
PrF6UYB2kBV+qOtxTcgKIiv8EPz/Z81Wf+VnhR+Ct782N2a6W+GHYNO50RWX
na3wQ/CywkSbw1sLzu+Cb3d84zLoqQV+CJ5+q2FM0m8W+CH4z5O7/n2+1AI/
1P7MDta1P2OBH4LP9u+aPzPX0tSPK4KrgyYezt9tgR+C2y3lDztmWJr6cV1w
t/Vtry9YaYEf6n5W16qhMtECPwS//GXenFFzLPBDrWdNWtDJCAv8EHzALy/e
OsGC+4Hgq+XdWh4eYYEf6v6r86ow+1vgh7rev184FBgs8EPNU+XbBSN8LPBD
cJhmcf+77SzwQ/CKe7cD5zhZcJ8QPPLIJyltG81N/fhT8Kpuw31yas3wQ50f
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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1: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
hEqPtl4IYsmk/we53Lqy
          "]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"d\[Sigma]/dpT", ""}, {"pT", "LO Contribution"}}, 
      FrameStyle -> Directive[
        GrayLevel[0], 12], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 10}, {0, 0.06222893033920688}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]]}, {"CSS-LO", "LO-HpT-MON"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {
         GrayLevel[0], 10}, LegendFunction -> "Frame", LegendLabel -> "N=3", 
       LegendLayout -> {"Column", {Automatic, 5}}]], {0.7, 0.7}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.827988385552696*^9, {3.827988445268791*^9, 3.827988451798533*^9}, 
   3.827988492642845*^9, 3.827988551880669*^9, {3.827988887178474*^9, 
   3.8279889839364157`*^9}, 3.827992700236231*^9, {3.827993673213669*^9, 
   3.8279936855349503`*^9}, {3.827993723546523*^9, 3.82799374235427*^9}, 
   3.828024243643078*^9, 3.8280295056830883`*^9, 3.8280640997501*^9, {
   3.8280714503317347`*^9, 3.8280714607915087`*^9}, 3.82807156614882*^9, 
   3.82807203493512*^9, 3.828086661895584*^9, 3.82815400312365*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"c7d3e064-b04c-46a0-bc8e-d9d0903673fa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "NLO contribution (terms only proportional to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Alpha]s", "2"], TraditionalForm]],ExpressionUUID->
  "1baac37b-56c8-4892-9421-33b3bc0baa18"],
 ")"
}], "Subchapter",
 CellChangeTimes->{{3.791270415261487*^9, 3.791270427402686*^9}, {
  3.791273752667684*^9, 3.791273787663987*^9}, {3.8267767197341537`*^9, 
  3.826776727711043*^9}, {3.826974886705041*^9, 3.826974888561879*^9}, {
  3.827983769129311*^9, 3.827983782941884*^9}, {3.82798453614303*^9, 
  3.827984558329095*^9}},ExpressionUUID->"81603a52-63d8-4d00-88da-\
4e71300c84f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Num\[CapitalSigma]NLO", "[", 
    RowBox[{"n_", ",", "pt_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["\[Alpha]s", "\[Pi]"], ")"}], "2"], 
          FractionBox[
           RowBox[{"2", " ", "pt"}], 
           SuperscriptBox["mH", "2"]], " ", 
          RowBox[{"(", "GevtoPb", ")"}], 
          RowBox[{"\[Sigma]0", "[", "\[Alpha]s", "]"}], 
          RowBox[{"d\[Sigma]NLO", "[", 
           RowBox[{"g", ",", "g"}], "]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LC1", "\[Rule]", " ", 
            RowBox[{"FC1", "[", 
             RowBox[{"pt", ",", "mH"}], "]"}]}], ",", 
           RowBox[{"LC2", "\[Rule]", " ", 
            RowBox[{"FC2", "[", 
             RowBox[{"pt", ",", "mH"}], "]"}]}], ",", 
           RowBox[{"LC3", "\[Rule]", " ", 
            RowBox[{"FC3", "[", 
             RowBox[{"pt", ",", "mH"}], "]"}]}], ",", 
           RowBox[{"LC4", "\[Rule]", " ", 
            RowBox[{"FC4", "[", 
             RowBox[{"pt", ",", "mH"}], "]"}]}]}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]0", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]Ngg", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]0", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]Ngq", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]0", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"q", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]Nqg", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]0", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"q", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]Nqq", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Subscript", "[", 
            RowBox[{"\[Gamma]1", ",", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"ToString", "/@", 
               RowBox[{"{", 
                RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"\[Gamma]mgg", "[", "n", "]"}]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"C1", ",", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"ToString", "/@", 
              RowBox[{"{", 
               RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
          " ", "C1gg"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"C1", ",", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"ToString", "/@", 
              RowBox[{"{", 
               RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
          " ", 
          RowBox[{"C1gq", "[", "n", "]"}]}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"A1", "\[Rule]", " ", "A1g"}], ",", 
        RowBox[{"A2", "\[Rule]", " ", "A2g"}], ",", 
        RowBox[{"B1", "\[Rule]", " ", "B1g"}], ",", 
        RowBox[{"B2", "\[Rule]", " ", "B2g"}]}], "}"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LR", "\[Rule]", " ", "LRR"}], ",", 
       RowBox[{"LF", "\[Rule]", "LFF"}], ",", 
       RowBox[{"LQ", "\[Rule]", " ", "LQ2"}]}], "}"}]}], "/.", 
    RowBox[{"h1g", "\[Rule]", " ", "hh1gg"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827986941411737*^9, 3.8279869910575857`*^9}, {
   3.827987031854732*^9, 3.827987037528483*^9}, {3.827987115578104*^9, 
   3.827987157845529*^9}, {3.8279872005200768`*^9, 3.827987207895186*^9}, {
   3.827987270015131*^9, 3.827987315395073*^9}, {3.8279874888587933`*^9, 
   3.827987490232238*^9}, {3.827988050815442*^9, 3.827988057466384*^9}, {
   3.827988487482643*^9, 3.827988488406187*^9}, {3.827988540023767*^9, 
   3.8279885475549583`*^9}, 3.827991269384677*^9, {3.8279912996030073`*^9, 
   3.8279913039341917`*^9}, 3.827991571392132*^9, 3.827991604251462*^9, {
   3.827991643991357*^9, 3.8279916763570004`*^9}, {3.827991716861751*^9, 
   3.827991764150323*^9}, {3.827992145975609*^9, 3.8279921476529617`*^9}, {
   3.828071575002144*^9, 3.8280716086726313`*^9}, {3.828086638067659*^9, 
   3.8280866382873917`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"16e401f7-c99f-46bf-9010-b981070d04ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssNLOaspt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pt", ",", 
       RowBox[{"Num\[CapitalSigma]NLO", "[", 
        RowBox[{"NN", ",", "pt"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"pt", ",", "1", ",", "20", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<./datfiles/cssNLOaspt.dat\>\"", ",", "cssNLOaspt", ",", 
    "\"\<Table\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.827988136169176*^9, 3.8279881449674063`*^9}, {
  3.827988177644477*^9, 3.8279881991445704`*^9}, {3.8279888930248137`*^9, 
  3.827988941809746*^9}, {3.8279919430052643`*^9, 3.82799195433463*^9}, {
  3.827992116802793*^9, 3.827992119387903*^9}, {3.827992160004279*^9, 
  3.827992162962851*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"ec06ef70-0096-4073-85b0-3795e7e6ba68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./datfiles/cssNLOaspt.dat\>\"", ",", "\"\<Table\>\""}], 
      "]"}], ",", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<./datfiles/morepoints_smallpt_NLO_without_LO.dat\>\"", ",", 
       "\"\<Table\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<CSS-NLO\>\"", ",", "\"\<NLO-HpT-MON\>\""}], "}"}], ",", 
        
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "10"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<N=3\>\""}], ",", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.7"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<d\[Sigma]/dpT\>\"", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<pT\>\"", ",", " ", "\"\<NLO Contribution\>\""}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.827988229265129*^9, 3.827988269453752*^9}, {
   3.827988301556212*^9, 3.8279883842522383`*^9}, {3.82798842859875*^9, 
   3.827988451181532*^9}, {3.827988884609825*^9, 3.8279888850591297`*^9}, 
   3.827991961610903*^9, {3.8279925831378*^9, 3.8279925865631037`*^9}, 
   3.827992651995966*^9, {3.827992682751445*^9, 3.827992693537401*^9}, {
   3.827993693384*^9, 3.8279937120717907`*^9}, {3.828072286593295*^9, 
   3.8280722895491*^9}, {3.828086580819207*^9, 3.8280865969970703`*^9}, {
   3.8281093185314083`*^9, 3.8281093259312*^9}, {3.828109381903801*^9, 
   3.828109386810954*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"382b0c67-13b7-4805-bb83-8c02e50274be"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large], 
        LineBox[CompressedData["
1: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
6Cw6okge4Ww87zBZvUeSPKLYkFrW/He7IHnEsjF7iUHhtiFn+vsBNnxthw0b
vzuPeiSxYTj+SM+Oj850PeJ+/5j2luZXzqMe6dzxCm/b3vrYma5P3PWRemvX
xXvOox7ZbJTZnTvfed2ZrldsYOjXl95251GPAq7vjG/mIyed6frFXf8rWFlq
R5xHPUrY4HfR67bZ60zXMzaWPXab7tzoPOpRyUZq6JLW1A3OdH3jzo9Ope2G
lc6jHnVsrFKuPneh0pn+XoHb46xHDt+KnEc91rChUzfwTifbma5/3PV3NqRg
SYrzqMcGNvYXHtQtjnGm6yEbDXH+p0+FOI96bGGj9d8f718+znR9ZONkjcQf
G1fnUY8mNjgh6itTFjnT9ZKNd42HTI7Pdh712MP1cw08PjLVma6f3PUUcnTa
3AnkcYANp/qJ51ZZkcdhNnY3Zo9/Y0weR7m9SctvnqBHHq1s1HGKhivVyOME
G+uKw+e9kSOPNjZeiSwphTh5nGUj7MrNI5v4yeM8Gx17Um6NDDqNelxk41fs
k3tB/U50PWaDuWdN+7UPTqMe17jzfX/KBptXTnR9ZmPtxFDvLY+dRj1uc9ez
wC4B+ftOdL1mo9uqoarwhtOox302MupfDv2+4ETXbzYSfkovSGhzGvV4yIbu
1VNLPx11ous593qYWFEZ2ew06vGMjSnGqpkfm5zo7zPYuNT3d0Zcg9Ooxys2
Xh541juwxok+j87tTdUjLLfWadSjl3s+e6VPS5Y50fWfO/6rGz+uz3ca9fjC
RvH6PV/MM53o7znYWKn16OK5RKdRj+9stOvcjPOIcqL9gXv+MPn4Pchp1OM3
G/3fVoyv83ai/YK7P8QdXmLt4jTq8ZcNkyuWtvcXOtH+YQ297n0fM2Y7je6H
AtZwnfMwwoBDHsLWsK/xPHhzAnmIWuP918dns9jkIcH9+QyxNeYm5CFlDU3h
yjEv9J3o/URrvLNVXL5agzzkrdFcOP/IYkUnuj+zhrfOqzWSUuShao17EmWT
rwmRh7o1MhU/b6z460j7hzVarp1pW/zTkfYPa/iUH1qn8tVxdL/Vt8a3xDT2
i3eOtH9YIzLqXN7eF460f1jDV29mWdZDR9o/rFEmeGTOwg5H2j+s4Tj/Upv+
dUfaP6xh289+97vdcXR/Zltj4rHd7R2nHOn+zxoz1T467D/qSPuHNTq9dtdW
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
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[Large], 
        LineBox[CompressedData["
1:eJwtzglUzfkbx/EbSchf+77clpvqdususwj5fRhrf8rE1Ixpv3VbtWhRaV9F
lpItlBSKsrVY5oRyJCkpcluIkH+DDFNILv5jep5z7rnnd87zfT1vY58wZ79J
LBbr8j+/b/8T84aZ0uLW3pRylync/23eMvd+qDnv8PwOI/p3RpiTFhcNH5e1
MW2t32aUyTJ/1u+KFkby77xnOKfEbhERN5gJb4xZ9npxmZzWdfI+MprHHP6K
0b5G3ifGOTQvaLtPA3kyZrWZ48P/3rlC3hdm4IQs4ah9PXksDHGH40o/XaJ9
FgIPjn/pkl0gXw4rOhzf+845T+8ngVXJ/ZtXVkv3JuOlVl7buF0NefJwbNn6
5+7Rc+TJI7u8sXig7Sx5U8BzcjZ3aTxDngIq1YrXehSfJm8qxPvUam4OVJGn
iDReUsi7FZXkKcKhr71AfPcEedPwk8v5eMf4CvKmQ0Mh6fywXTl5M+AZpy5t
Uj1OnhJqA0/dkk46Rp4S1ogiCwPkj5I3E0eeVC5N0iwj7z9IVdo/Sd6ulLxZ
qLL5k70n6Ah5yvBiO1RGVpTQvjJUFVQ7TUYPk6+Mzvj2aiOHw/ReBYojJ5Sz
1xTTPRUMpvSoj5sXkaeKXdU3F1+edog8VeyVcCJXfT5AnirkWVY3x74WkqcG
k8aicb5yIXlq8F7usrfOej956sjtfaAvXbuPPHXcnnkhajh7L3nquHf5rKPw
+h7yNLB0u86qu0p7yNNA7yrpGaHbbvI0oRdg0JNZU0CeJl4vEqRGqReQpwlx
/6W2gU27yNOC1GKk/PcX+eRpQW94vq6+Zz552hh6OjLc0ZNHnja6HL8aLV+X
R542Tke/5LU+2kmeDho0Uztbg3aSp4OcY4z9qdEd5Okis6GibarBDvJ0Ycax
V6py3E6eLmp/lNZsyt5Gnh6cLK5mJzbnkqeHmcbi633KueTpo1pcLJ3utZU8
fXQYfS7l1W0hTx+yVj57oeoW8gxw8PLjW9yoHPIM8MnzxpOTfZvJM8SL27+8
PLl8M3mGML/8pPHZpWzyDPG6TJjOEmaTZwTbEgXZ6aos8oygUH0q5iIvizw2
3mvU13HPZdI+G6sfdOcYzs0kn42skUs7hpsy6D0bpgGZTh6uGXSPjQUeCsG1
L9LJM8Za5x3pX1LTyTPG04YKQyf9dPKMIbNdeSbhYhp5xtj/lyzBfl0aecbQ
0lGWpH1OJc8EWw+r2TuWppJngpK46H2RK1PJM8EXu/QGrw8p5JlgwF2SW3g0
hTwTBP9cMmj3Swp5puhXq3xTOzWFPFNMe3wuuTw2mTxTvH1YYbVpMIk8U2zp
8dK745JEnikGfko2u9maSJ4Zejd7+o0tSSTPDPly0dOvNCaQZwZHnaDe54sS
yDPD076xwN1Nm8gzg6RzvkLyqk3kcXD/RejyF9J48jj48Vm7c69vPHkcNH9v
xnwciSOPA/e9jxacy4ojjwPZnBa3hfpx5JkjpIFtmlwTS545Sq53u9s4xZJn
DoPUjDvurzaSZ46PAweHOLkbyTNHUfBOfgVvI3mzkWg5bWNHRwx5szF0tyVb
Ky6GvNlQrFHpM2LHkDcbNwZtYrNbosmbja5o60fNMdHkWcC2z9BkJieaPAvU
ly3IWNEVRZ4FGppUllhlR5FngaSCfk7f3CjyLBDdfVpO+CaSPEvk6wn+Fh2P
JM8SCcpxrGbPSPIsUfJF7bdRnUjyLLG/KHPx8a4N5Fli1iHXI9L8DeRZYUlw
gw/z8wbyrOD/SKvRSmUDeVaQelwQLOmMIM8KH8wGudKCCPKsINg6cPvkrxHk
cTGnNvj9LYMI8rhYm5dwYeRpOHlc5O35NcvyZDh5XMzLeZjUFBlOHhd7XeUv
ZNmHk2eNq7GCbb8phpNnDR29wHx2eRh51uBEfpD1Lgwjzxrz7qR1eDwMJc8a
smcqZUXxoeTx8Ptcr8kFOqHk8TBloUaEzh/ryeOhwXfetXH39eTxMGa3vHXW
5PXk/fPdHZbuVRFCng1GBhr85JxDyLNBVffBHv9PweTZoDc31vXJsWDybNAd
9kD77Zpg8mww9fv2NRpyweTZIrH4tSfrbBB5tmjpGTwy6h1Eni1yJSNHy9WD
yLPF9cc36yubA8mzxSvb3V4hyYHk8cE847kyPwRO7OvwUVGagorXAeTzAY3C
fa+OB0y8X8mH81t7bppPAN3jwy3vUbSqYcCEl8LH3WqmpLbXn+7z4R3eeb9u
n/+EV81H1qHWi1dd/amHj2TT+JV1Wv4T3nM+vlufKa/bI6E+ARyaj7eEHpBQ
nwBD7SNnv7pLqE8AowP2rMUmEuoTYBF/0h9J//OjPgG+Uypd8aHKj/oEWL0s
altRlB/1CVA/lnO4fr4f9Qng0zbznXSKH/UJcEvpAetSuy/1CbBU3+S+oNCX
+oToshry2ijxpT4hbkwOTGwV+lKfEO9m5Gs//yqmPiH6M9KMrrWJqU8I3aIn
3mEHxdQnRNNtzXm9wWLqEyJnZcbkh/PE1CeE4HDW1jol8lqFkLPc7ubf70N9
Qtj1sesOnPGhPhEUt+26V5zuQ30ieLidl2m7+lCfCIIal+0buD7UJ0JJQccy
fxZ5EhEMG/0UZtz3pj4R8qWZDvqV3tQngovy2rLxNG/qE2HGKacrnuu8qU8E
g+i6WE+hN/WJsDq9J+TTdG/m/7017/g=
         "]]}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}, {}, {}, {}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, 
       {RGBColor[1, 0, 0], PointSize[0.006944444444444445], Thickness[
        Large]}, {}, {}, {}}}, {{}, {}}}, InsetBox[
     TemplateBox[{"\"CSS-NLO\"", "\"NLO-HpT-MON\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox["\"N=3\"", {
                  GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, 
                 StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "10"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"N=3\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "5"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.7, 0.7}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"d\[Sigma]/dpT\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox["\"pT\"", TraditionalForm], 
      FormBox["\"NLO Contribution\"", TraditionalForm]}},
   FrameStyle->Directive[
     GrayLevel[0], 12],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {-0.0046401410891368094`, 0.3047349}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
6Cw6okge4Ww87zBZvUeSPKLYkFrW/He7IHnEsjF7iUHhtiFn+vsBNnxthw0b
vzuPeiSxYTj+SM+Oj850PeJ+/5j2luZXzqMe6dzxCm/b3vrYma5P3PWRemvX
xXvOox7ZbJTZnTvfed2ZrldsYOjXl95251GPAq7vjG/mIyed6frFXf8rWFlq
R5xHPUrY4HfR67bZ60zXMzaWPXab7tzoPOpRyUZq6JLW1A3OdH3jzo9Ope2G
lc6jHnVsrFKuPneh0pn+XoHb46xHDt+KnEc91rChUzfwTifbma5/3PV3NqRg
SYrzqMcGNvYXHtQtjnGm6yEbDXH+p0+FOI96bGGj9d8f718+znR9ZONkjcQf
G1fnUY8mNjgh6itTFjnT9ZKNd42HTI7Pdh712MP1cw08PjLVma6f3PUUcnTa
3AnkcYANp/qJ51ZZkcdhNnY3Zo9/Y0weR7m9SctvnqBHHq1s1HGKhivVyOME
G+uKw+e9kSOPNjZeiSwphTh5nGUj7MrNI5v4yeM8Gx17Um6NDDqNelxk41fs
k3tB/U50PWaDuWdN+7UPTqMe17jzfX/KBptXTnR9ZmPtxFDvLY+dRj1uc9ez
wC4B+ftOdL1mo9uqoarwhtOox302MupfDv2+4ETXbzYSfkovSGhzGvV4yIbu
1VNLPx11ous593qYWFEZ2ew06vGMjSnGqpkfm5zo7zPYuNT3d0Zcg9Ooxys2
Xh541juwxok+j87tTdUjLLfWadSjl3s+e6VPS5Y50fWfO/6rGz+uz3ca9fjC
RvH6PV/MM53o7znYWKn16OK5RKdRj+9stOvcjPOIcqL9gXv+MPn4Pchp1OM3
G/3fVoyv83ai/YK7P8QdXmLt4jTq8ZcNkyuWtvcXOtH+YQ297n0fM2Y7je6H
AtZwnfMwwoBDHsLWsK/xPHhzAnmIWuP918dns9jkIcH9+QyxNeYm5CFlDU3h
yjEv9J3o/URrvLNVXL5agzzkrdFcOP/IYkUnuj+zhrfOqzWSUuShao17EmWT
rwmRh7o1MhU/b6z460j7hzVarp1pW/zTkfYPa/iUH1qn8tVxdL/Vt8a3xDT2
i3eOtH9YIzLqXN7eF460f1jDV29mWdZDR9o/rFEmeGTOwg5H2j+s4Tj/Upv+
dUfaP6xh289+97vdcXR/Zltj4rHd7R2nHOn+zxoz1T467D/qSPuHNTq9dtdW
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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJwtzglUzfkbx/EbSchf+77clpvqdususwj5fRhrf8rE1Ixpv3VbtWhRaV9F
lpItlBSKsrVY5oRyJCkpcluIkH+DDFNILv5jep5z7rnnd87zfT1vY58wZ79J
LBbr8j+/b/8T84aZ0uLW3pRylync/23eMvd+qDnv8PwOI/p3RpiTFhcNH5e1
MW2t32aUyTJ/1u+KFkby77xnOKfEbhERN5gJb4xZ9npxmZzWdfI+MprHHP6K
0b5G3ifGOTQvaLtPA3kyZrWZ48P/3rlC3hdm4IQs4ah9PXksDHGH40o/XaJ9
FgIPjn/pkl0gXw4rOhzf+845T+8ngVXJ/ZtXVkv3JuOlVl7buF0NefJwbNn6
5+7Rc+TJI7u8sXig7Sx5U8BzcjZ3aTxDngIq1YrXehSfJm8qxPvUam4OVJGn
iDReUsi7FZXkKcKhr71AfPcEedPwk8v5eMf4CvKmQ0Mh6fywXTl5M+AZpy5t
Uj1OnhJqA0/dkk46Rp4S1ogiCwPkj5I3E0eeVC5N0iwj7z9IVdo/Sd6ulLxZ
qLL5k70n6Ah5yvBiO1RGVpTQvjJUFVQ7TUYPk6+Mzvj2aiOHw/ReBYojJ5Sz
1xTTPRUMpvSoj5sXkaeKXdU3F1+edog8VeyVcCJXfT5AnirkWVY3x74WkqcG
k8aicb5yIXlq8F7usrfOej956sjtfaAvXbuPPHXcnnkhajh7L3nquHf5rKPw
+h7yNLB0u86qu0p7yNNA7yrpGaHbbvI0oRdg0JNZU0CeJl4vEqRGqReQpwlx
/6W2gU27yNOC1GKk/PcX+eRpQW94vq6+Zz552hh6OjLc0ZNHnja6HL8aLV+X
R542Tke/5LU+2kmeDho0Uztbg3aSp4OcY4z9qdEd5Okis6GibarBDvJ0Ycax
V6py3E6eLmp/lNZsyt5Gnh6cLK5mJzbnkqeHmcbi633KueTpo1pcLJ3utZU8
fXQYfS7l1W0hTx+yVj57oeoW8gxw8PLjW9yoHPIM8MnzxpOTfZvJM8SL27+8
PLl8M3mGML/8pPHZpWzyDPG6TJjOEmaTZwTbEgXZ6aos8oygUH0q5iIvizw2
3mvU13HPZdI+G6sfdOcYzs0kn42skUs7hpsy6D0bpgGZTh6uGXSPjQUeCsG1
L9LJM8Za5x3pX1LTyTPG04YKQyf9dPKMIbNdeSbhYhp5xtj/lyzBfl0aecbQ
0lGWpH1OJc8EWw+r2TuWppJngpK46H2RK1PJM8EXu/QGrw8p5JlgwF2SW3g0
hTwTBP9cMmj3Swp5puhXq3xTOzWFPFNMe3wuuTw2mTxTvH1YYbVpMIk8U2zp
8dK745JEnikGfko2u9maSJ4Zejd7+o0tSSTPDPly0dOvNCaQZwZHnaDe54sS
yDPD076xwN1Nm8gzg6RzvkLyqk3kcXD/RejyF9J48jj48Vm7c69vPHkcNH9v
xnwciSOPA/e9jxacy4ojjwPZnBa3hfpx5JkjpIFtmlwTS545Sq53u9s4xZJn
DoPUjDvurzaSZ46PAweHOLkbyTNHUfBOfgVvI3mzkWg5bWNHRwx5szF0tyVb
Ky6GvNlQrFHpM2LHkDcbNwZtYrNbosmbja5o60fNMdHkWcC2z9BkJieaPAvU
ly3IWNEVRZ4FGppUllhlR5FngaSCfk7f3CjyLBDdfVpO+CaSPEvk6wn+Fh2P
JM8SCcpxrGbPSPIsUfJF7bdRnUjyLLG/KHPx8a4N5Fli1iHXI9L8DeRZYUlw
gw/z8wbyrOD/SKvRSmUDeVaQelwQLOmMIM8KH8wGudKCCPKsINg6cPvkrxHk
cTGnNvj9LYMI8rhYm5dwYeRpOHlc5O35NcvyZDh5XMzLeZjUFBlOHhd7XeUv
ZNmHk2eNq7GCbb8phpNnDR29wHx2eRh51uBEfpD1Lgwjzxrz7qR1eDwMJc8a
smcqZUXxoeTx8Ptcr8kFOqHk8TBloUaEzh/ryeOhwXfetXH39eTxMGa3vHXW
5PXk/fPdHZbuVRFCng1GBhr85JxDyLNBVffBHv9PweTZoDc31vXJsWDybNAd
9kD77Zpg8mww9fv2NRpyweTZIrH4tSfrbBB5tmjpGTwy6h1Eni1yJSNHy9WD
yLPF9cc36yubA8mzxSvb3V4hyYHk8cE847kyPwRO7OvwUVGagorXAeTzAY3C
fa+OB0y8X8mH81t7bppPAN3jwy3vUbSqYcCEl8LH3WqmpLbXn+7z4R3eeb9u
n/+EV81H1qHWi1dd/amHj2TT+JV1Wv4T3nM+vlufKa/bI6E+ARyaj7eEHpBQ
nwBD7SNnv7pLqE8AowP2rMUmEuoTYBF/0h9J//OjPgG+Uypd8aHKj/oEWL0s
altRlB/1CVA/lnO4fr4f9Qng0zbznXSKH/UJcEvpAetSuy/1CbBU3+S+oNCX
+oToshry2ijxpT4hbkwOTGwV+lKfEO9m5Gs//yqmPiH6M9KMrrWJqU8I3aIn
3mEHxdQnRNNtzXm9wWLqEyJnZcbkh/PE1CeE4HDW1jol8lqFkLPc7ubf70N9
Qtj1sesOnPGhPhEUt+26V5zuQ30ieLidl2m7+lCfCIIal+0buD7UJ0JJQccy
fxZ5EhEMG/0UZtz3pj4R8qWZDvqV3tQngovy2rLxNG/qE2HGKacrnuu8qU8E
g+i6WE+hN/WJsDq9J+TTdG/m/7017/g=
          "]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"d\[Sigma]/dpT", ""}, {"pT", "NLO Contribution"}}, 
      FrameStyle -> Directive[
        GrayLevel[0], 12], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 10}, {-0.0046401410891368094`, 0.3047349}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]]}, {"CSS-NLO", "NLO-HpT-MON"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {
         GrayLevel[0], 10}, LegendFunction -> "Frame", LegendLabel -> "N=3", 
       LegendLayout -> {"Column", {Automatic, 5}}]], {0.7, 0.7}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.827992587769354*^9, 3.827992654198738*^9, {3.827992688915163*^9, 
   3.8279926940159693`*^9}, {3.827993698203949*^9, 3.827993713494505*^9}, 
   3.827993749725175*^9, 3.828071997838402*^9, 3.82807229065755*^9, 
   3.828086598511635*^9, 3.828086875536598*^9, {3.828109328251306*^9, 
   3.8281093414016047`*^9}, 3.828109387972001*^9, {3.828109883362423*^9, 
   3.828109888673737*^9}, 3.828154311891925*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"06f6b223-2b4e-4a8c-9dd1-2db10af91117"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssNLOasptLargeN", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pt", ",", 
       RowBox[{"Num\[CapitalSigma]NLO", "[", 
        RowBox[{"1500", ",", "pt"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"pt", ",", "1", ",", "20", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<./datfiles/cssNLOasptLargeN.dat\>\"", ",", "cssNLOasptLargeN", ",", 
    "\"\<Table\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.827988136169176*^9, 3.8279881449674063`*^9}, {
  3.827988177644477*^9, 3.8279881991445704`*^9}, {3.8279888930248137`*^9, 
  3.827988941809746*^9}, {3.8279919430052643`*^9, 3.82799195433463*^9}, {
  3.827992116802793*^9, 3.827992119387903*^9}, {3.827992160004279*^9, 
  3.827992162962851*^9}, {3.828154331392826*^9, 3.8281543468218117`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"e5f884c4-477e-4c89-bb23-9ea48bf950af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<./datfiles/cssNLOasptLargeN.dat\>\"", ",", "\"\<Table\>\""}], "]"}],
     "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Blue"}], "}"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", "\"\<CSS-NLO\>\"", "}"}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "10"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<N=1500\>\""}], ",", 
        RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.7"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<d\[Sigma]/dpT\>\"", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<pT\>\"", ",", " ", "\"\<NLO Contribution\>\""}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8281556980534687`*^9, 3.828155727226529*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"f1847491-232f-431b-a1eb-66a57f2434ea"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{{}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large], 
        LineBox[CompressedData["
1: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
4KFNr8ZeWCYzNgUe2uRxLvTX3H/J8NAmmR6ZDNcfyfDQptTZv31yPyXDQ5u6
XJKfSrclw0Obgv2iX22qTYaHNolEzImOLkmGhzYZXq7Lk8pOhoc2XelvaTiY
lAwPbbrjU9lVE5EMD20qFWR1zfZPhoc2PV98qirOKxke2pTkRIEsj2R4aFOj
tMLWsOvJ8ODNZ9/tX+MuJMNDmyR2Lt2ZeiIZHto0cOBvwOIDyfDQoWOnbBI6
tmM+wjo0dajB/fz6ZPjokFf9CVPd5ZiftA4lbGm6mD8vGa836lDxzLL7xziY
r6oOHTmuuYYxKRl+OqRk/6SwlYn56+vQxgPaXd76yfDUocSrN19vVcN6WOjQ
H688QaZsMl6f1KGB4pQ/gyJYnyk6vPvXTVfL/iXBW4cYp3x9A/uTRl7vs9Yh
45e3Fl7rToK/Dpnoajkf6EgaWb9FOnR98RbDtQ1J2A861LFr+5L5FUkj67la
h9Y/oy8z85OwP3Qo/YsMnxU3aeT1QQcdqpj285xVXBJeX9Oh82bqjhSaNLLe
e3VoqUlQxELfJLz+qUPJ62vXbniaNLL+x3Qo42njhsP3krCfdGj7vv6YW9eS
RjxcdIjzfdfGMJck7C8dsvx83q76RNKIx3UdUvW7dnP4QBL2mw49GmwQZTsm
jXh48OZDpdk7NiZh/+lQ3PyshBcrk0Y8vHnrY6/d1rowCftRh4qkF081mp00
4hGgQy9dUlIOWSVhf+qQrXiHY7pl0ohHtA5Jb5s2XtEkCftVh+wv2Wge1IFH
qg49CbmsU6oMj0wdGrPi2pRx0vDI06GnOs1bno6BRzFvfT8oPRD9lzjiUaFD
KS/Ly8/0J2J/65DpxkDp/u7EEY8mHfIhm8WHOxPxeq0O2Z1b7PajMXHEo0uH
QhYfij5dlYj9r0NqnVuqRIoSRzx6dahnf23r48xE9KBD3WPu1lokJY54DOrQ
1eil0QWRiehDl1zXNhzcHZiIPnRJLnForNTLRPShS292XDkV/zgRfehSF3dp
+o47iehDlyR7WDUqVxPRhy7lVoxJKD+fiD506b5YgsOtE4noQ5fGvzMrW3Iw
EX3o0o+1S4cUdiaiD10SEFZ417IpEX3oUrn2Ibdw+0T0oUt3T22qd12SiD50
6dGxt00b5iaiD971BvtuWM1MRB+6xOfs364xKRF96NJAjXCzoAU87HTpjrPO
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
rrApe5zsLLVBfzyfsWngntLDx/3+Ix432dS3MGC5yjd/PL+xKeGy3nHPbv8R
j7u8/VHWNqz+wR9/r8DzlJ/99XmH/4jHIzb5+PrMNmzxx/Mfm8ZPdBgKbvAf
8XjGJo/6epUJNf54PmSTl8i+x6kV/iMeL9m04OHxU/NK/PH8yKYdqWvSqvP9
Rzz82LRB8fC2rdn+eL5kU/lDvd3fuP4jHsFsOvuksPRCsj+eP3n91BXel4/3
H/GI4K3X7kvxflH++HsInk/WmqnTwvxHPGLZtDE1UKUi0B/Pr7yer9ev3PXa
f8QjiU0zuAt6+F764/mWTbMWbml78sx/xCOdTeFnz7InPfbH30+wKVNgTEPl
ff8Rjxw2fe7Y2HzIHR55vPW68nGqzA14FLJpTKTk14jL8ChmU8h51tDyi/Ao
4/V8MGbLwFl4VLDJd7WAxtOT8Kjm9b/3vPmsY/Co5V3f6p7Hh0PwqGdTbOjL
ZXf3waOJTX6iig7TdsHjLc+jZ0VO1zZ4tLFJfkXumfub4dHB6+9W9eVZ6+HR
xaZtC96399rD4wObHO7svPNyOTw+symKm3Z7xRJ4fGHTybv2zWMWwKOXTS+U
PU8n28Cjj03XU3p3Oc2CRz+bPlnn+zJmwOMXmw7nXLdomwKPQd7zWZyP8NMJ
8PjLez5uPWdiz4YHnyUZbrvqKcf0HzkPBSxJNIG5qtwYHsKW9CC0br27PjxE
LGn87t8hS7XhIWZJxx2HbGXV4SFhSVInljKrlfzx+0RL2pq5Ze1jOXjIWtKq
HO/SjVL+uD+zJNnlzjcMxOChbEml7hvcu4XhoWpJlwaT6mP54aFhSeFbBfe4
/PXD+WFJpj2vOYt++42ct7qWVCwnv0613w/nhyUteJGc8L7XD+eHJb2PlVkf
3+2H88OSZua50tUPfjg/LEnk6eVd6zr9cH5YUt2CG5XmrX4j5zPbknqshc4J
NPnh/s+Smmdt31NX64fzw5Kc12g9Cq/yw/lhSUc+vha8WuaH88OSrAIPhDsU
+eH8sKQYr27P6Xl+OD8siV/LI1Mlyw/3i5Y0p7KeMZDmh/PDknZHjyuuTvLD
+WFJX8QUQmLi/HB+WJLX4b68B1F+OD8saUP1XG3nML8Rj6WW1Lf7UuT6ID+c
H5ZUmKJ3jvz8RjxWWlL268eXjF754fzgrdeijdmS3n44PyxpssmH6QOefjg/
LOk8X2RPywN4bLIk+fesmsK78HCwpNuc5v64W/DYZkkhSZaLfK/Bw5G331b7
1d1zg8cuS2rbEvPk4gV47LWkj05v7h45C48DvP3l5Jq64yQ8DlnS9HtTNNce
g8cRS2LYH4xY7ASPY5akff3V8dn74eFsSfm2iw9a7YbHKZ7nj0+e43bA46wl
2c3+2W/mAA8XS9rF/nLRaCM8LlqShfAi0lsLDzdL6lx1y1x7FTyuWNIAP2uB
5v9arvt4rO4/juMorTWFiCmU3FVb6Xy/NBb9PohEaqXE6lcN3WGlVYtSUROR
ilrLiuKcg+aXkURkmZvuNxmjkG40KSW5K8r6ncej99/XdZ3rOp/n9/t9XWch
PGIFOsmzfzT0hMcBgf5YGaNpNBcehwRqd5lZYOwCjwSBTr+cfcDEER5HBcrK
MT1o7gCPn5TrWXhfmmIHjySBMmyX6Qk28DgpULj+uRO2AjxSBHpj3+DhOBUe
qQJpBHtZeEyGhyhQRE7yFG9zeKQLlLfCzsfPBB6ZAoXpZGRvNIJHlkCteWun
7jKAR7bi9+27mvgx8MgRqDqvNTVFGx55yvqanXksZyQ88gXqMi3PLf8YHoUC
7Tl5sateHR5FApXQKN8XqvAoUdbjU+fHQ/6V0Q+BVhXcOzJuQMb/d4GuaK5c
a90nox/KeXTKY8X8Lhn9EGiIr2Xo+g4Z/RDo0Zbvz0c9k9EPgYRNJaPFVvmD
R5VA8dqRib8/ktEPgTpXuPKHzfIHj1qBVmYk9qg2yuiHQI072/82rZfRD4FM
iurqXGtk9ENZP6ENfYFVMvqhnIcGO20O35TxfCBQjaNL4oWrMvoh0KGGixrN
5TL6IZCVlp80rFRGPwR6uajSZ/olGf1QzhfvoMnLCmX0Q6Cz2k1jos/LeJ4Q
6Phvp4zO58gfPLoF0mqYRY/+J6MfAp0xddqpfUZGPwTakcxqHWUZ/RBoMC5p
9uZUGf0QqGyryp9yMjxUGAWYvtp4NwkeaozcT/VOHnUMHuqMttgcf+ucCI+P
GC3f7P94+0F4jGB0yfJRy7lYeGgwCvI71d++Dx6ajKZssTC32AsPbUYbO9TW
fLMbHrqMFoilxck74KHPyFZuN2/cBg8DRvddtSSDLfAwZNQ1ttjGNwQexoxG
9IQ2JAXDw4TR1sd1CY3r4GHKSHWW3zLj1fKH5zcLRs0JmTP8voHHJEbBOV+Y
ZvwXHp8xUj+TPOGFLzymMXpxfd00a294TGc06rTlvPBF8OCMqvvWhVXOh4cN
o3/ri/M1PeBhyygm7leVZXPg8SUjv59qfDOc4eHAaMnlgtKe/8CDGLUNfW7t
bA8PJ+X7MlQuJNrCw4WR2cR9zi3W8JjDKNdq5D1rAR7ujJyvWOyJngqPeYzs
DQJY42R4LGBUfNz7hZUFPBYq/q8OnYuaCI/FjGZopEU2GcNjKaOQUeO/th4H
D19GXr5JM+P14bFcmX+saP5EBx4rGEWE3dZ30oLHN4zM7fO0UzTg4c+o1eT+
6LfD4bGG0b38J2N91eGxjpHPb6smF6rCI4hRqH2zw6f/SugHI6fgnqVhAxL6
wci14ottjX0S+sEotdf+xKxuCf1gVNB+vDztpYR+MDK89eDlR88l9IPRmr4z
4ze0SeiHsl6Gxi76+7GEfjAad00vxuGhhH4o639B6+X0exL6wajj/sF+rQYJ
/VCu359uHV4noR/K9b0qQ9r+ktAPRvxBxNklVRL6wSjnesiz8psS+sHo8nef
W/JrEvrBqPB7D3+xQkI/GC08szpF93cJ/WC0SU/nzr4SCf1gpK32XHPgooR+
MNJvi3HZcEFCPxiND98T2nJOQj8YbTizKdP3V+mDR7qynxNf1t7OktAP5f4T
fxx0y5TQD0altoMmZRI8shn1zi91tE+FRw6jhzWhywuS4ZGn7K/B0k38Z3jk
K9ez5ZE5x+BRyOgfi8DYaUfgUaTMT1SJP3sIHiWMhEsJMVMPwKOUUV5BYXh2
DDzKlP2mpb1+ehQ8KpX1EDbDMy8SHlcZedRXTPpiFzxuMPKd4/O2eDs8bjEa
Oi6+wnEbPKoY6d19v/faZnhUM1rv4Gn3VQg8ahndsB39+E4wPOoZXets3+u3
Hh53GSVe3vbpi9XwaGLUyb1SQ/3g0czouZahsfpKeDxk9MQz5GDiMni0MPLW
63g1wQcerYx+vs7dchbDo02534H7h2khPNoZBW5KuFntCY8OZb9aPnnt7w6P
Tkbv3CPGvHaFR7dy/w7vTOOc4dGrrN/EgYkTCB5vGNnojBt9wR4eA4wOFg52
zrODx6CyfnKcLj+2gYcKpwu+seE7GTzUOJ2Ys3WSvhU81DnFzpLKcj+Dx0ec
gm0K3T0nwWMEp+VLFpU+NYOHBie/fh3TaBN4aHIKzU75ztwYHtqc3PjR7Iqx
8NDlZBR6rC5AHx76nMpS5jxT14WHASevgblPM7TgYcjJXpNq3EfCw5jTs8Rb
GR0fw8OEU1NQ4pojw+BhymlFrrWm3RB4WHDaleWdev+9iH4on//rhGH0OxH9
4FRyOyPCql9EPzjt2GX8x51eEf3gdP8fUXVvl4h+cPqdmoymvRTRD059b4JM
GtpF9IOTXebrT6LbRPSDU7++2T3rf0T0Q5mH47GjLQ9F9INTxbxu4UiziH5w
Wpr44Lxzo4h+KO9PGmLUWy+iH5w69NUCM2pF9INTXnfkia+rRfSDUzNNzh31
p4h+cIpzSvml/IaIfnAKD4yODrsqoh/K7/eJmzO9QkQ/OBU1ffXsSamIfnD6
q2vXxtMlIvqhzPPKpTrfIhH94KSZmztet0BEPzhV2am7V+WJ6Aene2NWLonL
EdEPTgaT1jq6nYXHOk6qkZUjh/0CjyBO8SsmFlWkw2MDJ8PPLVx/EOERwmnR
nrDc2afhsZmTimXlW/VkeGxV5q1xzuxaEjxCOWksfvpZ3DF4bOd0zU1Xe8ER
eOzkFBnQVKNzGB4RnCZ4tm++ewAeezip/f2s89R+eERxahv4wX3tPnhEc6p9
6h9htRcesZy63wiJb3bD4wCnTVlJu8vC4XGI0/YcF7f4MHgkcHr16EG7z/fw
OMpp31y9QPPN8PhJ8dJLKOvaCI8kTvsz3vWUBsPjJKfqqKGqh9fDI4XTpdWL
W1eugUeqMn+L49J0f3iInG7W7Jiptgoe6cp+TMv6pXY5PDI5OXXVvMrwhUcW
p2ULUrXCveGRzcl2Y+mwhV7wyFHmxZprLL6CRx6nurSMbYPz4JGv7Me+669q
58KjUJnngS7Hs67wKOKk8+LPtfuc4VHCqeeWhv8qgkcpp5bhX/OZDvAo49Se
EXBH70t4VHK63tCwsHsGPK5yuvU28NRtDo8byv46WF6aPR0etzg10JH8+Knw
qOIU3Raz89sp8KjmFBTl9el8S3jUKvdLaVFWZvCo55QeaFapbQKPu5xm7N5f
12MEjyZOZBJ58c5YeDQr54th8bcl+vB4yGn2middabrwaFH8xl5w268Nj1ZO
9bvrN4SMgkcbp9dq7wJ8PoFHO6eRX9ZOcRwOjw5Ow1u0Sqeow6NTOU9b/MzG
qMGjm9MI9x1LVd6noR+cAjw+8X3+Ng394KTlUjHp7ps09EOZT/HSK1d609AP
5fXl24T8rjT0w5r8+2vXSy/TLv8faH6s5A==
         "]]}}, 
      {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[Large]}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[
        Large]}, {}}, {
       {RGBColor[0, 0, 1], PointSize[0.006944444444444445], Thickness[
        Large]}, {}}}, {{}, {}}}, InsetBox[
     TemplateBox[{"\"CSS-NLO\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox["\"N=1500\"", {
                  GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, 
                 StripOnInput -> False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontSize -> 10, FontFamily -> "Arial"}, StripOnInput -> 
          False], Background -> Automatic, RoundingRadius -> 5, 
         ContentPadding -> True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "10"}], "}"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"N=1500\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "5"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.7, 0.7}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"d\[Sigma]/dpT\"", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]}, {
      FormBox["\"pT\"", TraditionalForm], 
      FormBox["\"NLO Contribution\"", TraditionalForm]}},
   FrameStyle->Directive[
     GrayLevel[0], 12],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 10}, {-0.7332331667293902, 0}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.02]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
4KFNr8ZeWCYzNgUe2uRxLvTX3H/J8NAmmR6ZDNcfyfDQptTZv31yPyXDQ5u6
XJKfSrclw0Obgv2iX22qTYaHNolEzImOLkmGhzYZXq7Lk8pOhoc2XelvaTiY
lAwPbbrjU9lVE5EMD20qFWR1zfZPhoc2PV98qirOKxke2pTkRIEsj2R4aFOj
tMLWsOvJ8ODNZ9/tX+MuJMNDmyR2Lt2ZeiIZHto0cOBvwOIDyfDQoWOnbBI6
tmM+wjo0dajB/fz6ZPjokFf9CVPd5ZiftA4lbGm6mD8vGa836lDxzLL7xziY
r6oOHTmuuYYxKRl+OqRk/6SwlYn56+vQxgPaXd76yfDUocSrN19vVcN6WOjQ
H688QaZsMl6f1KGB4pQ/gyJYnyk6vPvXTVfL/iXBW4cYp3x9A/uTRl7vs9Yh
45e3Fl7rToK/Dpnoajkf6EgaWb9FOnR98RbDtQ1J2A861LFr+5L5FUkj67la
h9Y/oy8z85OwP3Qo/YsMnxU3aeT1QQcdqpj285xVXBJeX9Oh82bqjhSaNLLe
e3VoqUlQxELfJLz+qUPJ62vXbniaNLL+x3Qo42njhsP3krCfdGj7vv6YW9eS
RjxcdIjzfdfGMJck7C8dsvx83q76RNKIx3UdUvW7dnP4QBL2mw49GmwQZTsm
jXh48OZDpdk7NiZh/+lQ3PyshBcrk0Y8vHnrY6/d1rowCftRh4qkF081mp00
4hGgQy9dUlIOWSVhf+qQrXiHY7pl0ohHtA5Jb5s2XtEkCftVh+wv2Wge1IFH
qg49CbmsU6oMj0wdGrPi2pRx0vDI06GnOs1bno6BRzFvfT8oPRD9lzjiUaFD
KS/Ly8/0J2J/65DpxkDp/u7EEY8mHfIhm8WHOxPxeq0O2Z1b7PajMXHEo0uH
QhYfij5dlYj9r0NqnVuqRIoSRzx6dahnf23r48xE9KBD3WPu1lokJY54DOrQ
1eil0QWRiehDl1zXNhzcHZiIPnRJLnForNTLRPShS292XDkV/zgRfehSF3dp
+o47iehDlyR7WDUqVxPRhy7lVoxJKD+fiD506b5YgsOtE4noQ5fGvzMrW3Iw
EX3o0o+1S4cUdiaiD10SEFZ417IpEX3oUrn2Ibdw+0T0oUt3T22qd12SiD50
6dGxt00b5iaiD971BvtuWM1MRB+6xOfs364xKRF96NJAjXCzoAU87HTpjrPO
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
rrApe5zsLLVBfzyfsWngntLDx/3+Ix432dS3MGC5yjd/PL+xKeGy3nHPbv8R
j7u8/VHWNqz+wR9/r8DzlJ/99XmH/4jHIzb5+PrMNmzxx/Mfm8ZPdBgKbvAf
8XjGJo/6epUJNf54PmSTl8i+x6kV/iMeL9m04OHxU/NK/PH8yKYdqWvSqvP9
Rzz82LRB8fC2rdn+eL5kU/lDvd3fuP4jHsFsOvuksPRCsj+eP3n91BXel4/3
H/GI4K3X7kvxflH++HsInk/WmqnTwvxHPGLZtDE1UKUi0B/Pr7yer9ev3PXa
f8QjiU0zuAt6+F764/mWTbMWbml78sx/xCOdTeFnz7InPfbH30+wKVNgTEPl
ff8Rjxw2fe7Y2HzIHR55vPW68nGqzA14FLJpTKTk14jL8ChmU8h51tDyi/Ao
4/V8MGbLwFl4VLDJd7WAxtOT8Kjm9b/3vPmsY/Co5V3f6p7Hh0PwqGdTbOjL
ZXf3waOJTX6iig7TdsHjLc+jZ0VO1zZ4tLFJfkXumfub4dHB6+9W9eVZ6+HR
xaZtC96399rD4wObHO7svPNyOTw+symKm3Z7xRJ4fGHTybv2zWMWwKOXTS+U
PU8n28Cjj03XU3p3Oc2CRz+bPlnn+zJmwOMXmw7nXLdomwKPQd7zWZyP8NMJ
8PjLez5uPWdiz4YHnyUZbrvqKcf0HzkPBSxJNIG5qtwYHsKW9CC0br27PjxE
LGn87t8hS7XhIWZJxx2HbGXV4SFhSVInljKrlfzx+0RL2pq5Ze1jOXjIWtKq
HO/SjVL+uD+zJNnlzjcMxOChbEml7hvcu4XhoWpJlwaT6mP54aFhSeFbBfe4
/PXD+WFJpj2vOYt++42ct7qWVCwnv0613w/nhyUteJGc8L7XD+eHJb2PlVkf
3+2H88OSZua50tUPfjg/LEnk6eVd6zr9cH5YUt2CG5XmrX4j5zPbknqshc4J
NPnh/s+Smmdt31NX64fzw5Kc12g9Cq/yw/lhSUc+vha8WuaH88OSrAIPhDsU
+eH8sKQYr27P6Xl+OD8siV/LI1Mlyw/3i5Y0p7KeMZDmh/PDknZHjyuuTvLD
+WFJX8QUQmLi/HB+WJLX4b68B1F+OD8saUP1XG3nML8Rj6WW1Lf7UuT6ID+c
H5ZUmKJ3jvz8RjxWWlL268eXjF754fzgrdeijdmS3n44PyxpssmH6QOefjg/
LOk8X2RPywN4bLIk+fesmsK78HCwpNuc5v64W/DYZkkhSZaLfK/Bw5G331b7
1d1zg8cuS2rbEvPk4gV47LWkj05v7h45C48DvP3l5Jq64yQ8DlnS9HtTNNce
g8cRS2LYH4xY7ASPY5akff3V8dn74eFsSfm2iw9a7YbHKZ7nj0+e43bA46wl
2c3+2W/mAA8XS9rF/nLRaCM8LlqShfAi0lsLDzdL6lx1y1x7FTyuWNIAP2uB
5v9arvt4rO4/juMorTWFiCmU3FVb6Xy/NBb9PohEaqXE6lcN3WGlVYtSUROR
ilrLiuKcg+aXkURkmZvuNxmjkG40KSW5K8r6ncej99/XdZ3rOp/n9/t9XWch
PGIFOsmzfzT0hMcBgf5YGaNpNBcehwRqd5lZYOwCjwSBTr+cfcDEER5HBcrK
MT1o7gCPn5TrWXhfmmIHjySBMmyX6Qk28DgpULj+uRO2AjxSBHpj3+DhOBUe
qQJpBHtZeEyGhyhQRE7yFG9zeKQLlLfCzsfPBB6ZAoXpZGRvNIJHlkCteWun
7jKAR7bi9+27mvgx8MgRqDqvNTVFGx55yvqanXksZyQ88gXqMi3PLf8YHoUC
7Tl5sateHR5FApXQKN8XqvAoUdbjU+fHQ/6V0Q+BVhXcOzJuQMb/d4GuaK5c
a90nox/KeXTKY8X8Lhn9EGiIr2Xo+g4Z/RDo0Zbvz0c9k9EPgYRNJaPFVvmD
R5VA8dqRib8/ktEPgTpXuPKHzfIHj1qBVmYk9qg2yuiHQI072/82rZfRD4FM
iurqXGtk9ENZP6ENfYFVMvqhnIcGO20O35TxfCBQjaNL4oWrMvoh0KGGixrN
5TL6IZCVlp80rFRGPwR6uajSZ/olGf1QzhfvoMnLCmX0Q6Cz2k1jos/LeJ4Q
6Phvp4zO58gfPLoF0mqYRY/+J6MfAp0xddqpfUZGPwTakcxqHWUZ/RBoMC5p
9uZUGf0QqGyryp9yMjxUGAWYvtp4NwkeaozcT/VOHnUMHuqMttgcf+ucCI+P
GC3f7P94+0F4jGB0yfJRy7lYeGgwCvI71d++Dx6ajKZssTC32AsPbUYbO9TW
fLMbHrqMFoilxck74KHPyFZuN2/cBg8DRvddtSSDLfAwZNQ1ttjGNwQexoxG
9IQ2JAXDw4TR1sd1CY3r4GHKSHWW3zLj1fKH5zcLRs0JmTP8voHHJEbBOV+Y
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
5fXl24T8rjT0w5r8+2vXSy/TLv8faH6s5A==
          "]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, {}}}, {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"d\[Sigma]/dpT", ""}, {"pT", "NLO Contribution"}}, 
      FrameStyle -> Directive[
        GrayLevel[0], 12], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 10}, {-0.7332331667293902, 0}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]]}, {"CSS-NLO"}, 
       LegendMarkers -> {{False, Automatic}}, Joined -> {True}, LabelStyle -> {
         GrayLevel[0], 10}, LegendFunction -> "Frame", LegendLabel -> 
       "N=1500", LegendLayout -> {"Column", {Automatic, 5}}]], {0.7, 0.7}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.828155729011651*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"866613d2-9cae-4db3-984d-1ab596e2eb1e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check log(pt)log(N)", "Chapter",
 CellChangeTimes->{{3.827985475320418*^9, 3.8279854830330467`*^9}, {
  3.828075608854238*^9, 
  3.82807562085347*^9}},ExpressionUUID->"026741e3-1cd2-42ac-900d-\
abe62894e448"],

Cell[TextData[{
 "Here, we analytically check that the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", "(", "pt", ")"}], 
    RowBox[{"ln", "(", "N", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6f6d765a-5a4b-4d44-a25e-52230194401d"],
 " that are present in the small-pt match those from the threshold."
}], "Text",
 CellChangeTimes->{{3.828075625604145*^9, 
  3.828075693581791*^9}},ExpressionUUID->"91527e1e-8b24-41c3-b0ee-\
0b0980d3de5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A1", ",", "B1", ",", "CA", ",", "\[Beta]0"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.828075789767795*^9, 3.828075804989979*^9}, {
  3.828086456839922*^9, 3.828086458359166*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"2fe3d485-14af-493f-bfaa-6ba4dd3178c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CompareThreshold", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "q"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Gamma]0", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"q", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", " ", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"C1", ",", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"ToString", "/@", 
          RowBox[{"{", 
           RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
      "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"LptLN", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"d\[Sigma]NLO", "[", 
       RowBox[{"g", ",", "g"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"LR", "\[Rule]", " ", "0"}], ",", 
        RowBox[{"LF", "\[Rule]", " ", "0"}], ",", 
        RowBox[{"LQ", "\[Rule]", " ", "0"}]}], "}"}]}], 
     RowBox[{"(*", 
      RowBox[{"/.", 
       RowBox[{"{", 
        RowBox[{"B1", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"-", "2"}], "\[Beta]0"}]}], "}"}]}], "*)"}], "/.", 
     "CompareThreshold"}], ",", 
    RowBox[{"{", 
     RowBox[{"LC4", ",", "LC3", ",", "LC2", ",", "LC1"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8280753027366734`*^9, 3.82807530446666*^9}, {
  3.828075510156673*^9, 3.828075549174288*^9}, {3.828075782478819*^9, 
  3.828075785682355*^9}, {3.8280759663829107`*^9, 3.8280759744890823`*^9}, {
  3.828083366795157*^9, 3.82808336785061*^9}, {3.8280840339219313`*^9, 
  3.8280840377408333`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"7c386a7d-2e4a-42c7-89c9-858cac7fe8f8"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["A1", "2"], " ", "LC4"}], "8"], "-", 
  RowBox[{"A1", " ", "LC3", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["\[Beta]0", "3"], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "B1"}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"LC2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"A1", " ", "h1g"}], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "A2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"B1", "-", "\[Beta]0"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "B1"}], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}]}], ")"}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "B1"}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}], " ", 
      SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "+", 
  RowBox[{"LC1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "B2"}], "-", 
     RowBox[{"h1g", " ", 
      RowBox[{"(", 
       RowBox[{"B1", "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "\[Beta]0", " ", 
      SubscriptBox["\[Gamma]1", "\<\"gg\"\>"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.828075308359764*^9, 3.8280753275667753`*^9}, {
   3.828075550927863*^9, 3.8280755722615137`*^9}, 3.828075716203944*^9, 
   3.828075806924234*^9, 3.828075976218391*^9, 3.828083368735374*^9, 
   3.8280840413722486`*^9, 3.828086460301298*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"1f9ff74c-1acc-47ed-b15f-e898052edb84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LptLargeN", "=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"LptLN", "//", "Expand"}], ",", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{"Subscript", "[", 
         RowBox[{"\[Gamma]0", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"ToString", "/@", 
            RowBox[{"{", 
             RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "|", 
        SuperscriptBox[
         RowBox[{"Subscript", "[", 
          RowBox[{"\[Gamma]0", ",", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"ToString", "/@", 
             RowBox[{"{", 
              RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "_"], "|", 
        RowBox[{"Subscript", "[", 
         RowBox[{"\[Gamma]1", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"ToString", "/@", 
            RowBox[{"{", 
             RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}]}]}], "]"}], 
     "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.828075979759644*^9, 3.8280761089002*^9}, {
  3.828083077788681*^9, 3.828083081986876*^9}, {3.828083351701363*^9, 
  3.8280833819479713`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"be950a8d-93b0-47ab-8be7-c09ac5072f0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", "h1g", " ", "LC1", " ", 
   SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}], "+", 
  RowBox[{"2", " ", "B1", " ", "LC2", " ", 
   SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}], "+", 
  RowBox[{"A1", " ", "LC3", " ", 
   SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}], "-", 
  RowBox[{"LC2", " ", "\[Beta]0", " ", 
   SubscriptBox["\[Gamma]0", "\<\"gg\"\>"]}], "+", 
  RowBox[{"2", " ", "LC2", " ", 
   SubsuperscriptBox["\[Gamma]0", "\<\"gg\"\>", "2"]}], "+", 
  RowBox[{"2", " ", "LC1", " ", "\[Beta]0", " ", 
   SubscriptBox["\[Gamma]1", "\<\"gg\"\>"]}]}]], "Output",
 CellChangeTimes->{
  3.8280760460396023`*^9, 3.828076076667099*^9, 3.8280761094329767`*^9, 
   3.8280830830392847`*^9, {3.828083355367684*^9, 3.8280833828443823`*^9}, 
   3.8280840430850363`*^9, 3.82808646192229*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"28342d13-84e8-485a-b540-bd035f0ab906"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Recall", " ", "that", " ", "the", " ", "expression", " ", "below", " ", 
    "is", " ", "multiplied", " ", "by", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Alpha]s", "/", "\[Pi]"}], ")"}], "2"]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mapLC", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LC1", "\[Rule]", " ", 
        RowBox[{"-", 
         FractionBox["1", "\[Xi]p"]}]}], ",", 
       RowBox[{"LC2", "\[Rule]", " ", 
        RowBox[{"2", 
         FractionBox[
          RowBox[{"Log", "[", "\[Xi]p", "]"}], "\[Xi]p"]}]}], ",", 
       RowBox[{"LC3", "\[Rule]", " ", 
        RowBox[{"3", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"Log", "[", "\[Xi]p", "]"}], ")"}], "2"], "\[Xi]p"]}]}]}],
       "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"map\[Gamma]gg", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\[Gamma]0", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"ToString", "/@", 
           RowBox[{"{", 
            RowBox[{"g", ",", "g"}], "}"}]}], "]"}]}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"-", "CA"}], " ", "LNb"}]}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"LNb", "=", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"n", " ", "\[Gamma]E"}], "]"}], "\[NotEqual]", "Lnb2"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"LptLargeN", "/.", "map\[Gamma]gg"}], "/.", "mapLC"}], ",", 
     "LNb"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.828083211274156*^9, 3.8280833324509487`*^9}, {
  3.828083397349181*^9, 3.828083403604062*^9}, {3.828083740366405*^9, 
  3.8280838930731277`*^9}, {3.828083956118853*^9, 3.828083995934032*^9}, {
  3.828086431144023*^9, 3.828086435874957*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"7928a140-2861-4ee4-b7bf-94e4f28b93d1"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", 
    SuperscriptBox["CA", "2"], " ", 
    SuperscriptBox["LNb", "2"], " ", 
    RowBox[{"Log", "[", "\[Xi]p", "]"}]}], "\[Xi]p"], "+", 
  RowBox[{"LNb", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "CA", " ", "h1g"}], "\[Xi]p"]}], "-", 
     FractionBox[
      RowBox[{"4", " ", "B1", " ", "CA", " ", 
       RowBox[{"Log", "[", "\[Xi]p", "]"}]}], "\[Xi]p"], "+", 
     FractionBox[
      RowBox[{"2", " ", "CA", " ", "\[Beta]0", " ", 
       RowBox[{"Log", "[", "\[Xi]p", "]"}]}], "\[Xi]p"], "-", 
     FractionBox[
      RowBox[{"3", " ", "A1", " ", "CA", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "\[Xi]p", "]"}], "2"]}], "\[Xi]p"]}], ")"}]}], 
  "-", 
  FractionBox[
   RowBox[{"2", " ", "\[Beta]0", " ", 
    SubscriptBox["\[Gamma]1", "\<\"gg\"\>"]}], "\[Xi]p"]}]], "Output",
 CellChangeTimes->{
  3.828083404349792*^9, 3.828083862867234*^9, 3.828083893820045*^9, 
   3.828083999817168*^9, 3.8280840454186707`*^9, {3.828086437348208*^9, 
   3.828086463448492*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"ac0b89ac-acd5-4363-a305-3bb3013f3294"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Agth1", " ", 
        RowBox[{"Log", "[", "\[Xi]p", "]"}]}], "\[Xi]p"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"3", " ", "Agth1", " ", 
          SuperscriptBox["LNb2", "2"]}], "8"], "+", 
        RowBox[{"LNb2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["Bgth1", "2"]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "Agth1", " ", 
            FractionBox[
             RowBox[{"Log", "[", "\[Xi]p", "]"}], "2"]}]}], ")"}]}]}], 
       ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"LNb2", "\[Rule]", " ", 
       RowBox[{"2", " ", "LNb"}]}], "}"}]}], "//", "Expand"}], ",", "LNb"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.828085249133306*^9, 3.828085286539173*^9}, {
   3.82808534569013*^9, 3.828085393489139*^9}, {3.828085479529657*^9, 
   3.828085487501522*^9}, 3.828085556732277*^9, {3.828085847880507*^9, 
   3.828085848388668*^9}, 3.82808594740164*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"e12f8a49-c3f6-4128-bdc3-9045a7cc979f"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["Agth1", "2"], " ", 
    SuperscriptBox["LNb", "2"], " ", 
    RowBox[{"Log", "[", "\[Xi]p", "]"}]}], 
   RowBox[{"2", " ", "\[Xi]p"}]], "+", 
  RowBox[{"LNb", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Agth1", " ", "Bgth1", " ", 
        RowBox[{"Log", "[", "\[Xi]p", "]"}]}], "\[Xi]p"]}], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["Agth1", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "\[Xi]p", "]"}], "2"]}], 
      RowBox[{"2", " ", "\[Xi]p"}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.828085395066585*^9, 3.828085489397287*^9, 
  3.828085557987082*^9, 3.828085849277567*^9, 3.828085948948197*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"348ecce0-6728-4804-8cea-ebe12ee8c7fe"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{948., 1044.75},
WindowMargins->{{Automatic, 7.5}, {7.5, Automatic}},
Magnification:>0.7 Inherited,
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4b25da0d-4382-4f63-a51d-4a8871ac94f0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SetDirectory_templates"->{
  Cell[1541, 46, 355, 7, 21, "Input",ExpressionUUID->"9705a8fb-9b61-4663-9653-346d1ee7ea12",
   CellTags->"SetDirectory_templates"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SetDirectory_templates", 330715, 7052}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 419, 7, 57, "Chapter",ExpressionUUID->"8a9ff98f-0bbf-418b-aa97-dac2163ebe2d"],
Cell[CellGroupData[{
Cell[1002, 31, 216, 4, 42, "Chapter",ExpressionUUID->"722f086d-2af6-4144-a38c-74e54c86fa43"],
Cell[1221, 37, 317, 7, 24, "Text",ExpressionUUID->"9dcd3846-db54-4cba-96ed-6cb2d592fee8"],
Cell[1541, 46, 355, 7, 21, "Input",ExpressionUUID->"9705a8fb-9b61-4663-9653-346d1ee7ea12",
 CellTags->"SetDirectory_templates"],
Cell[CellGroupData[{
Cell[1921, 57, 315, 5, 31, "Subsubsection",ExpressionUUID->"167854bb-5de8-4f3a-8115-e1631bb625d1"],
Cell[2239, 64, 1321, 37, 52, "Input",ExpressionUUID->"0a8ebf0a-3577-4656-83dd-2eab2acc2206"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3597, 106, 367, 6, 31, "Subsubsection",ExpressionUUID->"3ef91cd9-199f-4d1f-a813-b1e0c3e6f33f"],
Cell[3967, 114, 504, 16, 35, "Input",ExpressionUUID->"e4754d1c-9cb5-4293-b9fe-bffa45deba57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4508, 135, 294, 5, 31, "Subsubsection",ExpressionUUID->"b48f08cb-ec50-48cc-b75d-28e46b285f7e"],
Cell[4805, 142, 2743, 75, 134, "Input",ExpressionUUID->"0bd61deb-fa26-4a62-9ae6-7991b8e80256"],
Cell[7551, 219, 1607, 47, 52, "Input",ExpressionUUID->"c17655ea-970d-4080-a77f-94758ca94ba2"],
Cell[9161, 268, 1807, 43, 48, "Input",ExpressionUUID->"401dbb38-2ff4-4785-a85c-a10ecda777e9"],
Cell[10971, 313, 1246, 35, 24, "Text",ExpressionUUID->"70d59eb6-a38e-42a0-8a6b-f21521812d02"],
Cell[12220, 350, 6527, 185, 178, "Input",ExpressionUUID->"280698ba-12ff-4cc3-92d4-607d9d974b23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18784, 540, 489, 7, 31, "Subsubsection",ExpressionUUID->"48fdb9c5-4e42-4bd1-b040-748484b31ad7"],
Cell[19276, 549, 987, 22, 52, "Input",ExpressionUUID->"dad17c13-c5f8-47a2-82b9-38d4ab7ed2b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20300, 576, 232, 4, 31, "Subsubsection",ExpressionUUID->"7ae029ac-440f-4777-b817-4766231c4af0"],
Cell[20535, 582, 2084, 55, 64, "Input",ExpressionUUID->"77876523-1e45-4d79-9965-d0509079e7a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22656, 642, 223, 4, 31, "Subsubsection",ExpressionUUID->"9210d459-52b8-453f-92eb-bb4dfa480bc3"],
Cell[22882, 648, 8137, 231, 239, "Input",ExpressionUUID->"07d68a33-dd34-4133-8462-29bd1696a6d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31056, 884, 585, 18, 32, "Subsubsection",ExpressionUUID->"ac177e9d-edf9-4889-9b52-e05134c67649"],
Cell[31644, 904, 5579, 176, 165, "Input",ExpressionUUID->"eaa88ba6-9819-4d92-bf25-07f23a0b59f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37260, 1085, 602, 17, 32, "Subsubsection",ExpressionUUID->"ec8797df-a8ce-4e14-9aaf-55431b6a2344"],
Cell[37865, 1104, 2213, 68, 120, "Input",ExpressionUUID->"662389f0-a41e-4479-bc3f-04a3cf297210"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40115, 1177, 445, 6, 45, "Subchapter",ExpressionUUID->"2746f9b0-64be-4894-aeda-b94cf3da3563"],
Cell[40563, 1185, 291, 6, 24, "Text",ExpressionUUID->"b2ae5d29-770c-4670-bfa5-be2225e9964e"],
Cell[CellGroupData[{
Cell[40879, 1195, 391, 6, 31, "Subsubsection",ExpressionUUID->"9c6d0b0c-d259-46fb-b2cc-20505568dd2d"],
Cell[CellGroupData[{
Cell[41295, 1205, 827, 21, 21, "Input",ExpressionUUID->"1ccd3872-b1b0-40fb-8c8b-c881f3b23908"],
Cell[42125, 1228, 695, 16, 36, "Output",ExpressionUUID->"fd3a5c96-e009-4ed2-a107-f5780d707575"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42869, 1250, 406, 6, 31, "Subsubsection",ExpressionUUID->"db706cb9-d6ca-4c83-a914-ef5a224a8bce"],
Cell[43278, 1258, 1433, 39, 52, "Input",ExpressionUUID->"e8c596fd-7a8c-461d-9df3-87595da6b28a"],
Cell[CellGroupData[{
Cell[44736, 1301, 468, 10, 21, "Input",ExpressionUUID->"74456c2f-a0d4-4723-b8ac-f1c29a3f1d71"],
Cell[45207, 1313, 689, 17, 36, "Output",ExpressionUUID->"646cb057-e63a-473b-9fbe-2ab1fe8fcb10"]
}, Open  ]],
Cell[45911, 1333, 393, 8, 40, "Text",ExpressionUUID->"b944299d-38b2-42bd-9b51-e70b83bd7e06"],
Cell[CellGroupData[{
Cell[46329, 1345, 1725, 47, 37, "Input",ExpressionUUID->"97a1d70c-2f3a-4940-81c3-01f74e76ae0c"],
Cell[48057, 1394, 601, 15, 36, "Output",ExpressionUUID->"29535477-88f8-4808-94a1-0bd262da5bf4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48719, 1416, 595, 13, 45, "Subchapter",ExpressionUUID->"97202fa2-8cf3-4e35-96ca-a8229abead53"],
Cell[49317, 1431, 352, 7, 24, "Text",ExpressionUUID->"d1b9555e-521a-4864-a888-6b109a5be4f5"],
Cell[CellGroupData[{
Cell[49694, 1442, 391, 6, 31, "Subsubsection",ExpressionUUID->"1f4dfc05-3fa3-4aa6-a561-1de1b7034331"],
Cell[CellGroupData[{
Cell[50110, 1452, 863, 24, 21, "Input",ExpressionUUID->"fa63a39d-ce82-4e48-ac3a-683662a1d1f9"],
Cell[50976, 1478, 855, 24, 39, "Output",ExpressionUUID->"15ab1190-2681-400c-8e77-35276b4ccb91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51868, 1507, 866, 24, 21, "Input",ExpressionUUID->"a19841ae-50b7-4894-8c7e-b5aaa1a0a6af"],
Cell[52737, 1533, 3978, 116, 84, "Output",ExpressionUUID->"3e8d6c61-fac9-459f-bb44-f8031871cab7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56764, 1655, 405, 6, 31, "Subsubsection",ExpressionUUID->"7045abb6-3a88-4c10-a946-3a6b3c5a7aba"],
Cell[57172, 1663, 1634, 44, 52, "Input",ExpressionUUID->"7291e729-0948-4f54-8d7d-b3026f2431d3"],
Cell[CellGroupData[{
Cell[58831, 1711, 652, 16, 21, "Input",ExpressionUUID->"e296e103-b8c9-441d-b6fc-2cb2d74ed6ac"],
Cell[59486, 1729, 2838, 85, 57, "Output",ExpressionUUID->"e9fe4247-aa4f-4ea8-a897-6e6e83ade37e"]
}, Open  ]],
Cell[62339, 1817, 499, 9, 40, "Text",ExpressionUUID->"6864e869-8f44-46f8-b989-da28ba091bd0"],
Cell[CellGroupData[{
Cell[62863, 1830, 1623, 46, 52, "Input",ExpressionUUID->"68f25eaf-b310-4542-9cb6-d3589b66e901"],
Cell[64489, 1878, 2688, 81, 70, "Output",ExpressionUUID->"e5c597c6-c245-4daf-aa03-d77cc692fa1f"]
}, Open  ]],
Cell[67192, 1962, 283, 7, 24, "Text",ExpressionUUID->"db458672-38b8-45a3-836b-f14d8c4a4f98"],
Cell[CellGroupData[{
Cell[67500, 1973, 1954, 55, 52, "Input",ExpressionUUID->"cf0f77e0-6352-480f-95df-0766e6d49583"],
Cell[69457, 2030, 1439, 44, 39, "Output",ExpressionUUID->"1de11fd0-9c47-4444-8944-4dab768dd287"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70969, 2082, 163, 3, 48, "Chapter",ExpressionUUID->"9dd1118e-b5d6-495c-8f80-f810cd3bac8c"],
Cell[71135, 2087, 281, 6, 24, "Text",ExpressionUUID->"6ff47465-d2ac-435f-9026-f7a1b4d2ddb1"],
Cell[CellGroupData[{
Cell[71441, 2097, 242, 4, 31, "Subsubsection",ExpressionUUID->"2ea164ed-14e4-45ca-8c8a-5ba75f19bbc5"],
Cell[71686, 2103, 5332, 152, 295, "Input",ExpressionUUID->"190374a7-13e5-419a-b279-0c97639975f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77055, 2260, 445, 6, 45, "Subchapter",ExpressionUUID->"896b0713-7cac-4a11-a18e-1df33c979f46"],
Cell[77503, 2268, 2255, 54, 50, "Input",ExpressionUUID->"3abb2ffd-6603-4747-bea0-1f94b16085dc"],
Cell[79761, 2324, 774, 20, 37, "Input",ExpressionUUID->"b81b597a-3a65-4f3b-8b1b-5c763206306f"],
Cell[CellGroupData[{
Cell[80560, 2348, 2277, 58, 67, "Input",ExpressionUUID->"4d27eb41-affe-437e-85ba-0f044ad9a6f0"],
Cell[82840, 2408, 78069, 1383, 179, "Output",ExpressionUUID->"c7d3e064-b04c-46a0-bc8e-d9d0903673fa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160958, 3797, 595, 13, 45, "Subchapter",ExpressionUUID->"81603a52-63d8-4d00-88da-4e71300c84f7"],
Cell[161556, 3812, 5359, 130, 111, "Input",ExpressionUUID->"16e401f7-c99f-46bf-9010-b981070d04ba"],
Cell[166918, 3944, 923, 22, 37, "Input",ExpressionUUID->"ec06ef70-0096-4073-85b0-3795e7e6ba68"],
Cell[CellGroupData[{
Cell[167866, 3970, 2487, 62, 67, "Input",ExpressionUUID->"382b0c67-13b7-4805-bb83-8c02e50274be"],
Cell[170356, 4034, 78012, 1382, 179, "Output",ExpressionUUID->"06f6b223-2b4e-4a8c-9dd1-2db10af91117"]
}, Open  ]],
Cell[248383, 5419, 991, 22, 37, "Input",ExpressionUUID->"e5f884c4-477e-4c89-bb23-9ea48bf950af"],
Cell[CellGroupData[{
Cell[249399, 5445, 1646, 45, 52, "Input",ExpressionUUID->"f1847491-232f-431b-a1eb-66a57f2434ea"],
Cell[251048, 5492, 66614, 1168, 179, "Output",ExpressionUUID->"866613d2-9cae-4db3-984d-1ab596e2eb1e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[317723, 6667, 214, 4, 48, "Chapter",ExpressionUUID->"026741e3-1cd2-42ac-900d-abe62894e448"],
Cell[317940, 6673, 487, 13, 24, "Text",ExpressionUUID->"91527e1e-8b24-41c3-b0ee-0b0980d3de5d"],
Cell[318430, 6688, 331, 8, 21, "Input",ExpressionUUID->"2fe3d485-14af-493f-bfaa-6ba4dd3178c9"],
Cell[CellGroupData[{
Cell[318786, 6700, 2033, 57, 52, "Input",ExpressionUUID->"7c386a7d-2e4a-42c7-89c9-858cac7fe8f8"],
Cell[320822, 6759, 1952, 59, 39, "Output",ExpressionUUID->"1f9ff74c-1acc-47ed-b15f-e898052edb84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322811, 6823, 1256, 33, 52, "Input",ExpressionUUID->"be950a8d-93b0-47ab-8be7-c09ac5072f0b"],
Cell[324070, 6858, 918, 20, 26, "Output",ExpressionUUID->"28342d13-84e8-485a-b540-bd035f0ab906"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325025, 6883, 2017, 57, 84, "Input",ExpressionUUID->"7928a140-2861-4ee4-b7bf-94e4f28b93d1"],
Cell[327045, 6942, 1181, 32, 40, "Output",ExpressionUUID->"ac0b89ac-acd5-4363-a305-3bb3013f3294"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328263, 6979, 1180, 32, 37, "Input",ExpressionUUID->"e12f8a49-c3f6-4128-bdc3-9045a7cc979f"],
Cell[329446, 7013, 849, 23, 39, "Output",ExpressionUUID->"348ecce0-6728-4804-8cea-ebe12ee8c7fe"]
}, Open  ]]
}, Open  ]]
}
]
*)

